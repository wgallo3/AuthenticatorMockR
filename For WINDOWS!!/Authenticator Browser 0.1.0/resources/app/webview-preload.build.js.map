{"version":3,"file":"webview-preload.build.js","sources":["app/lib/fg/import-web-apis.js","app/webview-preload.js"],"sourcesContent":["import { ipcRenderer, webFrame } from 'electron'\r\nimport rpc from 'pauls-electron-rpc'\r\n\r\n// it would be better to import this from package.json\r\nconst BEAKER_VERSION = '0.0.1'\r\nconst WITH_CALLBACK_TYPE_PREFIX = '_with_cb_';\r\n\r\nconst readableToCallback = (rpcAPI) => {\r\n  return (arg1, arg2, cb) => {\r\n    return new Promise((resolve, reject) => {\r\n      var r = rpcAPI(arg1, arg2);\r\n      r.on('data', data => cb.apply(cb, data));\r\n      r.on('error', err => reject(err));\r\n      r.on('end', () => resolve());\r\n    });\r\n  }\r\n}\r\n\r\n// method which will populate window.beaker with the APIs deemed appropriate for the protocol\r\nexport default function () {\r\n\r\n  // mark the safe protocol as 'secure' to enable all DOM APIs\r\n  // webFrame.registerURLSchemeAsSecure('safe');\r\n  window.beaker = { version: BEAKER_VERSION }\r\n  var webAPIs = ipcRenderer.sendSync('get-web-api-manifests', window.location.protocol)\r\n\r\n  for (var k in webAPIs) {\r\n\r\n    let fnsToImport = [];\r\n    let fnsWithCallback = [];\r\n    for (var fn in webAPIs[k]) {\r\n      // We adapt the functions which contain a callback\r\n      if (fn.startsWith(WITH_CALLBACK_TYPE_PREFIX)) {\r\n        // We use a readable type to receive the data from rpc channel\r\n        let manifest = {[fn]: 'readable'};\r\n        let rpcAPI = rpc.importAPI(WITH_CALLBACK_TYPE_PREFIX + k, manifest, { timeout: false })\r\n        // We expose the function removing the WITH_CALLBACK_TYPE_PREFIX prefix\r\n        let newFnName = fn.replace(WITH_CALLBACK_TYPE_PREFIX, '');\r\n        fnsWithCallback[newFnName] = readableToCallback(rpcAPI[fn]);\r\n      } else {\r\n        fnsToImport[fn] = webAPIs[k][fn];\r\n      }\r\n    }\r\n\r\n    window[k] = Object.assign(rpc.importAPI(k, fnsToImport, { timeout: false }), fnsWithCallback);\r\n  }\r\n}\r\n","import importWebAPIs from './lib/fg/import-web-apis'\r\nimport babelBrowserBuild from 'browser-es-module-loader/dist/babel-browser-build'\r\nimport BrowserESModuleLoader from 'browser-es-module-loader/dist/browser-es-module-loader'\r\n\r\n// setup UI\r\nimportWebAPIs()\r\n\r\n// attach globals\r\nwindow.BrowserESModuleLoader = BrowserESModuleLoader"],"names":["BEAKER_VERSION","WITH_CALLBACK_TYPE_PREFIX","readableToCallback","rpcAPI","arg1","arg2","cb","Promise","resolve","reject","r","on","data","apply","err","beaker","version","webAPIs","ipcRenderer","sendSync","window","location","protocol","k","fnsToImport","fnsWithCallback","fn","startsWith","manifest","rpc","importAPI","timeout","newFnName","replace","Object","assign","importWebAPIs","BrowserESModuleLoader"],"mappings":";;;;;;;;;AAGA;AACA,MAAMA,iBAAiB,OAAvB;AACA,MAAMC,4BAA4B,WAAlC;;AAEA,MAAMC,qBAAsBC,MAAD,IAAY;SAC9B,CAACC,IAAD,EAAOC,IAAP,EAAaC,EAAb,KAAoB;WAClB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;UAClCC,IAAIP,OAAOC,IAAP,EAAaC,IAAb,CAAR;QACEM,EAAF,CAAK,MAAL,EAAaC,QAAQN,GAAGO,KAAH,CAASP,EAAT,EAAaM,IAAb,CAArB;QACED,EAAF,CAAK,OAAL,EAAcG,OAAOL,OAAOK,GAAP,CAArB;QACEH,EAAF,CAAK,KAAL,EAAY,MAAMH,SAAlB;KAJK,CAAP;GADF;CADF;;;AAYA,0BAA2B;;;;SAIlBO,MAAP,GAAgB,EAAEC,SAAShB,cAAX,EAAhB;MACIiB,UAAUC,qBAAYC,QAAZ,CAAqB,uBAArB,EAA8CC,OAAOC,QAAP,CAAgBC,QAA9D,CAAd;;OAEK,IAAIC,CAAT,IAAcN,OAAd,EAAuB;;QAEjBO,cAAc,EAAlB;QACIC,kBAAkB,EAAtB;SACK,IAAIC,EAAT,IAAeT,QAAQM,CAAR,CAAf,EAA2B;;UAErBG,GAAGC,UAAH,CAAc1B,yBAAd,CAAJ,EAA8C;;YAExC2B,WAAW,EAAC,CAACF,EAAD,GAAM,UAAP,EAAf;YACIvB,SAAS0B,IAAIC,SAAJ,CAAc7B,4BAA4BsB,CAA1C,EAA6CK,QAA7C,EAAuD,EAAEG,SAAS,KAAX,EAAvD,CAAb;;YAEIC,YAAYN,GAAGO,OAAH,CAAWhC,yBAAX,EAAsC,EAAtC,CAAhB;wBACgB+B,SAAhB,IAA6B9B,mBAAmBC,OAAOuB,EAAP,CAAnB,CAA7B;OANF,MAOO;oBACOA,EAAZ,IAAkBT,QAAQM,CAAR,EAAWG,EAAX,CAAlB;;;;WAIGH,CAAP,IAAYW,OAAOC,MAAP,CAAcN,IAAIC,SAAJ,CAAcP,CAAd,EAAiBC,WAAjB,EAA8B,EAAEO,SAAS,KAAX,EAA9B,CAAd,EAAiEN,eAAjE,CAAZ;;;;ACxCJ;AACAW;;;AAGAhB,OAAOiB,qBAAP,GAA+BA,qBAA/B"}