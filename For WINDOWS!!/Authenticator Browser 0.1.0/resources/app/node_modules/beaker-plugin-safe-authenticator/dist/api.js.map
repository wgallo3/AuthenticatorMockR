{"version":3,"file":"api.js","sources":["webpack:///webpack/bootstrap d0dfb692b2931c7a97ba","webpack:///src/api/index.js","webpack:///src/api/ffiLoader.js","webpack:///src/ffi/ffi_loader.js","webpack:///external \"ffi\"","webpack:///external \"os\"","webpack:///external \"path\"","webpack:///src/ffi/client_manager.js","webpack:///./~/i18n/index.js","webpack:///./~/i18n/i18n.js","webpack:///./~/sprintf-js/src/sprintf.js","webpack:///external \"fs\"","webpack:///external \"url\"","webpack:///./~/debug/src/index.js","webpack:///./~/debug/src/browser.js","webpack:///./~/debug/src/debug.js","webpack:///./~/ms/index.js","webpack:///./~/debug/src/node.js","webpack:///external \"tty\"","webpack:///external \"util\"","webpack:///external \"net\"","webpack:///./~/mustache/mustache.js","webpack:///./~/messageformat/lib/messageformat.js","webpack:///./~/messageformat/lib/messageformat-parser.js","webpack:///./~/make-plural/plurals.js","webpack:///./~/make-plural/make-plural.js","webpack:///./~/make-plural/data/plurals.json","webpack:///./~/math-interval-parser/lib/index.js","webpack:///./~/xregexp/xregexp-all.js","webpack:///src/config.js","webpack:///src/ffi/refs/types.js","webpack:///external \"ref\"","webpack:///./~/ref-struct/lib/struct.js","webpack:///external \"assert\"","webpack:///./~/enum/index.js","webpack:///./~/enum/dist/enum.js","webpack:///./~/enum/dist/enumItem.js","webpack:///./~/enum/dist/isType.js","webpack:///./~/enum/dist/indexOf.js","webpack:///./~/is-buffer/index.js","webpack:///src/ffi/refs/typesParser.js","webpack:///./~/ref-array/lib/array.js","webpack:///./~/array-index/index.js","webpack:///./~/es6-symbol/index.js","webpack:///./~/es6-symbol/is-implemented.js","webpack:///./~/es6-symbol/polyfill.js","webpack:///./~/d/index.js","webpack:///./~/es5-ext/object/assign/index.js","webpack:///./~/es5-ext/object/assign/is-implemented.js","webpack:///./~/es5-ext/object/assign/shim.js","webpack:///./~/es5-ext/object/keys/index.js","webpack:///./~/es5-ext/object/keys/is-implemented.js","webpack:///./~/es5-ext/object/keys/shim.js","webpack:///./~/es5-ext/object/valid-value.js","webpack:///./~/es5-ext/object/normalize-options.js","webpack:///./~/es5-ext/object/is-callable.js","webpack:///./~/es5-ext/string/#/contains/index.js","webpack:///./~/es5-ext/string/#/contains/is-implemented.js","webpack:///./~/es5-ext/string/#/contains/shim.js","webpack:///./~/es6-symbol/validate-symbol.js","webpack:///./~/es6-symbol/is-symbol.js","webpack:///src/ffi/refs/typesConstructor.js","webpack:///src/ffi/sys_uri_loader.js","webpack:///./src/constants.json","webpack:///src/ffi/FfiApi.js","webpack:///./src/ffi/error_code_lookup.json","webpack:///src/api/client.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d0dfb692b2931c7a97ba","import * as ffiLoader from './ffiLoader';\r\nimport * as client from './client';\r\n\r\nexport const safeAuthApi = [\r\n  {\r\n    name: 'safeAuthenticator',\r\n    isInternal: true,\r\n    manifest: client.manifest,\r\n    methods: client\r\n  }\r\n];\r\n\r\nexport const ffi = {\r\n  client,\r\n  ffiLoader\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// src/api/index.js","import ffiLoader from '../ffi/ffi_loader';\r\n\r\n/* eslint-disable import/prefer-default-export */\r\nexport const loadLibrary = (libPath) => ffiLoader.loadLibrary(libPath);\r\n/* eslint-enable import/prefer-default-export */\r\n\n\n\n// WEBPACK FOOTER //\n// src/api/ffiLoader.js","/* eslint-disable import/no-unresolved, import/extensions */\r\nimport ffi from 'ffi';\r\n/* eslint-enable import/no-unresolved, import/extensions */\r\nimport os from 'os';\r\nimport path from 'path';\r\nimport clientManager from './client_manager';\r\nimport CONST from './../constants.json';\r\nimport FfiApi from './FfiApi';\r\n\r\nclass FfiLoader {\r\n  constructor() {\r\n    this.mods = [clientManager];\r\n  }\r\n\r\n  loadLibrary(libPath = CONST.DEFAULT_LIB_PATH[os.platform()]) {\r\n    return new Promise((resolve, reject) => {\r\n      let ffiFunctions = {};\r\n\r\n      // Load all modules\r\n      let functionsToRegister;\r\n      this.mods.forEach((mod) => {\r\n        if (!(mod instanceof FfiApi)) {\r\n          return;\r\n        }\r\n        functionsToRegister = mod.getFunctionsToRegister();\r\n        if (!functionsToRegister) {\r\n          return;\r\n        }\r\n        ffiFunctions = Object.assign({}, ffiFunctions, functionsToRegister);\r\n      });\r\n      try {\r\n        const safeLib = {};\r\n        // safeCore = ffi.Library(path.resolve(__dirname, libPath), ffiFunctions);\r\n\r\n        const RTLD_NOW = ffi.DynamicLibrary.FLAGS.RTLD_NOW;\r\n        const RTLD_GLOBAL = ffi.DynamicLibrary.FLAGS.RTLD_GLOBAL;\r\n        const mode = RTLD_NOW || RTLD_GLOBAL;\r\n\r\n        if (os.platform() === 'win32') {\r\n          ffi.DynamicLibrary(path.resolve(__dirname, 'libwinpthread-1'), mode);\r\n        }\r\n        const lib = ffi.DynamicLibrary(path.resolve(__dirname, libPath), mode);\r\n        let funcDefinition;\r\n        Object.keys(ffiFunctions).forEach((funcName) => {\r\n          funcDefinition = ffiFunctions[funcName];\r\n          safeLib[funcName] = ffi.ForeignFunction(lib.get(funcName),\r\n            funcDefinition[0], funcDefinition[1]);\r\n        });\r\n\r\n        this.mods.forEach((mod) => {\r\n          if (!(mod instanceof FfiApi)) {\r\n            return;\r\n          }\r\n          mod.setSafeLib(safeLib);\r\n        });\r\n\r\n        resolve();\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst ffiLoader = new FfiLoader();\r\nexport default ffiLoader;\r\n\n\n\n// WEBPACK FOOTER //\n// src/ffi/ffi_loader.js","module.exports = require(\"ffi\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ffi\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"os\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"os\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 5\n// module chunks = 0","/**\r\n * Client Manager\r\n * Expose API for Authenticator as a client\r\n */\r\n/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable import/no-unresolved, import/extensions */\r\nimport ffi from 'ffi';\r\n/* eslint-enable import/no-unresolved, import/extensions */\r\nimport i18n from 'i18n';\r\nimport config from '../config';\r\nimport * as types from './refs/types';\r\nimport * as typeParser from './refs/typesParser';\r\nimport * as typeConstructor from './refs/typesConstructor';\r\nimport systemUriLoader from './sys_uri_loader';\r\nimport FfiApi from './FfiApi';\r\nimport CONST from './../constants.json';\r\nimport ERRORS from './error_code_lookup.json';\r\n\r\n// Private variable symbols\r\nconst _networkState = Symbol('networkState');\r\nconst _networkStateChangeListener = Symbol('networkStateChangeListener');\r\nconst _networkStateChangeIpcListener = Symbol('networkStateChangeIpcListener');\r\nconst _appListUpdateListener = Symbol('appListUpdateListener');\r\nconst _authReqListener = Symbol('authReqListener');\r\nconst _containerReqListener = Symbol('containerReqListener');\r\nconst _reqErrorListener = Symbol('reqErrorListener');\r\nconst _authenticatorHandle = Symbol('clientHandle');\r\nconst _reqDecryptList = Symbol('reqDecryptList');\r\nconst _callbackRegistry = Symbol('callbackRegistry');\r\n\r\nclass ClientManager extends FfiApi {\r\n  constructor() {\r\n    super();\r\n    config.i18n();\r\n    this[_networkState] = CONST.NETWORK_STATUS.DISCONNECTED;\r\n    this[_networkStateChangeListener] = null;\r\n    this[_networkStateChangeIpcListener] = null;\r\n    this[_appListUpdateListener] = null;\r\n    this[_authReqListener] = null;\r\n    this[_containerReqListener] = null;\r\n    this[_reqErrorListener] = null;\r\n    this[_authenticatorHandle] = null;\r\n    this[_reqDecryptList] = {};\r\n    this[_callbackRegistry] = {};\r\n  }\r\n\r\n  get authenticatorHandle() {\r\n    return this[_authenticatorHandle];\r\n  }\r\n\r\n  get networkState() {\r\n    return this[_networkState];\r\n  }\r\n\r\n  /**\r\n   * Functions to register with FFI library\r\n   * @returns Object\r\n   */\r\n  /* eslint-disable no-unused-vars, class-methods-use-this */\r\n  getFunctionsToRegister() {\r\n    /* eslint-enable no-unused-vars, class-methods-use-this */\r\n    return {\r\n      create_acc: [types.int32, [types.CString, types.CString, types.CString, types.AppHandlePointer, 'pointer', 'pointer']],\r\n      login: [types.int32, [types.CString, types.CString, types.AppHandlePointer, 'pointer', 'pointer']],\r\n      auth_decode_ipc_msg: [types.Void, [types.voidPointer, types.CString, types.voidPointer, 'pointer', 'pointer', 'pointer']],\r\n      encode_auth_resp: [types.Void, [types.voidPointer, types.AuthReqPointer, types.u32, types.bool, types.voidPointer, 'pointer']],\r\n      encode_containers_resp: [types.Void, [types.voidPointer, types.ContainersReqPointer, types.u32, types.bool, types.voidPointer, 'pointer']],\r\n      authenticator_registered_apps: [types.Void, [types.voidPointer, types.voidPointer, 'pointer']],\r\n      authenticator_revoke_app: [types.Void, [types.voidPointer, types.CString, types.voidPointer, 'pointer']]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Set SAFE Network connectivity state listener\r\n   * @param cb - callback to be invoked on network state change\r\n   */\r\n  setNetworkListener(cb) {\r\n    if (typeof cb !== 'function') {\r\n      throw new Error(i18n.__('messages.must_be_function', i18n.__('Network listener callback')));\r\n    }\r\n    this[_networkStateChangeListener] = cb;\r\n  }\r\n\r\n  /**\r\n   * Set registered app list update listener\r\n   * @param cb\r\n   */\r\n  setAppListUpdateListener(cb) {\r\n    if (typeof cb !== 'function') {\r\n      throw new Error(i18n.__('messages.must_be_function', i18n.__('App list listener callback')));\r\n    }\r\n    this[_appListUpdateListener] = cb;\r\n  }\r\n\r\n  /**\r\n   * Set auth request listener\r\n   * @param cb\r\n   */\r\n  setAuthReqListener(cb) {\r\n    if (typeof cb !== 'function') {\r\n      return;\r\n    }\r\n    this[_authReqListener] = cb;\r\n  }\r\n\r\n  /**\r\n   * Set container request listener\r\n   * @param cb\r\n   */\r\n  setContainerReqListener(cb) {\r\n    if (typeof cb !== 'function') {\r\n      return;\r\n    }\r\n    this[_containerReqListener] = cb;\r\n  }\r\n\r\n  /**\r\n   * Set request error listener\r\n   * @param cb\r\n   */\r\n  setReqErrorListener(cb) {\r\n    if (typeof cb !== 'function') {\r\n      return;\r\n    }\r\n    this[_reqErrorListener] = cb;\r\n  }\r\n\r\n  /**\r\n   * Set Network IPC listener\r\n   * @param cb\r\n   */\r\n  setNetworkIpcListener(cb) {\r\n    this[_networkStateChangeIpcListener] = cb;\r\n  }\r\n\r\n  /**\r\n   * Authorise application request\r\n   * @param req\r\n   * @param isAllowed\r\n   * @returns {Promise}\r\n   */\r\n  authDecision(req, isAllowed) {\r\n    return new Promise((resolve, reject) => {\r\n      if (!this.authenticatorHandle) {\r\n        return reject(new Error(i18n.__('messages.unauthorised')));\r\n      }\r\n\r\n      if (!req || typeof isAllowed !== 'boolean') {\r\n        return reject(new Error(i18n.__('messages.invalid_params')));\r\n      }\r\n\r\n      if (!req.reqId || !this[_reqDecryptList][req.reqId]) {\r\n        return reject(new Error(i18n.__('messages.invalid_req')));\r\n      }\r\n\r\n      const authReq = types.allocAuthReq(typeConstructor.constructAuthReq(\r\n        this[_reqDecryptList][req.reqId]));\r\n\r\n      delete this[_reqDecryptList][req.reqId];\r\n\r\n      try {\r\n        this[_callbackRegistry].authDecisionCb = ffi.Callback(types.Void,\r\n          [types.voidPointer, types.FfiResult, types.CString], (userData, result, res) => {\r\n            const code = result.error_code;\r\n            if (code !== 0 && !res) {\r\n              return reject(ERRORS[code]);\r\n            }\r\n            if (isAllowed) {\r\n              this._updateAppList();\r\n            }\r\n            resolve(res);\r\n          });\r\n        this.safeLib.encode_auth_resp(\r\n          this.authenticatorHandle,\r\n          authReq,\r\n          req.reqId,\r\n          isAllowed,\r\n          types.Null,\r\n          this[_callbackRegistry].authDecisionCb\r\n        );\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Authorise container request\r\n   * @param req\r\n   * @param isAllowed\r\n   * @returns {Promise}\r\n   */\r\n  containerDecision(req, isAllowed) {\r\n    return new Promise((resolve, reject) => {\r\n      if (!this.authenticatorHandle) {\r\n        return reject(new Error(i18n.__('messages.unauthorised')));\r\n      }\r\n\r\n      if (!req || typeof isAllowed !== 'boolean') {\r\n        return reject(new Error(i18n.__('messages.invalid_params')));\r\n      }\r\n\r\n      if (!req.reqId || !this[_reqDecryptList][req.reqId]) {\r\n        return reject(new Error(i18n.__('messages.invalid_req')));\r\n      }\r\n      const contReq = types.allocContainerReq(typeConstructor.constructContainerReq(\r\n        this[_reqDecryptList][req.reqId]));\r\n\r\n      delete this[_reqDecryptList][req.reqId];\r\n\r\n      try {\r\n        this[_callbackRegistry].contDecisionCb = ffi.Callback(types.Void,\r\n          [types.voidPointer, types.FfiResult, types.CString], (userData, result, res) => {\r\n            const code = result.error_code;\r\n            if (code !== 0 && !res) {\r\n              return reject(ERRORS[code]);\r\n            }\r\n            if (isAllowed) {\r\n              this._updateAppList();\r\n            }\r\n            resolve(res);\r\n          });\r\n\r\n        this.safeLib.encode_containers_resp(\r\n          this.authenticatorHandle,\r\n          contReq,\r\n          req.reqId,\r\n          isAllowed,\r\n          types.Null,\r\n          this[_callbackRegistry].contDecisionCb\r\n        );\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Revoke application authorisation\r\n   * @param appId\r\n   * @returns {Promise}\r\n   */\r\n  /* eslint-disable class-methods-use-this */\r\n  revokeApp(appId) {\r\n    /* eslint-enable class-methods-use-this */\r\n    return new Promise((resolve, reject) => {\r\n      if (!appId) {\r\n        return reject(new Error(i18n.__('messages.should_not_be_empty', i18n.__('AppId'))));\r\n      }\r\n\r\n      if (typeof appId !== 'string') {\r\n        return reject(new Error(i18n.__('messages.must_be_string', i18n.__('AppId'))));\r\n      }\r\n\r\n      if (!appId.trim()) {\r\n        return reject(new Error(i18n.__('messages.should_not_be_empty', i18n.__('AppId'))));\r\n      }\r\n\r\n      if (!this.authenticatorHandle) {\r\n        return reject(new Error(i18n.__('messages.unauthorised')));\r\n      }\r\n\r\n      try {\r\n        this[_callbackRegistry].revokeCb = ffi.Callback(types.Void,\r\n          [types.voidPointer, types.FfiResult, types.CString],\r\n          (userData, result, res) => {\r\n            const code = result.error_code;\r\n            if (code !== 0) {\r\n              return reject(ERRORS[code]);\r\n            }\r\n            this._updateAppList();\r\n            try {\r\n              this.openUri(res);\r\n            } catch (e) {\r\n              console.error('Failed to open custom URI after revoke');\r\n            }\r\n            resolve();\r\n          });\r\n\r\n        this.safeLib.authenticator_revoke_app(\r\n          this.authenticatorHandle,\r\n          types.allocCString(appId),\r\n          types.Null,\r\n          this[_callbackRegistry].revokeCb\r\n        );\r\n      } catch (e) {\r\n        reject(e.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * User login\r\n   * @param {string} locator\r\n   * @param {string} secret\r\n   * @returns {Promise}\r\n   */\r\n  login(locator, secret) {\r\n    return new Promise((resolve, reject) => {\r\n      const validationErr = this._isUserCredentialsValid(locator, secret);\r\n      if (validationErr) {\r\n        return reject(validationErr);\r\n      }\r\n\r\n      const appHandle = types.allocAppHandlePointer();\r\n\r\n      const onStateChange = this._getFfiNetworkStateCb();\r\n\r\n      try {\r\n        const onResult = (err, res) => {\r\n          if (err || res !== 0) {\r\n            return reject(ERRORS[res]);\r\n          }\r\n          this[_authenticatorHandle] = appHandle.deref();\r\n          this._pushNetworkState(CONST.NETWORK_STATUS.CONNECTED);\r\n          resolve();\r\n        };\r\n        this.safeLib.login.async(\r\n          types.allocCString(locator),\r\n          types.allocCString(secret),\r\n          appHandle,\r\n          types.Null,\r\n          onStateChange,\r\n          onResult);\r\n      } catch (e) {\r\n        console.error(`Login error :: ${e.message}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create new account\r\n   * @param {string} locator\r\n   * @param {string} secret\r\n   * @returns {Promise}\r\n   */\r\n  createAccount(locator, secret, invitation) {\r\n    return new Promise((resolve, reject) => {\r\n      const validationErr = this._isUserCredentialsValid(locator, secret);\r\n      if (validationErr) {\r\n        return reject(validationErr);\r\n      }\r\n      const appHandle = types.allocAppHandlePointer();\r\n\r\n      const onStateChange = this._getFfiNetworkStateCb();\r\n\r\n      if (!(invitation && (typeof invitation === 'string') && invitation.trim())) {\r\n        return Promise.reject(new Error(i18n.__('messages.invalid_invite_code')));\r\n      }\r\n\r\n      try {\r\n        const onResult = (err, res) => {\r\n          if (err || res !== 0) {\r\n            return reject(ERRORS[res]);\r\n          }\r\n          this[_authenticatorHandle] = appHandle.deref();\r\n          this._pushNetworkState(CONST.NETWORK_STATUS.CONNECTED);\r\n          resolve();\r\n        };\r\n        this.safeLib.create_acc.async(\r\n          types.allocCString(locator),\r\n          types.allocCString(secret),\r\n          types.allocCString(invitation),\r\n          appHandle,\r\n          types.Null,\r\n          onStateChange,\r\n          onResult);\r\n      } catch (e) {\r\n        console.error(`Create account error :: ${e.message}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * User logout\r\n   */\r\n  logout() {\r\n    this._pushNetworkState(-1);\r\n    this[_authenticatorHandle] = null;\r\n  }\r\n\r\n  /**\r\n   * Get list of authorised applications\r\n   * @returns {Promise}\r\n   */\r\n  getAuthorisedApps() {\r\n    return new Promise((resolve, reject) => {\r\n      if (!this.authenticatorHandle) {\r\n        return reject(new Error(i18n.__('messages.unauthorised')));\r\n      }\r\n      try {\r\n        this[_callbackRegistry].appListCb = ffi.Callback(types.Void,\r\n          [types.voidPointer, types.FfiResult, types.RegisteredAppPointer, types.usize],\r\n          (userData, result, appList, len) => {\r\n            if (result.error_code !== 0) {\r\n              return reject(ERRORS[result.error_code]);\r\n            }\r\n            const apps = typeParser.parseRegisteredAppArray(appList, len);\r\n            resolve(apps);\r\n          });\r\n        this.safeLib.authenticator_registered_apps(\r\n          this.authenticatorHandle,\r\n          types.Null,\r\n          this[_callbackRegistry].appListCb\r\n        );\r\n      } catch (e) {\r\n        reject(e.message);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Decrypt auth or container request\r\n   * @param url\r\n   * @returns {Promise}\r\n   */\r\n  decryptRequest(url) {\r\n    return new Promise((resolve, reject) => {\r\n      if (!url) {\r\n        return reject();\r\n      }\r\n\r\n      const msg = url.replace('safe-auth://', '');\r\n\r\n      if (!this.authenticatorHandle) {\r\n        return reject(new Error(i18n.__('messages.unauthorised')));\r\n      }\r\n\r\n      this[_callbackRegistry].decryptReqAuthCb = ffi.Callback(types.Void,\r\n        [types.voidPointer, types.u32, types.AuthReqPointer], (userData, reqId, req) => {\r\n          if (typeof this[_authReqListener] !== 'function') {\r\n            return;\r\n          }\r\n          const authReq = typeParser.parseAuthReq(req.deref());\r\n          this[_reqDecryptList][reqId] = authReq;\r\n          this[_authReqListener]({\r\n            reqId,\r\n            authReq\r\n          });\r\n        });\r\n\r\n      this[_callbackRegistry].decryptReqContainerCb = ffi.Callback(types.Void,\r\n        [types.voidPointer, types.u32, types.ContainersReqPointer], (userData, reqId, req) => {\r\n          if (typeof this[_containerReqListener] !== 'function') {\r\n            return;\r\n          }\r\n          const contReq = typeParser.parseContainerReq(req.deref());\r\n          this[_reqDecryptList][reqId] = contReq;\r\n          this[_containerReqListener]({\r\n            reqId,\r\n            contReq\r\n          });\r\n        });\r\n\r\n      this[_callbackRegistry].decryptReqErrorCb = ffi.Callback(types.Void,\r\n        [types.voidPointer, types.FfiResult, types.CString], (userData, result, error) => {\r\n          if (typeof this[_reqErrorListener] !== 'function') {\r\n            return;\r\n          }\r\n          this[_reqErrorListener]({\r\n            code: result.error_code,\r\n            msg: error\r\n          });\r\n        });\r\n\r\n      try {\r\n        this.safeLib.auth_decode_ipc_msg(\r\n          this.authenticatorHandle,\r\n          types.allocCString(msg),\r\n          types.Null,\r\n          this[_callbackRegistry].decryptReqAuthCb,\r\n          this[_callbackRegistry].decryptReqContainerCb,\r\n          this[_callbackRegistry].decryptReqErrorCb);\r\n      } catch (e) {\r\n        console.error(`Auth request decrypt error :: ${e.message}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Register URI scheme for cross platforms\r\n   * @param appInfo\r\n   * @param schemes\r\n   * @returns {*}\r\n   */\r\n  /* eslint-disable class-methods-use-this */\r\n  registerUriScheme(appInfo, schemes) {\r\n    /* eslint-enable class-methods-use-this */\r\n    return systemUriLoader.registerUriScheme(appInfo, schemes);\r\n  }\r\n\r\n  /**\r\n   * Open Custom URI\r\n   * @param uri\r\n   * @returns {*}\r\n   */\r\n  /* eslint-disable class-methods-use-this */\r\n  openUri(uri) {\r\n    /* eslint-enable class-methods-use-this */\r\n    return systemUriLoader.openUri(uri);\r\n  }\r\n\r\n  /**\r\n   * Update app list - Calls app list update listener\r\n   * @private\r\n   */\r\n  _updateAppList() {\r\n    this.getAuthorisedApps()\r\n      .then((apps) => {\r\n        if (typeof this[_appListUpdateListener] === 'function') {\r\n          this[_appListUpdateListener](null, apps);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Prepare FFI network state callback function\r\n   * @returns {*}\r\n   * @private\r\n   */\r\n  _getFfiNetworkStateCb() {\r\n    return ffi.Callback(types.Void,\r\n      [types.voidPointer, types.int32, types.int32], (userData, res, state) => {\r\n        this[_networkState] = state;\r\n        this._pushNetworkState();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Push network state to registered listeners\r\n   * @param state\r\n   * @private\r\n   */\r\n  _pushNetworkState(state) {\r\n    let networkState = state;\r\n    if (typeof networkState === 'undefined') {\r\n      networkState = this[_networkState];\r\n    }\r\n\r\n    this[_networkState] = networkState;\r\n\r\n    if (typeof this[_networkStateChangeListener] === 'function') {\r\n      this[_networkStateChangeListener](null, networkState);\r\n    }\r\n    if (typeof this[_networkStateChangeIpcListener] === 'function') {\r\n      this[_networkStateChangeIpcListener](null, networkState);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate user credential - locator and secret\r\n   * @param locator\r\n   * @param secret\r\n   * @returns {Error}\r\n   * @private\r\n   */\r\n  /* eslint-disable class-methods-use-this */\r\n  _isUserCredentialsValid(locator, secret) {\r\n    /* eslint-enable class-methods-use-this */\r\n    if (!locator) {\r\n      return new Error(i18n.__('messages.should_not_be_empty', i18n.__('Locator')));\r\n    }\r\n\r\n    if (!secret) {\r\n      return new Error(i18n.__('messages.should_not_be_empty', i18n.__('Secret')));\r\n    }\r\n\r\n    if (typeof locator !== 'string') {\r\n      return new Error(i18n.__('messages.must_be_string', i18n.__('Locator')));\r\n    }\r\n\r\n    if (typeof secret !== 'string') {\r\n      return new Error(i18n.__('messages.must_be_string', i18n.__('Secret')));\r\n    }\r\n    if (!locator.trim()) {\r\n      return new Error(i18n.__('messages.should_not_be_empty', i18n.__('Locator')));\r\n    }\r\n\r\n    if (!secret.trim()) {\r\n      return new Error(i18n.__('messages.should_not_be_empty', i18n.__('Secret')));\r\n    }\r\n  }\r\n}\r\n\r\nconst clientManager = new ClientManager();\r\nexport default clientManager;\r\n\n\n\n// WEBPACK FOOTER //\n// src/ffi/client_manager.js","module.exports = require('./i18n');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/i18n/index.js\n// module id = 7\n// module chunks = 0","/**\n * @author      Created by Marcus Spiegel <marcus.spiegel@gmail.com> on 2011-03-25.\n * @link        https://github.com/mashpie/i18n-node\n * @license     http://opensource.org/licenses/MIT\n *\n * @version     0.8.3\n */\n\n'use strict';\n\n// dependencies\nvar vsprintf = require('sprintf-js').vsprintf,\n  fs = require('fs'),\n  url = require('url'),\n  path = require('path'),\n  debug = require('debug')('i18n:debug'),\n  warn = require('debug')('i18n:warn'),\n  error = require('debug')('i18n:error'),\n  Mustache = require('mustache'),\n  Messageformat = require('messageformat'),\n  MakePlural = require('make-plural/make-plural').load(\n    require('make-plural/data/plurals.json')\n  ),\n  parseInterval = require('math-interval-parser').default;\n\n// exports an instance\nmodule.exports = (function() {\n\n  var MessageformatInstanceForLocale = {},\n    PluralsForLocale = {},\n    locales = {},\n    api = {\n      '__': '__',\n      '__n': '__n',\n      '__l': '__l',\n      '__h': '__h',\n      '__mf': '__mf',\n      'getLocale': 'getLocale',\n      'setLocale': 'setLocale',\n      'getCatalog': 'getCatalog',\n      'getLocales': 'getLocales',\n      'addLocale': 'addLocale',\n      'removeLocale': 'removeLocale'\n    },\n    pathsep = path.sep, // ---> means win support will be available in node 0.8.x and above\n    autoReload,\n    cookiename,\n    defaultLocale,\n    directory,\n    directoryPermissions,\n    extension,\n    fallbacks,\n    indent,\n    logDebugFn,\n    logErrorFn,\n    logWarnFn,\n    objectNotation,\n    prefix,\n    queryParameter,\n    register,\n    updateFiles,\n    syncFiles;\n\n  // public exports\n  var i18n = {};\n\n  i18n.locales = locales;\n\n  i18n.version = '0.8.3';\n\n  i18n.configure = function i18nConfigure(opt) {\n\n    // reset locales\n    locales = {};\n\n    // Provide custom API method aliases if desired\n    // This needs to be processed before the first call to applyAPItoObject()\n    if (opt.api && typeof opt.api === 'object') {\n      for (var method in opt.api) {\n        if (opt.api.hasOwnProperty(method)) {\n          var alias = opt.api[method];\n          if (typeof api[method] !== 'undefined') {\n            api[method] = alias;\n          }\n        }\n      }\n    }\n\n    // you may register i18n in global scope, up to you\n    if (typeof opt.register === 'object') {\n      register = opt.register;\n      // or give an array objects to register to\n      if (Array.isArray(opt.register)) {\n        register = opt.register;\n        register.forEach(function(r) {\n          applyAPItoObject(r);\n        });\n      } else {\n        applyAPItoObject(opt.register);\n      }\n    }\n\n    // sets a custom cookie name to parse locale settings from\n    cookiename = (typeof opt.cookie === 'string') ? opt.cookie : null;\n\n    // query-string parameter to be watched - @todo: add test & doc\n    queryParameter = (typeof opt.queryParameter === 'string') ? opt.queryParameter : null;\n\n    // where to store json files\n    directory = (typeof opt.directory === 'string') ?\n      opt.directory : path.join(__dirname, 'locales');\n\n    // permissions when creating new directories\n    directoryPermissions = (typeof opt.directoryPermissions === 'string') ?\n      parseInt(opt.directoryPermissions, 8) : null;\n\n    // write new locale information to disk\n    updateFiles = (typeof opt.updateFiles === 'boolean') ? opt.updateFiles : true;\n\n    // sync locale information accros all files\n    syncFiles = (typeof opt.syncFiles === 'boolean') ? opt.syncFiles : false;\n\n    // what to use as the indentation unit (ex: \"\\t\", \"  \")\n    indent = (typeof opt.indent === 'string') ? opt.indent : '\\t';\n\n    // json files prefix\n    prefix = (typeof opt.prefix === 'string') ? opt.prefix : '';\n\n    // where to store json files\n    extension = (typeof opt.extension === 'string') ? opt.extension : '.json';\n\n    // setting defaultLocale\n    defaultLocale = (typeof opt.defaultLocale === 'string') ? opt.defaultLocale : 'en';\n\n    // auto reload locale files when changed\n    autoReload = (typeof opt.autoReload === 'boolean') ? opt.autoReload : false;\n\n    // enable object notation?\n    objectNotation = (typeof opt.objectNotation !== 'undefined') ? opt.objectNotation : false;\n    if (objectNotation === true) objectNotation = '.';\n\n    // read language fallback map\n    fallbacks = (typeof opt.fallbacks === 'object') ? opt.fallbacks : {};\n\n    // setting custom logger functions\n    logDebugFn = (typeof opt.logDebugFn === 'function') ? opt.logDebugFn : debug;\n    logWarnFn = (typeof opt.logWarnFn === 'function') ? opt.logWarnFn : warn;\n    logErrorFn = (typeof opt.logErrorFn === 'function') ? opt.logErrorFn : error;\n\n    // when missing locales we try to guess that from directory\n    opt.locales = opt.locales || guessLocales(directory);\n\n    // implicitly read all locales\n    if (Array.isArray(opt.locales)) {\n\n      opt.locales.forEach(function(l) {\n        read(l);\n      });\n\n      // auto reload locale files when changed\n      if (autoReload) {\n\n        // watch changes of locale files (it's called twice because fs.watch is still unstable)\n        fs.watch(directory, function(event, filename) {\n          var localeFromFile = guessLocaleFromFile(filename);\n\n          if (localeFromFile && opt.locales.indexOf(localeFromFile) > -1) {\n            logDebug('Auto reloading locale file \"' + filename + '\".');\n            read(localeFromFile);\n          }\n\n        });\n      }\n    }\n  };\n\n  i18n.init = function i18nInit(request, response, next) {\n    if (typeof request === 'object') {\n\n      // guess requested language/locale\n      guessLanguage(request);\n\n      // bind api to req\n      applyAPItoObject(request);\n\n      // looks double but will ensure schema on api refactor\n      i18n.setLocale(request, request.locale);\n    } else {\n      return logError('i18n.init must be called with one parameter minimum, ie. i18n.init(req)');\n    }\n\n    if (typeof response === 'object') {\n      applyAPItoObject(response);\n\n      // and set that locale to response too\n      i18n.setLocale(response, request.locale);\n    }\n\n    // head over to next callback when bound as middleware\n    if (typeof next === 'function') {\n      return next();\n    }\n  };\n\n  i18n.__ = function i18nTranslate(phrase) {\n    var msg;\n    var argv = parseArgv(arguments);\n    var namedValues = argv[0];\n    var args = argv[1];\n\n    // called like __({phrase: \"Hello\", locale: \"en\"})\n    if (typeof phrase === 'object') {\n      if (typeof phrase.locale === 'string' && typeof phrase.phrase === 'string') {\n        msg = translate(phrase.locale, phrase.phrase);\n      }\n    }\n    // called like __(\"Hello\")\n    else {\n      // get translated message with locale from scope (deprecated) or object\n      msg = translate(getLocaleFromObject(this), phrase);\n    }\n\n    // postprocess to get compatible to plurals\n    if (typeof msg === 'object' && msg.one) {\n      msg = msg.one;\n    }\n\n    // in case there is no 'one' but an 'other' rule\n    if (typeof msg === 'object' && msg.other) {\n      msg = msg.other;\n    }\n\n    // head over to postProcessing\n    return postProcess(msg, namedValues, args);\n  };\n\n  i18n.__mf = function i18nMessageformat(phrase) {\n    var msg, mf, f;\n    var targetLocale = defaultLocale;\n    var argv = parseArgv(arguments);\n    var namedValues = argv[0];\n    var args = argv[1];\n\n    // called like __({phrase: \"Hello\", locale: \"en\"})\n    if (typeof phrase === 'object') {\n      if (typeof phrase.locale === 'string' && typeof phrase.phrase === 'string') {\n        msg = phrase.phrase;\n        targetLocale = phrase.locale;\n      }\n    }\n    // called like __(\"Hello\")\n    else {\n      // get translated message with locale from scope (deprecated) or object\n      msg = phrase;\n      targetLocale = getLocaleFromObject(this);\n    }\n\n    msg = translate(targetLocale, msg);\n    // --- end get msg\n\n    // now head over to Messageformat\n    // and try to cache instance\n    if (MessageformatInstanceForLocale[targetLocale]) {\n      mf = MessageformatInstanceForLocale[targetLocale];\n    } else {\n      mf = new Messageformat(targetLocale);\n      mf.compiledFunctions = {};\n      MessageformatInstanceForLocale[targetLocale] = mf;\n    }\n\n    // let's try to cache that function\n    if (mf.compiledFunctions[msg]) {\n      f = mf.compiledFunctions[msg];\n    } else {\n      f = mf.compile(msg);\n      mf.compiledFunctions[msg] = f;\n    }\n\n    return postProcess(f(namedValues), namedValues, args);\n  };\n\n  i18n.__l = function i18nTranslationList(phrase) {\n    var translations = [];\n    Object.keys(locales).sort().forEach(function(l) {\n      translations.push(i18n.__({ phrase: phrase, locale: l }));\n    });\n    return translations;\n  };\n\n  i18n.__h = function i18nTranslationHash(phrase) {\n    var translations = [];\n    Object.keys(locales).sort().forEach(function(l) {\n      var hash = {};\n      hash[l] = i18n.__({ phrase: phrase, locale: l });\n      translations.push(hash);\n    });\n    return translations;\n  };\n\n  i18n.__n = function i18nTranslatePlural(singular, plural, count) {\n    var msg, namedValues, targetLocale, args = [];\n\n    // Accept an object with named values as the last parameter\n    if (argsEndWithNamedObject(arguments)) {\n      namedValues = arguments[arguments.length - 1];\n      args = arguments.length >= 5 ? Array.prototype.slice.call(arguments, 3, -1) : [];\n    } else {\n      namedValues = {};\n      args = arguments.length >= 4 ? Array.prototype.slice.call(arguments, 3) : [];\n    }\n\n    // called like __n({singular: \"%s cat\", plural: \"%s cats\", locale: \"en\"}, 3)\n    if (typeof singular === 'object') {\n      if (\n        typeof singular.locale === 'string' &&\n        typeof singular.singular === 'string' &&\n        typeof singular.plural === 'string'\n      ) {\n        targetLocale = singular.locale;\n        msg = translate(singular.locale, singular.singular, singular.plural);\n      }\n      args.unshift(count);\n\n      // some template engines pass all values as strings -> so we try to convert them to numbers\n      if (typeof plural === 'number' || parseInt(plural, 10) + '' === plural) {\n        count = plural;\n      }\n\n      // called like __n({singular: \"%s cat\", plural: \"%s cats\", locale: \"en\", count: 3})\n      if (typeof singular.count === 'number' || typeof singular.count === 'string') {\n        count = singular.count;\n        args.unshift(plural);\n      }\n    } else {\n      // called like  __n('cat', 3)\n      if (typeof plural === 'number' || parseInt(plural, 10) + '' === plural) {\n        count = plural;\n\n        // we add same string as default\n        // which efectivly copies the key to the plural.value\n        // this is for initialization of new empty translations\n        plural = singular;\n\n        args.unshift(count);\n        args.unshift(plural);\n      }\n      // called like __n('%s cat', '%s cats', 3)\n      // get translated message with locale from scope (deprecated) or object\n      msg = translate(getLocaleFromObject(this), singular, plural);\n      targetLocale = getLocaleFromObject(this);\n    }\n\n    if (count === null) count = namedValues.count;\n\n    // enforce number\n    count = parseInt(count, 10);\n\n    // find the correct plural rule for given locale\n    if (typeof msg === 'object') {\n      var p;\n      // create a new Plural for locale\n      // and try to cache instance\n      if (PluralsForLocale[targetLocale]) {\n        p = PluralsForLocale[targetLocale];\n      } else {\n        // split locales with a region code\n        var lc = targetLocale.toLowerCase().split(/[_-\\s]+/)\n          .filter(function(el){ return true && el; });\n        // take the first part of locale, fallback to full locale\n        p = new MakePlural(lc[0] || targetLocale);\n        PluralsForLocale[targetLocale] = p;\n      }\n\n      // fallback to 'other' on case of missing translations\n      msg = msg[p(count)] || msg.other;\n    }\n\n    // head over to postProcessing\n    return postProcess(msg, namedValues, args, count);\n  };\n\n  i18n.setLocale = function i18nSetLocale(object, locale, skipImplicitObjects) {\n\n    // when given an array of objects => setLocale on each\n    if (Array.isArray(object) && typeof locale === 'string') {\n      for (var i = object.length - 1; i >= 0; i--) {\n        i18n.setLocale(object[i], locale, true);\n      }\n      return i18n.getLocale(object[0]);\n    }\n\n    // defaults to called like i18n.setLocale(req, 'en')\n    var targetObject = object;\n    var targetLocale = locale;\n\n    // called like req.setLocale('en') or i18n.setLocale('en')\n    if (locale === undefined && typeof object === 'string') {\n      targetObject = this;\n      targetLocale = object;\n    }\n\n    // consider a fallback\n    if (!locales[targetLocale] && fallbacks[targetLocale]) {\n      targetLocale = fallbacks[targetLocale];\n    }\n\n    // now set locale on object\n    targetObject.locale = locales[targetLocale] ? targetLocale : defaultLocale;\n\n    // consider any extra registered objects\n    if (typeof register === 'object') {\n      if (Array.isArray(register) && !skipImplicitObjects) {\n        register.forEach(function(r) {\n          r.locale = targetObject.locale;\n        });\n      } else {\n        register.locale = targetObject.locale;\n      }\n    }\n\n    // consider res\n    if (targetObject.res && !skipImplicitObjects) {\n\n      // escape recursion\n      // @see  - https://github.com/balderdashy/sails/pull/3631\n      //       - https://github.com/mashpie/i18n-node/pull/218\n      if (targetObject.res.locals) {\n        i18n.setLocale(targetObject.res, targetObject.locale, true);\n        i18n.setLocale(targetObject.res.locals, targetObject.locale, true);\n      } else {\n        i18n.setLocale(targetObject.res, targetObject.locale);\n      }\n    }\n\n    // consider locals\n    if (targetObject.locals && !skipImplicitObjects) {\n\n      // escape recursion\n      // @see  - https://github.com/balderdashy/sails/pull/3631\n      //       - https://github.com/mashpie/i18n-node/pull/218\n      if (targetObject.locals.res) {\n        i18n.setLocale(targetObject.locals, targetObject.locale, true);\n        i18n.setLocale(targetObject.locals.res, targetObject.locale, true);\n      } else {\n        i18n.setLocale(targetObject.locals, targetObject.locale);\n      }\n    }\n\n    return i18n.getLocale(targetObject);\n  };\n\n  i18n.getLocale = function i18nGetLocale(request) {\n\n    // called like i18n.getLocale(req)\n    if (request && request.locale) {\n      return request.locale;\n    }\n\n    // called like req.getLocale()\n    return this.locale || defaultLocale;\n  };\n\n  i18n.getCatalog = function i18nGetCatalog(object, locale) {\n    var targetLocale;\n\n    // called like i18n.getCatalog(req)\n    if (typeof object === 'object' && typeof object.locale === 'string' && locale === undefined) {\n      targetLocale = object.locale;\n    }\n\n    // called like i18n.getCatalog(req, 'en')\n    if (!targetLocale && typeof object === 'object' && typeof locale === 'string') {\n      targetLocale = locale;\n    }\n\n    // called like req.getCatalog('en')\n    if (!targetLocale && locale === undefined && typeof object === 'string') {\n      targetLocale = object;\n    }\n\n    // called like req.getCatalog()\n    if (!targetLocale &&\n      object === undefined &&\n      locale === undefined &&\n      typeof this.locale === 'string'\n    ) {\n      if (register && register.GLOBAL) {\n        targetLocale = '';\n      } else {\n        targetLocale = this.locale;\n      }\n    }\n\n    // called like i18n.getCatalog()\n    if (targetLocale === undefined || targetLocale === '') {\n      return locales;\n    }\n\n    if (!locales[targetLocale] && fallbacks[targetLocale]) {\n      targetLocale = fallbacks[targetLocale];\n    }\n\n    if (locales[targetLocale]) {\n      return locales[targetLocale];\n    } else {\n      logWarn('No catalog found for \"' + targetLocale + '\"');\n      return false;\n    }\n  };\n\n  i18n.getLocales = function i18nGetLocales() {\n    return Object.keys(locales);\n  };\n\n  i18n.addLocale = function i18nAddLocale(locale) {\n    read(locale);\n  };\n\n  i18n.removeLocale = function i18nRemoveLocale(locale) {\n    delete locales[locale];\n  };\n\n  // ===================\n  // = private methods =\n  // ===================\n\n  var postProcess = function(msg, namedValues, args, count) {\n\n    // test for parsable interval string\n    if ((/\\|/).test(msg)) {\n      msg = parsePluralInterval(msg, count);\n    }\n\n    // replace the counter\n    if (typeof count === 'number') {\n      msg = vsprintf(msg, [parseInt(count, 10)]);\n    }\n\n    // if the msg string contains {{Mustache}} patterns we render it as a mini tempalate\n    if ((/{{.*}}/).test(msg)) {\n      msg = Mustache.render(msg, namedValues);\n    }\n\n    // if we have extra arguments with values to get replaced,\n    // an additional substition injects those strings afterwards\n    if ((/%/).test(msg) && args && args.length > 0) {\n      msg = vsprintf(msg, args);\n    }\n\n    return msg;\n  };\n\n  var argsEndWithNamedObject = function(args) {\n    return (args.length > 1 &&\n      args[args.length - 1] !== null &&\n      typeof args[args.length - 1] === 'object');\n  };\n\n  var parseArgv = function(args) {\n    var namedValues, returnArgs;\n\n    if (argsEndWithNamedObject(args)) {\n      namedValues = args[args.length - 1];\n      returnArgs = Array.prototype.slice.call(args, 1, -1);\n    } else {\n      namedValues = {};\n      returnArgs = args.length >= 2 ? Array.prototype.slice.call(args, 1) : [];\n    }\n\n    return [namedValues, returnArgs];\n  };\n\n  /**\n   * registers all public API methods to a given response object when not already declared\n   */\n  var applyAPItoObject = function(object) {\n\n    var alreadySetted = true;\n\n    // attach to itself if not provided\n    for (var method in api) {\n      if (api.hasOwnProperty(method)) {\n        var alias = api[method];\n\n        // be kind rewind, or better not touch anything already existing\n        if (!object[alias]) {\n          alreadySetted = false;\n          object[alias] = i18n[method].bind(object);\n        }\n      }\n    }\n\n    // set initial locale if not set\n    if (!object.locale) {\n      object.locale = defaultLocale;\n    }\n\n    // escape recursion\n    if (alreadySetted) {\n      return;\n    }\n\n    // attach to response if present (ie. in express)\n    if (object.res) {\n      applyAPItoObject(object.res);\n    }\n\n    // attach to locals if present (ie. in express)\n    if (object.locals) {\n      applyAPItoObject(object.locals);\n    }\n  };\n\n  /**\n   * tries to guess locales by scanning the given directory\n   */\n  var guessLocales = function(directory) {\n    var entries = fs.readdirSync(directory);\n    var localesFound = [];\n\n    for (var i = entries.length - 1; i >= 0; i--) {\n      if (entries[i].match(/^\\./)) continue;\n      var localeFromFile = guessLocaleFromFile(entries[i]);\n      if (localeFromFile) localesFound.push(localeFromFile);\n    }\n\n    return localesFound.sort();\n  };\n\n  /**\n   * tries to guess locales from a given filename\n   */\n  var guessLocaleFromFile = function(filename) {\n    var extensionRegex = new RegExp(extension + '$', 'g');\n    var prefixRegex = new RegExp('^' + prefix, 'g');\n\n    if (prefix && !filename.match(prefixRegex)) return false;\n    if (extension && !filename.match(extensionRegex)) return false;\n    return filename.replace(prefix, '').replace(extensionRegex, '');\n  };\n\n  /**\n   * guess language setting based on http headers\n   */\n\n  var guessLanguage = function(request) {\n    if (typeof request === 'object') {\n      var languageHeader = request.headers? request.headers['accept-language'] : undefined,\n        languages = [],\n        regions = [];\n\n      request.languages = [defaultLocale];\n      request.regions = [defaultLocale];\n      request.language = defaultLocale;\n      request.region = defaultLocale;\n\n      // a query parameter overwrites all\n      if (queryParameter && request.url) {\n        var urlObj = url.parse(request.url, true);\n        if (urlObj.query[queryParameter]) {\n          logDebug('Overriding locale from query: ' + urlObj.query[queryParameter]);\n          request.language = urlObj.query[queryParameter].toLowerCase();\n          return i18n.setLocale(request, request.language);\n        }\n      }\n\n      // a cookie overwrites headers\n      if (cookiename && request.cookies && request.cookies[cookiename]) {\n        request.language = request.cookies[cookiename];\n        return i18n.setLocale(request, request.language);\n      }\n\n      // 'accept-language' is the most common source\n      if (languageHeader) {\n        var acceptedLanguages = getAcceptedLanguagesFromHeader(languageHeader),\n          match, fallbackMatch, fallback;\n        for (var i = 0; i < acceptedLanguages.length; i++) {\n          var lang = acceptedLanguages[i],\n            lr = lang.split('-', 2),\n            parentLang = lr[0],\n            region = lr[1];\n\n          // Check if we have a configured fallback set for this language.\n          if (fallbacks && fallbacks[lang]) {\n            fallback = fallbacks[lang];\n            // Fallbacks for languages should be inserted\n            // where the original, unsupported language existed.\n            var acceptedLanguageIndex = acceptedLanguages.indexOf(lang);\n            var fallbackIndex = acceptedLanguages.indexOf(fallback);\n            if(fallbackIndex > -1) {\n              acceptedLanguages.splice(fallbackIndex, 1);\n            }\n            acceptedLanguages.splice(acceptedLanguageIndex + 1, 0, fallback);\n          }\n\n          // Check if we have a configured fallback set for the parent language of the locale.\n          if (fallbacks && fallbacks[parentLang]) {\n            fallback = fallbacks[parentLang];\n            // Fallbacks for a parent language should be inserted\n            // to the end of the list, so they're only picked\n            // if there is no better match.\n            if (acceptedLanguages.indexOf(fallback) < 0) {\n              acceptedLanguages.push(fallback);\n            }\n          }\n\n          if (languages.indexOf(parentLang) < 0) {\n            languages.push(parentLang.toLowerCase());\n          }\n          if (region) {\n            regions.push(region.toLowerCase());\n          }\n\n          if (!match && locales[lang]) {\n            match = lang;\n            break;\n          }\n\n          if (!fallbackMatch && locales[parentLang]) {\n            fallbackMatch = parentLang;\n          }\n        }\n\n        request.language = match || fallbackMatch || request.language;\n        request.region = regions[0] || request.region;\n        return i18n.setLocale(request, request.language);\n      }\n    }\n\n    // last resort: defaultLocale\n    return i18n.setLocale(request, defaultLocale);\n  };\n\n  /**\n   * Get a sorted list of accepted languages from the HTTP Accept-Language header\n   */\n  var getAcceptedLanguagesFromHeader = function(header) {\n    var languages = header.split(','),\n      preferences = {};\n    return languages.map(function parseLanguagePreference(item) {\n      var preferenceParts = item.trim().split(';q=');\n      if (preferenceParts.length < 2) {\n        preferenceParts[1] = 1.0;\n      } else {\n        var quality = parseFloat(preferenceParts[1]);\n        preferenceParts[1] = quality ? quality : 0.0;\n      }\n      preferences[preferenceParts[0]] = preferenceParts[1];\n\n      return preferenceParts[0];\n    }).filter(function(lang) {\n      return preferences[lang] > 0;\n    }).sort(function sortLanguages(a, b) {\n      return preferences[b] - preferences[a];\n    });\n  };\n\n  /**\n   * searches for locale in given object\n   */\n\n  var getLocaleFromObject = function(obj) {\n    var locale;\n    if (obj && obj.scope) {\n      locale = obj.scope.locale;\n    }\n    if (obj && obj.locale) {\n      locale = obj.locale;\n    }\n    return locale;\n  };\n\n  /**\n   * splits and parses a phrase for mathematical interval expressions\n   */\n  var parsePluralInterval = function(phrase, count) {\n    var returnPhrase = phrase;\n    var phrases = phrase.split(/\\|/);\n\n    // some() breaks on 1st true\n    phrases.some(function(p) {\n      var matches = p.match(/^\\s*([\\(\\)\\[\\]\\d,]+)?\\s*(.*)$/);\n\n      // not the same as in combined condition\n      if (matches[1]) {\n        if (matchInterval(count, matches[1]) === true) {\n          returnPhrase = matches[2];\n          return true;\n        }\n      } else {\n        returnPhrase = p;\n      }\n\n    });\n    return returnPhrase;\n  };\n\n  /**\n   * test a number to match mathematical interval expressions\n   * [0,2] - 0 to 2 (including, matches: 0, 1, 2)\n   * ]0,3[ - 0 to 3 (excluding, matches: 1, 2)\n   * [1]   - 1 (matches: 1)\n   * [20,] - all numbers ≥20 (matches: 20, 21, 22, ...)\n   * [,20] - all numbers ≤20 (matches: 20, 21, 22, ...)\n   */\n  var matchInterval = function(number, interval) {\n    interval = parseInterval(interval);\n    if (interval && typeof number === 'number') {\n      if (interval.from.value === number) {\n        return interval.from.included;\n      }\n      if (interval.to.value === number) {\n        return interval.to.included;\n      }\n\n      return (Math.min(interval.from.value, number) === interval.from.value &&\n        Math.max(interval.to.value, number) === interval.to.value);\n    }\n    return false;\n  };\n\n  /**\n   * read locale file, translate a msg and write to fs if new\n   */\n  var translate = function(locale, singular, plural, skipSyncToAllFiles) {\n\n    // add same key to all translations\n    if (!skipSyncToAllFiles && syncFiles) {\n      syncToAllFiles(singular, plural);\n    }\n\n    if (locale === undefined) {\n      logWarn('WARN: No locale found - check the context of the call to __(). Using ' +\n        defaultLocale + ' as current locale');\n      locale = defaultLocale;\n    }\n\n    if (!locales[locale] && fallbacks[locale]) {\n      locale = fallbacks[locale];\n    }\n\n    // attempt to read when defined as valid locale\n    if (!locales[locale]) {\n      read(locale);\n    }\n\n    // fallback to default when missed\n    if (!locales[locale]) {\n\n      logWarn('WARN: Locale ' + locale +\n        ' couldn\\'t be read - check the context of the call to $__. Using ' +\n        defaultLocale + ' (default) as current locale');\n\n      locale = defaultLocale;\n      read(locale);\n    }\n\n    // dotnotaction add on, @todo: factor out\n    var defaultSingular = singular;\n    var defaultPlural = plural;\n    if (objectNotation) {\n      var indexOfColon = singular.indexOf(':');\n      // We compare against 0 instead of -1 because\n      // we don't really expect the string to start with ':'.\n      if (0 < indexOfColon) {\n        defaultSingular = singular.substring(indexOfColon + 1);\n        singular = singular.substring(0, indexOfColon);\n      }\n      if (plural && typeof plural !== 'number') {\n        indexOfColon = plural.indexOf(':');\n        if (0 < indexOfColon) {\n          defaultPlural = plural.substring(indexOfColon + 1);\n          plural = plural.substring(0, indexOfColon);\n        }\n      }\n    }\n\n    var accessor = localeAccessor(locale, singular);\n    var mutator = localeMutator(locale, singular);\n\n    if (plural) {\n      if (!accessor()) {\n        mutator({\n          'one': defaultSingular || singular,\n          'other': defaultPlural || plural\n        });\n        write(locale);\n      }\n    }\n\n    if (!accessor()) {\n      mutator(defaultSingular || singular);\n      write(locale);\n    }\n\n    return accessor();\n  };\n\n  /**\n   * initialize the same key in all locales\n   * when not already existing, checked via translate\n   */\n  var syncToAllFiles = function(singular, plural) {\n    // iterate over locales and translate again\n    // this will implicitly write/sync missing keys\n    // to the rest of locales\n    for (var l in locales) {\n      translate(l, singular, plural, true);\n    }\n  };\n\n  /**\n   * Allows delayed access to translations nested inside objects.\n   * @param {String} locale The locale to use.\n   * @param {String} singular The singular term to look up.\n   * @param {Boolean} [allowDelayedTraversal=true] Is delayed traversal of the tree allowed?\n   * This parameter is used internally. It allows to signal the accessor that\n   * a translation was not found in the initial lookup and that an invocation\n   * of the accessor may trigger another traversal of the tree.\n   * @returns {Function} A function that, when invoked, returns the current value stored\n   * in the object at the requested location.\n   */\n  var localeAccessor = function(locale, singular, allowDelayedTraversal) {\n    // Bail out on non-existent locales to defend against internal errors.\n    if (!locales[locale]) return Function.prototype;\n\n    // Handle object lookup notation\n    var indexOfDot = objectNotation && singular.lastIndexOf(objectNotation);\n    if (objectNotation && (0 < indexOfDot && indexOfDot < singular.length - 1)) {\n      // If delayed traversal wasn't specifically forbidden, it is allowed.\n      if (typeof allowDelayedTraversal === 'undefined') allowDelayedTraversal = true;\n      // The accessor we're trying to find and which we want to return.\n      var accessor = null;\n      // An accessor that returns null.\n      var nullAccessor = function() {\n        return null;\n      };\n      // Do we need to re-traverse the tree upon invocation of the accessor?\n      var reTraverse = false;\n      // Split the provided term and run the callback for each subterm.\n      singular.split(objectNotation).reduce(function(object, index) {\n        // Make the accessor return null.\n        accessor = nullAccessor;\n        // If our current target object (in the locale tree) doesn't exist or\n        // it doesn't have the next subterm as a member...\n        if (null === object || !object.hasOwnProperty(index)) {\n          // ...remember that we need retraversal (because we didn't find our target).\n          reTraverse = allowDelayedTraversal;\n          // Return null to avoid deeper iterations.\n          return null;\n        }\n        // We can traverse deeper, so we generate an accessor for this current level.\n        accessor = function() {\n          return object[index];\n        };\n        // Return a reference to the next deeper level in the locale tree.\n        return object[index];\n\n      }, locales[locale]);\n      // Return the requested accessor.\n      return function() {\n        // If we need to re-traverse (because we didn't find our target term)\n        // traverse again and return the new result (but don't allow further iterations)\n        // or return the previously found accessor if it was already valid.\n        return (reTraverse) ? localeAccessor(locale, singular, false)() : accessor();\n      };\n\n    } else {\n      // No object notation, just return an accessor that performs array lookup.\n      return function() {\n        return locales[locale][singular];\n      };\n    }\n  };\n\n  /**\n   * Allows delayed mutation of a translation nested inside objects.\n   * @description Construction of the mutator will attempt to locate the requested term\n   * inside the object, but if part of the branch does not exist yet, it will not be\n   * created until the mutator is actually invoked. At that point, re-traversal of the\n   * tree is performed and missing parts along the branch will be created.\n   * @param {String} locale The locale to use.\n   * @param {String} singular The singular term to look up.\n   * @param [Boolean} [allowBranching=false] Is the mutator allowed to create previously\n   * non-existent branches along the requested locale path?\n   * @returns {Function} A function that takes one argument. When the function is\n   * invoked, the targeted translation term will be set to the given value inside the locale table.\n   */\n  var localeMutator = function(locale, singular, allowBranching) {\n    // Bail out on non-existent locales to defend against internal errors.\n    if (!locales[locale]) return Function.prototype;\n\n    // Handle object lookup notation\n    var indexOfDot = objectNotation && singular.lastIndexOf(objectNotation);\n    if (objectNotation && (0 < indexOfDot && indexOfDot < singular.length - 1)) {\n      // If branching wasn't specifically allowed, disable it.\n      if (typeof allowBranching === 'undefined') allowBranching = false;\n      // This will become the function we want to return.\n      var accessor = null;\n      // An accessor that takes one argument and returns null.\n      var nullAccessor = function() {\n        return null;\n      };\n      // Fix object path.\n      var fixObject = function() {\n        return {};\n      };\n      // Are we going to need to re-traverse the tree when the mutator is invoked?\n      var reTraverse = false;\n      // Split the provided term and run the callback for each subterm.\n      singular.split(objectNotation).reduce(function(object, index) {\n        // Make the mutator do nothing.\n        accessor = nullAccessor;\n        // If our current target object (in the locale tree) doesn't exist or\n        // it doesn't have the next subterm as a member...\n        if (null === object || !object.hasOwnProperty(index)) {\n          // ...check if we're allowed to create new branches.\n          if (allowBranching) {\n            // Fix `object` if `object` is not Object.\n            if (null === object || typeof object !== 'object') {\n              object = fixObject();\n            }\n            // If we are allowed to, create a new object along the path.\n            object[index] = {};\n          } else {\n            // If we aren't allowed, remember that we need to re-traverse later on and...\n            reTraverse = true;\n            // ...return null to make the next iteration bail our early on.\n            return null;\n          }\n        }\n        // Generate a mutator for the current level.\n        accessor = function(value) {\n          object[index] = value;\n          return value;\n        };\n        // Generate a fixer for the current level.\n        fixObject = function() {\n          object[index] = {};\n          return object[index];\n        };\n\n        // Return a reference to the next deeper level in the locale tree.\n        return object[index];\n\n      }, locales[locale]);\n\n      // Return the final mutator.\n      return function(value) {\n        // If we need to re-traverse the tree\n        // invoke the search again, but allow branching\n        // this time (because here the mutator is being invoked)\n        // otherwise, just change the value directly.\n        return (reTraverse) ? localeMutator(locale, singular, true)(value) : accessor(value);\n      };\n\n    } else {\n      // No object notation, just return a mutator that performs array lookup and changes the value.\n      return function(value) {\n        locales[locale][singular] = value;\n        return value;\n      };\n    }\n  };\n\n  /**\n   * try reading a file\n   */\n  var read = function(locale) {\n    var localeFile = {},\n      file = getStorageFilePath(locale);\n    try {\n      logDebug('read ' + file + ' for locale: ' + locale);\n      localeFile = fs.readFileSync(file);\n      try {\n        // parsing filecontents to locales[locale]\n        locales[locale] = JSON.parse(localeFile);\n      } catch (parseError) {\n        logError('unable to parse locales from file (maybe ' +\n          file + ' is empty or invalid json?): ', parseError);\n      }\n    } catch (readError) {\n      // unable to read, so intialize that file\n      // locales[locale] are already set in memory, so no extra read required\n      // or locales[locale] are empty, which initializes an empty locale.json file\n\n      // since the current invalid locale could exist, we should back it up\n      if (fs.existsSync(file)) {\n        logDebug('backing up invalid locale ' + locale + ' to ' + file + '.invalid');\n        fs.renameSync(file, file + '.invalid');\n      }\n\n      logDebug('initializing ' + file);\n      write(locale);\n    }\n  };\n\n  /**\n   * try writing a file in a created directory\n   */\n  var write = function(locale) {\n    var stats, target, tmp;\n\n    // don't write new locale information to disk if updateFiles isn't true\n    if (!updateFiles) {\n      return;\n    }\n\n    // creating directory if necessary\n    try {\n      stats = fs.lstatSync(directory);\n    } catch (e) {\n      logDebug('creating locales dir in: ' + directory);\n      fs.mkdirSync(directory, directoryPermissions);\n    }\n\n    // first time init has an empty file\n    if (!locales[locale]) {\n      locales[locale] = {};\n    }\n\n    // writing to tmp and rename on success\n    try {\n      target = getStorageFilePath(locale);\n      tmp = target + '.tmp';\n      fs.writeFileSync(tmp, JSON.stringify(locales[locale], null, indent), 'utf8');\n      stats = fs.statSync(tmp);\n      if (stats.isFile()) {\n        fs.renameSync(tmp, target);\n      } else {\n        logError('unable to write locales to file (either ' +\n          tmp + ' or ' + target + ' are not writeable?): ');\n      }\n    } catch (e) {\n      logError('unexpected error writing files (either ' +\n        tmp + ' or ' + target + ' are not writeable?): ', e);\n    }\n  };\n\n  /**\n   * basic normalization of filepath\n   */\n  var getStorageFilePath = function(locale) {\n    // changed API to use .json as default, #16\n    var ext = extension || '.json',\n      filepath = path.normalize(directory + pathsep + prefix + locale + ext),\n      filepathJS = path.normalize(directory + pathsep + prefix + locale + '.js');\n    // use .js as fallback if already existing\n    try {\n      if (fs.statSync(filepathJS)) {\n        logDebug('using existing file ' + filepathJS);\n        extension = '.js';\n        return filepathJS;\n      }\n    } catch (e) {\n      logDebug('will use ' + filepath);\n    }\n    return filepath;\n  };\n\n  /**\n   * Logging proxies\n   */\n  function logDebug(msg) {\n    logDebugFn(msg);\n  }\n\n  function logWarn(msg) {\n    logWarnFn(msg);\n  }\n\n  function logError(msg) {\n    logErrorFn(msg);\n  }\n\n  return i18n;\n\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/i18n/i18n.js\n// module id = 8\n// module chunks = 0","/* globals window, exports, define */\n\n(function(window) {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[\\+\\-]/\n    }\n\n    function sprintf() {\n        var key = arguments[0], cache = sprintf.cache\n        if (!(cache[key])) {\n            cache[key] = sprintf.parse(key)\n        }\n        return sprintf.format.call(null, cache[key], arguments)\n    }\n\n    sprintf.format = function(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, node_type = '', arg, output = [], i, k, match, pad, pad_character, pad_length, is_positive = true, sign = ''\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i])\n            if (node_type === 'string') {\n                output[output.length] = parse_tree[i]\n            }\n            else if (node_type === 'array') {\n                match = parse_tree[i] // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw new Error(sprintf('[sprintf] property \"%s\" does not exist', match[2][k]))\n                        }\n                        arg = arg[match[2][k]]\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(match[8]) && re.not_primitive.test(match[8]) && get_type(arg) == 'function') {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(match[8]) && (get_type(arg) != 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf(\"[sprintf] expecting number but found %s\", get_type(arg)))\n                }\n\n                if (re.number.test(match[8])) {\n                    is_positive = arg >= 0\n                }\n\n                switch (match[8]) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                    break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                    break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                    break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, match[6] ? parseInt(match[6]) : 0)\n                    break\n                    case 'e':\n                        arg = match[7] ? parseFloat(arg).toExponential(match[7]) : parseFloat(arg).toExponential()\n                    break\n                    case 'f':\n                        arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg)\n                    break\n                    case 'g':\n                        arg = match[7] ? parseFloat(arg).toPrecision(match[7]) : parseFloat(arg)\n                    break\n                    case 'o':\n                        arg = arg.toString(8)\n                    break\n                    case 's':\n                        arg = String(arg)\n                        arg = (match[7] ? arg.substring(0, match[7]) : arg)\n                    break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (match[7] ? arg.substring(0, match[7]) : arg)\n                    break\n                    case 'T':\n                        arg = get_type(arg)\n                        arg = (match[7] ? arg.substring(0, match[7]) : arg)\n                    break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                    break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (match[7] ? arg.substring(0, match[7]) : arg)\n                    break\n                    case 'x':\n                        arg = parseInt(arg, 10).toString(16)\n                    break\n                    case 'X':\n                        arg = parseInt(arg, 10).toString(16).toUpperCase()\n                    break\n                }\n                if (re.json.test(match[8])) {\n                    output[output.length] = arg\n                }\n                else {\n                    if (re.number.test(match[8]) && (!is_positive || match[3])) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = match[4] ? match[4] === '0' ? '0' : match[4].charAt(1) : ' '\n                    pad_length = match[6] - (sign + arg).length\n                    pad = match[6] ? (pad_length > 0 ? str_repeat(pad_character, pad_length) : '') : ''\n                    output[output.length] = match[5] ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output.join('')\n    }\n\n    sprintf.cache = Object.create(null)\n\n    sprintf.parse = function(fmt) {\n        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree[parse_tree.length] = match[0]\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree[parse_tree.length] = '%'\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list[field_list.length] = field_match[1]\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list[field_list.length] = field_match[1]\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list[field_list.length] = field_match[1]\n                            }\n                            else {\n                                throw new SyntaxError(\"[sprintf] failed to parse named argument key\")\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError(\"[sprintf] failed to parse named argument key\")\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error(\"[sprintf] mixing positional and named placeholders is not (yet) supported\")\n                }\n                parse_tree[parse_tree.length] = match\n            }\n            else {\n                throw new SyntaxError(\"[sprintf] unexpected placeholder\")\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return parse_tree\n    }\n\n    var vsprintf = function(fmt, argv, _argv) {\n        _argv = (argv || []).slice(0)\n        _argv.splice(0, 0, fmt)\n        return sprintf.apply(null, _argv)\n    }\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        if (typeof variable === 'number') {\n            return 'number'\n        }\n        else if (typeof variable === 'string') {\n            return 'string'\n        }\n        else {\n            return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase()\n        }\n    }\n\n    var preformattedPadding = {\n        '0': ['', '0', '00', '000', '0000', '00000', '000000', '0000000'],\n        ' ': ['', ' ', '  ', '   ', '    ', '     ', '      ', '       '],\n        '_': ['', '_', '__', '___', '____', '_____', '______', '_______'],\n    }\n    function str_repeat(input, multiplier) {\n        if (multiplier >= 0 && multiplier <= 7 && preformattedPadding[input]) {\n            return preformattedPadding[input][multiplier]\n        }\n        return Array(multiplier + 1).join(input)\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    if (typeof exports !== 'undefined') {\n        exports.sprintf = sprintf\n        exports.vsprintf = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window.sprintf = sprintf\n        window.vsprintf = vsprintf\n\n        if (typeof define === 'function' && define.amd) {\n            define(function() {\n                return {\n                    sprintf: sprintf,\n                    vsprintf: vsprintf\n                }\n            })\n        }\n    }\n})(typeof window === 'undefined' ? this : window);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/sprintf-js/src/sprintf.js\n// module id = 9\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"url\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"url\"\n// module id = 11\n// module chunks = 0","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/src/index.js\n// module id = 12\n// module chunks = 0","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/src/browser.js\n// module id = 13\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/src/debug.js\n// module id = 14\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {}\n  var type = typeof val\n  if (type === 'string' && val.length > 0) {\n    return parse(val)\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ?\n\t\t\tfmtLong(val) :\n\t\t\tfmtShort(val)\n  }\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 10000) {\n    return\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n\n    default:\n      return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's'\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ms/index.js\n// module id = 15\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .replace(/\\s*\\n\\s*/g, ' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = util._extend({}, exports.inspectOpts);\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debug/src/node.js\n// module id = 16\n// module chunks = 0","module.exports = require(\"tty\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"tty\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"net\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"net\"\n// module id = 19\n// module chunks = 0","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/mustache/mustache.js\n// module id = 20\n// module chunks = 0","/** @file messageformat.js - ICU PluralFormat + SelectFormat for JavaScript\n *\n * @author Alex Sexton - @SlexAxton, Eemeli Aro\n * @version 0.3.1\n * @copyright 2012-2016 Alex Sexton, Eemeli Aro, and Contributors\n * @license To use or fork, MIT. To contribute back, Dojo CLA  */\n\n\n/** Utility function for quoting an Object's key value iff required\n *\n * @private  */\nfunction propname(key, obj) {\n  /* Quote the key if it contains invalid characters or is an\n   * ECMAScript 3rd Edition reserved word.\n   */\n  if (/^[A-Z_$][0-9A-Z_$]*$/i.test(key) &&\n     ['break', 'continue', 'delete', 'else', 'for', 'function', 'if', 'in', 'new',\n      'return', 'this', 'typeof', 'var', 'void', 'while', 'with', 'case', 'catch',\n      'default', 'do', 'finally', 'instanceof', 'switch', 'throw', 'try'].indexOf(key) < 0) {\n    return obj ? obj + '.' + key : key;\n  } else {\n    var jkey = JSON.stringify(key);\n    return obj ? obj + '[' + jkey + ']' : jkey;\n  }\n}\n\n/** Utility formatter function for enforcing Bidi Structured Text by using UCC\n *\n * @private  */\nfunction bidiMarkText(text, locale) {\n  function isLocaleRTL(locale) {\n    /* list inlined from data extracted from CLDR v27 & v28\n     * to verify/recreate, use the following:\n     *   git clone https://github.com/unicode-cldr/cldr-misc-full.git\n     *   cd cldr-misc-full/main/\n     *   grep characterOrder -r . | tr '\"/' '\\t' | cut -f2,6 | grep -C4 right-to-left\n     */\n    var rtlLanguages = ['ar', 'ckb', 'fa', 'he', 'ks($|[^bfh])', 'lrc', 'mzn', 'pa-Arab', 'ps', 'ug', 'ur', 'uz-Arab', 'yi'];\n    return new RegExp('^' + rtlLanguages.join('|^')).test(locale);\n  }\n  var mark = JSON.stringify(isLocaleRTL(locale) ? '\\u200F' : '\\u200E');\n  return mark + ' + ' + text + ' + ' + mark;\n}\n\n/** Create a new message formatter\n *\n * @class\n * @param {string|string[]} [locale=\"en\"] - The locale to use, with fallbacks\n * @param {function} [pluralFunc] - Optional custom pluralization function\n * @param {function[]} [formatters] - Optional custom formatting functions  */\nfunction MessageFormat(locale, pluralFunc, formatters) {\n  if (!locale) {\n    this.lc = ['en'];\n  } else if (typeof locale == 'string') {\n    this.lc = [];\n    for (var l = locale; l; l = l.replace(/[-_]?[^-_]*$/, '')) this.lc.push(l);\n  } else {\n    this.lc = locale;\n  }\n  if (!pluralFunc) {\n    if (this.lc.every(function(l){\n      pluralFunc = MessageFormat.plurals[l];\n      return !pluralFunc;\n    })) {\n      throw new Error('Plural function for locale `' + this.lc.join(',') + '` not found');\n    }\n  }\n  this.runtime = new Runtime(this.lc[0], pluralFunc, formatters);\n}\n\nmodule.exports = MessageFormat;\n\n\n/** Parse an input string to its AST\n *\n *  Precompiled from `lib/messageformat-parser.pegjs` by\n *  {@link http://pegjs.org/ PEG.js}. Included in MessageFormat object\n *  to enable testing.\n *\n * @private  */\nMessageFormat._parse = require('./messageformat-parser').parse;\n\n\n/** Pluralization functions from\n *  {@link http://github.com/eemeli/make-plural.js make-plural}\n *\n * @memberof MessageFormat\n * @type Object.<string,function>  */\nMessageFormat.plurals = require('make-plural/plurals');\n\n\n/** Default number formatting functions in the style of ICU's\n *  {@link http://icu-project.org/apiref/icu4j/com/ibm/icu/text/MessageFormat.html simpleArg syntax}\n *  implemented using the\n *  {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl Intl}\n *  object defined by ECMA-402.\n *\n *  **Note**: Intl is not defined in default Node until 0.11.15 / 0.12.0, so\n *  earlier versions require a {@link https://www.npmjs.com/package/intl polyfill}.\n *  Therefore {@link MessageFormat.withIntlSupport} needs to be true for these\n *  functions to be available for inclusion in the output.\n *\n * @see MessageFormat#setIntlSupport\n *\n * @namespace\n * @memberof MessageFormat\n * @property {function} number - Represent a number as an integer, percent or currency value\n * @property {function} date - Represent a date as a full/long/default/short string\n * @property {function} time - Represent a time as a full/long/default/short string\n *\n * @example\n * var mf = new MessageFormat('en').setIntlSupport(true);\n * mf.currency = 'EUR';\n * var cf = mf.compile('The total is {V,number,currency}.');\n *\n * cf({ V: 5.5 })\n * // 'The total is €5.50.'\n *\n * @example\n * var mf = new MessageFormat('en', null, {number: MessageFormat.number});\n * mf.currency = 'EUR';\n * var cf = mf.compile('The total is {V,number,currency}.');\n *\n * cf({ V: 5.5 })\n * // 'The total is €5.50.'  */\nMessageFormat.formatters = {\n  number: function(self) {\n    return new Function(\"v,lc,p\",\n      \"return Intl.NumberFormat(lc,\\n\" +\n      \"    p=='integer' ? {maximumFractionDigits:0}\\n\" +\n      \"  : p=='percent' ? {style:'percent'}\\n\" +\n      \"  : p=='currency' ? {style:'currency', currency:'\" + (self.currency || 'USD') + \"', minimumFractionDigits:2, maximumFractionDigits:2}\\n\" +\n      \"  : {}).format(v)\"\n    );\n  },\n  date: function(v,lc,p) {\n    var o = {day:'numeric', month:'short', year:'numeric'};\n    switch (p) {\n      case 'full': o.weekday = 'long';\n      case 'long': o.month = 'long'; break;\n      case 'short': o.month = 'numeric';\n    }\n    return (new Date(v)).toLocaleDateString(lc, o)\n  },\n  time: function(v,lc,p) {\n    var o = {second:'numeric', minute:'numeric', hour:'numeric'};\n    switch (p) {\n      case 'full': case 'long': o.timeZoneName = 'short'; break;\n      case 'short': delete o.minute;\n    }\n    return (new Date(v)).toLocaleTimeString(lc, o)\n  }\n};\n\n/** Enable or disable the addition of Unicode control characters to all input\n *  to preserve the integrity of the output when mixing LTR and RTL text.\n *\n * @see http://cldr.unicode.org/development/development-process/design-proposals/bidi-handling-of-structured-text\n *\n * @memberof MessageFormat\n * @param {boolean} [enable=true]\n * @returns {MessageFormat} The MessageFormat instance, to allow for chaining\n *\n * @example\n * // upper case stands for RTL characters, output is shown as rendered\n * var mf = new MessageFormat('en');\n *\n * mf.compile('{0} >> {1} >> {2}')(['first', 'SECOND', 'THIRD']);\n * // 'first >> THIRD << SECOND'\n *\n * mf.setBiDiSupport(true);\n * mf.compile('{0} >> {1} >> {2}')(['first', 'SECOND', 'THIRD']);\n * // 'first >> SECOND >> THIRD'  */\nMessageFormat.prototype.setBiDiSupport = function(enable) {\n    this.bidiSupport = !!enable || (typeof enable == 'undefined');\n    return this;\n};\n\n\n/** Enable or disable support for the default formatters, which require the\n *  `Intl` object. Note that this can't be autodetected, as the environment\n *  in which the formatted text is compiled into Javascript functions is not\n *  necessarily the same environment in which they will get executed.\n *\n * @see MessageFormat.formatters\n *\n * @memberof MessageFormat\n * @param {boolean} [enable=true]\n * @returns {MessageFormat} The MessageFormat instance, to allow for chaining\n *\n * @example\n * // Intl is not defined in default Node until 0.11.15 / 0.12.0\n * var Intl = require('intl');\n * var mf = new MessageFormat('en').setIntlSupport(true);\n * mf.currency = 'EUR';\n *\n * mf.compile('The total is {V,number,currency}.')({ V: 5.5 });\n * // 'The total is €5.50.'  */\nMessageFormat.prototype.setIntlSupport = function(enable) {\n    this.withIntlSupport = !!enable || (typeof enable == 'undefined');\n    return this;\n};\n\n\n/** A set of utility functions that are called by the compiled Javascript\n *  functions, these are included locally in the output of {@link\n *  MessageFormat#compile compile()}.\n *\n * @class\n * @param {string} [locale] - The parsed locale\n * @param {function} [pluralFunc] - Pluralization function for the locale\n * @param {function[]} [formatters] - Optional custom formatting functions  */\nfunction Runtime(locale, pluralFunc, formatters) {\n\n  /** Pluralization functions included in compiled output\n   *\n   * @instance\n   * @type Object.<string,function>  */\n  this.pluralFuncs = {};\n  this.pluralFuncs[locale] = pluralFunc;\n\n  /** Custom formatting functions called by `{var, fn[, args]*}` syntax\n   *\n   *  For examples, see {@link MessageFormat.formatters}\n   *\n   * @instance\n   * @see MessageFormat.formatters\n   * @type Object.<string,function>  */\n  this.fmt = {};\n  if (formatters) for (var f in formatters) {\n    this.fmt[f] = formatters[f];\n  }\n}\n\nRuntime.prototype = {\n\n  /** Utility function for `#` in plural rules\n   *\n   * @param {number} value - The value to operate on\n   * @param {number} [offset=0] - An optional offset, set by the surrounding context  */\n  number: function(value, offset) {\n    if (isNaN(value)) throw new Error(\"'\" + value + \"' isn't a number.\");\n    return value - (offset || 0);\n  },\n\n  /** Utility function for `{N, plural|selectordinal, ...}`\n   *\n   * @param {number} value - The key to use to find a pluralization rule\n   * @param {number} offset - An offset to apply to `value`\n   * @param {function} lcfunc - A locale function from `pluralFuncs`\n   * @param {Object.<string,string>} data - The object from which results are looked up\n   * @param {?boolean} isOrdinal - If true, use ordinal rather than cardinal rules\n   * @returns {string} The result of the pluralization  */\n  plural: function(value, offset, lcfunc, data, isOrdinal) {\n    if ({}.hasOwnProperty.call(data, value)) return data[value]();\n    if (offset) value -= offset;\n    var key = lcfunc(value, isOrdinal);\n    if (key in data) return data[key]();\n    return data.other();\n  },\n\n  /** Utility function for `{N, select, ...}`\n   *\n   * @param {number} value - The key to use to find a selection\n   * @param {Object.<string,string>} data - The object from which results are looked up\n   * @returns {string} The result of the select statement  */\n  select: function(value, data) {\n    if ({}.hasOwnProperty.call(data, value)) return data[value]();\n    return data.other()\n  },\n\n  /** Custom stringifier\n   *\n   * @example\n   * var mf = new MessageFormat('en');\n   * console.log(mf.runtime.toString())\n   * > var pluralFuncs = {\n   * >   en: function (n, ord) {\n   * >     var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n,\n   * >         n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n   * >     if (ord) return (n10 == 1 && n100 != 11) ? 'one'\n   * >         : (n10 == 2 && n100 != 12) ? 'two'\n   * >         : (n10 == 3 && n100 != 13) ? 'few'\n   * >         : 'other';\n   * >     return (n == 1 && v0) ? 'one' : 'other';\n   * >   }\n   * > };\n   * > var fmt = {};\n   * > var number = function (value, offset) {\n   * >   if (isNaN(value)) throw new Error(\"'\" + value + \"' isn't a number.\");\n   * >   return value - (offset || 0);\n   * > };\n   * > var plural = function (value, offset, lcfunc, data, isOrdinal) {\n   * >   if ({}.hasOwnProperty.call(data, value)) return data[value]();\n   * >   if (offset) value -= offset;\n   * >   var key = lcfunc(value, isOrdinal);\n   * >   if (key in data) return data[key]();\n   * >   return data.other();\n   * > };\n   * > var select = function (value, data) {\n   * >   if ({}.hasOwnProperty.call(data, value)) return data[value]();\n   * >   return data.other()\n   * > };  */\n  toString: function () {\n    var _stringify = function(o, level) {\n      if (typeof o != 'object') {\n        var funcStr = o.toString().replace(/^(function )\\w*/, '$1');\n        var indent = /([ \\t]*)\\S.*$/.exec(funcStr);\n        return indent ? funcStr.replace(new RegExp('^' + indent[1], 'mg'), '') : funcStr;\n      }\n      var s = [];\n      for (var i in o) if (i != 'toString') {\n        if (level == 0) s.push('var ' + i + ' = ' + _stringify(o[i], level + 1) + ';\\n');\n        else s.push(propname(i) + ': ' + _stringify(o[i], level + 1));\n      }\n      if (level == 0) return s.join('');\n      if (s.length == 0) return '{}';\n      var indent = '  '; while (--level) indent += '  ';\n      return '{\\n' + s.join(',\\n').replace(/^/gm, indent) + '\\n}';\n    };\n    return _stringify(this, 0);\n  }\n};\n\n\n/** Recursively map an AST to its resulting string\n *\n * @memberof MessageFormat\n * @param ast - the Ast node for which the JS code should be generated\n * @private  */\nMessageFormat.prototype._precompile = function(ast, data) {\n  data = data || { keys: {}, offset: {} };\n  var r = [], i, tmp, args = [];\n\n  switch ( ast.type ) {\n    case 'messageFormatPattern':\n      for ( i = 0; i < ast.statements.length; ++i ) {\n        r.push(this._precompile( ast.statements[i], data ));\n      }\n      tmp = r.join(' + ') || '\"\"';\n      return data.pf_count ? tmp : 'function(d) { return ' + tmp + '; }';\n\n    case 'messageFormatElement':\n      data.pf_count = data.pf_count || 0;\n      if ( ast.output ) {\n        var ret = propname(ast.argumentIndex, 'd');\n        return this.bidiSupport ? bidiMarkText(ret, this.lc) : ret;\n      }\n      else {\n        data.keys[data.pf_count] = ast.argumentIndex;\n        return this._precompile( ast.elementFormat, data );\n      }\n      return '';\n\n    case 'elementFormat':\n      args = [ propname(data.keys[data.pf_count], 'd') ];\n      switch (ast.key) {\n        case 'select':\n          args.push(this._precompile(ast.val, data));\n          return 'select(' + args.join(', ') + ')';\n        case 'selectordinal':\n          args = args.concat([ 0, propname(this.lc[0], 'pluralFuncs'), this._precompile(ast.val, data), 1 ]);\n          return 'plural(' + args.join(', ') + ')';\n        case 'plural':\n          data.offset[data.pf_count || 0] = ast.val.offset || 0;\n          args = args.concat([ data.offset[data.pf_count] || 0, propname(this.lc[0], 'pluralFuncs'), this._precompile(ast.val, data) ]);\n          return 'plural(' + args.join(', ') + ')';\n        default:\n          if (this.withIntlSupport && !(ast.key in this.runtime.fmt) && (ast.key in MessageFormat.formatters)) {\n            tmp = MessageFormat.formatters[ast.key];\n            this.runtime.fmt[ast.key] = (typeof tmp(this) == 'function') ? tmp(this) : tmp;\n          }\n          args.push(JSON.stringify(this.lc));\n          if (ast.val && ast.val.length) args.push(JSON.stringify(ast.val.length == 1 ? ast.val[0] : ast.val));\n          return 'fmt.' + ast.key + '(' + args.join(', ') + ')';\n      }\n\n    case 'pluralFormatPattern':\n    case 'selectFormatPattern':\n      data.pf_count = data.pf_count || 0;\n      if (ast.type == 'selectFormatPattern') data.offset[data.pf_count] = 0;\n      var needOther = true;\n      for (i = 0; i < ast.pluralForms.length; ++i) {\n        var key = ast.pluralForms[i].key;\n        if (key === 'other') needOther = false;\n        var data_copy = JSON.parse(JSON.stringify(data));\n        data_copy.pf_count++;\n        r.push(propname(key) + ': function() { return ' + this._precompile(ast.pluralForms[i].val, data_copy) + ';}');\n      }\n      if (needOther) throw new Error(\"No 'other' form found in \" + ast.type + \" \" + data.pf_count);\n      return '{ ' + r.join(', ') + ' }';\n\n    case 'string':\n      return JSON.stringify(ast.val || \"\");\n\n    case 'octothorpe':\n      if (!data.pf_count) return '\"#\"';\n      args = [ propname(data.keys[data.pf_count-1], 'd') ];\n      if (data.offset[data.pf_count-1]) args.push(data.offset[data.pf_count-1]);\n      return 'number(' + args.join(', ') + ')';\n\n    default:\n      throw new Error( 'Bad AST type: ' + ast.type );\n  }\n};\n\n/** Compile messages into an executable function with clean string\n *  representation.\n *\n *  If `messages` is a single string including ICU MessageFormat declarations,\n *  `opt` is ignored and the returned function takes a single Object parameter\n *  `d` representing each of the input's defined variables. The returned\n *  function will be defined in a local scope that includes all the required\n *  runtime variables.\n *\n *  If `messages` is a map of keys to strings, or a map of namespace keys to\n *  such key/string maps, the returned function will fill the specified global\n *  with javascript functions matching the structure of the input. In such use,\n *  the result of `compile()` may be serialized using its `toString()` method,\n *  including all required runtime function definitions. If `opt.global` is\n *  null, calling the output function will return the object itself.\n *\n *  Together, the input parameters should match the following patterns:\n *  ```js\n *  messages = \"string\" || { key0: \"string0\", key1: \"string1\", ... } || {\n *    ns0: { key0: \"string0\", key1: \"string1\", ...  },\n *    ns1: { key0: \"string0\", key1: \"string1\", ...  },\n *    ...\n *  }\n *\n *  opt = null || {\n *    locale: null || {\n *      ns0: \"lc0\" || [ \"lc0\", ... ],\n *      ns1: \"lc1\" || [ \"lc1\", ... ],\n *      ...\n *    },\n *    global: null || \"module.exports\" || \"exports\" || \"i18n\" || ...\n *  }\n *  ```\n *\n * @memberof MessageFormat\n * @param {string|Object}\n *     messages - The input message(s) to be compiled, in ICU MessageFormat\n * @param {Object} [opt={}] - Options controlling output for non-simple intput\n * @param {Object} [opt.locale] - The locales to use for the messages, with a\n *     structure matching that of `messages`\n * @param {string} [opt.global=\"\"] - The global variable that the output\n *     function should use, or a null string for none. \"exports\" and\n *     \"module.exports\" are recognised as special cases.\n * @returns {function} The first match found for the given locale(s)\n *\n * @example\n * var mf = new MessageFormat('en');\n * var cf = mf.compile('A {TYPE} example.');\n *\n * cf({ TYPE: 'simple' })\n * // 'A simple example.'\n *\n * cf.toString()\n * // 'function (d) { return \"A \" + d.TYPE + \" example.\"; }'\n *\n * @example\n * var fs = require('fs');\n * var mf = new MessageFormat('en');\n * var msgSet = {\n *   a: 'A {TYPE} example.',\n *   b: 'This has {COUNT, plural, one{one member} other{# members}}.'\n * };\n * var cfSet = mf.compile(msgSet, { global: 'module.exports' });\n * var str = cfSet.toString().replace(/^[^{]*{/, '').replace(/}\\s*$/, '').trim();\n * fs.writeFileSync('messages.js', str);\n * ...\n * var messages = require('./messages');\n *\n * messages.a({ TYPE: 'more complex' })\n * // 'A more complex example.'\n *\n * messages.b({ COUNT: 2 })\n * // 'This has 2 members.'\n *\n * @example\n * var mf = new MessageFormat('en');\n * mf.runtime.pluralFuncs.fi = MessageFormat.plurals.fi;\n * mf.compile({\n *   en: { a: 'A {TYPE} example.',\n *         b: 'This is the {COUNT, selectordinal, one{#st} two{#nd} few{#rd} other{#th}} example.' },\n *   fi: { a: '{TYPE} esimerkki.',\n *         b: 'Tämä on {COUNT, selectordinal, other{#.}} esimerkki.' }\n * }, {\n *   locale: { en: 'en', fi: 'fi' },\n *   global: 'i18n'\n * })(this);\n *\n * i18n.en.b({ COUNT: 3 })\n * // 'This is the 3rd example.'\n *\n * i18n.fi.b({ COUNT: 3 })\n * // 'Tämä on 3. esimerkki.'  */\nMessageFormat.prototype.compile = function ( messages, opt ) {\n  var r = {}, lc0 = this.lc,\n      compileMsg = function(self, msg) {\n        try {\n          var ast = MessageFormat._parse(msg);\n          return self._precompile(ast);\n        } catch (e) {\n          throw new Error((ast ? 'Precompiler' : 'Parser') + ' error: ' + e.toString());\n        }\n      },\n      stringify = function(r, level) {\n        if (!level) level = 0;\n        if (typeof r != 'object') return r;\n        var o = [], indent = '';\n        for (var i = 0; i < level; ++i) indent += '  ';\n        for (var k in r) o.push('\\n' + indent + '  ' + propname(k) + ': ' + stringify(r[k], level + 1));\n        return '{' + o.join(',') + '\\n' + indent + '}';\n      };\n\n  if (typeof messages == 'string') {\n    var f = new Function(\n        'number, plural, select, pluralFuncs, fmt',\n        'return ' + compileMsg(this, messages));\n    return f(this.runtime.number, this.runtime.plural, this.runtime.select,\n        this.runtime.pluralFuncs, this.runtime.fmt);\n  }\n\n  opt = opt || {};\n\n  for (var ns in messages) {\n    if (opt.locale) this.lc = opt.locale[ns] && [].concat(opt.locale[ns]) || lc0;\n    if (typeof messages[ns] == 'string') {\n      try { r[ns] = compileMsg(this, messages[ns]); }\n      catch (e) { e.message = e.message.replace(':', ' with `' + ns + '`:'); throw e; }\n    } else {\n      r[ns] = {};\n      for (var key in messages[ns]) {\n        try { r[ns][key] = compileMsg(this, messages[ns][key]); }\n        catch (e) { e.message = e.message.replace(':', ' with `' + key + '` in `' + ns + '`:'); throw e; }\n      }\n    }\n  }\n\n  this.lc = lc0;\n  var s = this.runtime.toString() + '\\n';\n  switch (opt.global || '') {\n    case 'exports':\n      var o = [];\n      for (var k in r) o.push(propname(k, 'exports') + ' = ' + stringify(r[k]));\n      return new Function(s + o.join(';\\n'));\n    case 'module.exports':\n      return new Function(s + 'module.exports = ' + stringify(r));\n    case '':\n      return new Function(s + 'return ' + stringify(r));\n    default:\n      return new Function('G', s + propname(opt.global, 'G') + ' = ' + stringify(r));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/messageformat/lib/messageformat.js\n// module id = 21\n// module chunks = 0","module.exports = (function() {\n  \"use strict\";\n\n  /*\n   * Generated by PEG.js 0.9.0.\n   *\n   * http://pegjs.org/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  function peg$parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n        parser  = this,\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = function(st) {\n              return { type: 'messageFormatPattern', statements: st };\n            },\n        peg$c1 = \"{\",\n        peg$c2 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c3 = \",\",\n        peg$c4 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c5 = \"}\",\n        peg$c6 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c7 = function(argIdx, efmt) {\n              var res = {\n                type: \"messageFormatElement\",\n                argumentIndex: argIdx\n              };\n              if (efmt && efmt.length) {\n                res.elementFormat = efmt[1];\n              } else {\n                res.output = true;\n              }\n              return res;\n            },\n        peg$c8 = \"plural\",\n        peg$c9 = { type: \"literal\", value: \"plural\", description: \"\\\"plural\\\"\" },\n        peg$c10 = function(t, s) {\n              return { type: \"elementFormat\", key: t, val: s };\n            },\n        peg$c11 = \"selectordinal\",\n        peg$c12 = { type: \"literal\", value: \"selectordinal\", description: \"\\\"selectordinal\\\"\" },\n        peg$c13 = \"select\",\n        peg$c14 = { type: \"literal\", value: \"select\", description: \"\\\"select\\\"\" },\n        peg$c15 = function(t, p) {\n              return { type: \"elementFormat\", key: t, val: p };\n            },\n        peg$c16 = function(op, pf) {\n              return { type: \"pluralFormatPattern\", pluralForms: pf, offset: op || 0 };\n            },\n        peg$c17 = \"offset\",\n        peg$c18 = { type: \"literal\", value: \"offset\", description: \"\\\"offset\\\"\" },\n        peg$c19 = \":\",\n        peg$c20 = { type: \"literal\", value: \":\", description: \"\\\":\\\"\" },\n        peg$c21 = function(d) { return d; },\n        peg$c22 = function(k, mfp) {\n              return { key: k, val: mfp };\n            },\n        peg$c23 = function(i) { return i; },\n        peg$c24 = \"=\",\n        peg$c25 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\n        peg$c26 = function(pf) { return { type: \"selectFormatPattern\", pluralForms: pf }; },\n        peg$c27 = function(p) { return p; },\n        peg$c28 = \"#\",\n        peg$c29 = { type: \"literal\", value: \"#\", description: \"\\\"#\\\"\" },\n        peg$c30 = function() { return {type: 'octothorpe'}; },\n        peg$c31 = function(s) { return { type: \"string\", val: s.join('') }; },\n        peg$c32 = { type: \"other\", description: \"identifier\" },\n        peg$c33 = /^[0-9a-zA-Z$_]/,\n        peg$c34 = { type: \"class\", value: \"[0-9a-zA-Z$_]\", description: \"[0-9a-zA-Z$_]\" },\n        peg$c35 = /^[^ \\t\\n\\r,.+={}]/,\n        peg$c36 = { type: \"class\", value: \"[^ \\\\t\\\\n\\\\r,.+={}]\", description: \"[^ \\\\t\\\\n\\\\r,.+={}]\" },\n        peg$c37 = function(s) { return s; },\n        peg$c38 = function(chars) { return chars.join(''); },\n        peg$c39 = /^[^{}#\\\\\\0-\\x1F \\t\\n\\r]/,\n        peg$c40 = { type: \"class\", value: \"[^{}#\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\", description: \"[^{}#\\\\\\\\\\\\0-\\\\x1F\\\\x7f \\\\t\\\\n\\\\r]\" },\n        peg$c41 = function(x) { return x; },\n        peg$c42 = \"\\\\\\\\\",\n        peg$c43 = { type: \"literal\", value: \"\\\\\\\\\", description: \"\\\"\\\\\\\\\\\\\\\\\\\"\" },\n        peg$c44 = function() { return \"\\\\\"; },\n        peg$c45 = \"\\\\#\",\n        peg$c46 = { type: \"literal\", value: \"\\\\#\", description: \"\\\"\\\\\\\\#\\\"\" },\n        peg$c47 = function() { return \"#\"; },\n        peg$c48 = \"\\\\{\",\n        peg$c49 = { type: \"literal\", value: \"\\\\{\", description: \"\\\"\\\\\\\\{\\\"\" },\n        peg$c50 = function() { return \"\\u007B\"; },\n        peg$c51 = \"\\\\}\",\n        peg$c52 = { type: \"literal\", value: \"\\\\}\", description: \"\\\"\\\\\\\\}\\\"\" },\n        peg$c53 = function() { return \"\\u007D\"; },\n        peg$c54 = \"\\\\u\",\n        peg$c55 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\n        peg$c56 = function(h1, h2, h3, h4) {\n              return String.fromCharCode(parseInt(\"0x\" + h1 + h2 + h3 + h4));\n            },\n        peg$c57 = /^[0-9]/,\n        peg$c58 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c59 = function(ds) {\n            //the number might start with 0 but must not be interpreted as an octal number\n            //Hence, the base is passed to parseInt explicitely\n            return parseInt((ds.join('')), 10);\n          },\n        peg$c60 = /^[0-9a-fA-F]/,\n        peg$c61 = { type: \"class\", value: \"[0-9a-fA-F]\", description: \"[0-9a-fA-F]\" },\n        peg$c62 = { type: \"other\", description: \"whitespace\" },\n        peg$c63 = function(w) { return w.join(''); },\n        peg$c64 = /^[ \\t\\n\\r]/,\n        peg$c65 = { type: \"class\", value: \"[ \\\\t\\\\n\\\\r]\", description: \"[ \\\\t\\\\n\\\\r]\" },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1, seenCR: false }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(\n        message,\n        null,\n        input.substring(peg$savedPos, peg$currPos),\n        peg$computeLocation(peg$savedPos, peg$currPos)\n      );\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos],\n          p, ch;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column,\n          seenCR: details.seenCR\n        };\n\n        while (p < pos) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, found, location) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new peg$SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsemessageFormatPattern();\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatPattern() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsemessageFormatElement();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsestring();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseoctothorpe();\n        }\n      }\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsemessageFormatElement();\n        if (s2 === peg$FAILED) {\n          s2 = peg$parsestring();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseoctothorpe();\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatElement() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c1;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c2); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseid();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c3;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseelementFormat();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 125) {\n                  s6 = peg$c5;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c6); }\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c7(s3, s4);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseelementFormat() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c8) {\n          s2 = peg$c8;\n          peg$currPos += 6;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c9); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s4 = peg$c3;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsepluralFormatPattern();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c10(s2, s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          if (input.substr(peg$currPos, 13) === peg$c11) {\n            s2 = peg$c11;\n            peg$currPos += 13;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c12); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parse_();\n            if (s3 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s4 = peg$c3;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c4); }\n              }\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parse_();\n                if (s5 !== peg$FAILED) {\n                  s6 = peg$parsepluralFormatPattern();\n                  if (s6 !== peg$FAILED) {\n                    s7 = peg$parse_();\n                    if (s7 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c10(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parse_();\n          if (s1 !== peg$FAILED) {\n            if (input.substr(peg$currPos, 6) === peg$c13) {\n              s2 = peg$c13;\n              peg$currPos += 6;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parse_();\n              if (s3 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 44) {\n                  s4 = peg$c3;\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c4); }\n                }\n                if (s4 !== peg$FAILED) {\n                  s5 = peg$parse_();\n                  if (s5 !== peg$FAILED) {\n                    s6 = peg$parseselectFormatPattern();\n                    if (s6 !== peg$FAILED) {\n                      s7 = peg$parse_();\n                      if (s7 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c10(s2, s6);\n                        s0 = s1;\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parse_();\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parseid();\n              if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parseargStylePattern();\n                while (s4 !== peg$FAILED) {\n                  s3.push(s4);\n                  s4 = peg$parseargStylePattern();\n                }\n                if (s3 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c15(s2, s3);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralFormatPattern() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$parseoffsetPattern();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parsepluralForm();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parsepluralForm();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c16(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseoffsetPattern() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 6) === peg$c17) {\n          s2 = peg$c17;\n          peg$currPos += 6;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c18); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 58) {\n              s4 = peg$c19;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c20); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsedigits();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c21(s6);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralForm() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsepluralKey();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s4 = peg$c1;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsemessageFormatPattern();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s8 = peg$c5;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c22(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralKey() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = peg$parseid();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c23(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s1 = peg$c24;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c25); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsedigits();\n          if (s2 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c21(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectFormatPattern() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parseselectForm();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parseselectForm();\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c26(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseselectForm() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseid();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s4 = peg$c1;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c2); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsemessageFormatPattern();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s8 = peg$c5;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c6); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c22(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseargStylePattern() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s2 = peg$c3;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseid();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c27(s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      return s0;\n    }\n\n    function peg$parseoctothorpe() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c28;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c30();\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsestring() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechars();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsewhitespace();\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechars();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parsewhitespace();\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c31(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseid() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        if (peg$c33.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c34); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = [];\n          if (peg$c35.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c36); }\n          }\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            if (peg$c35.test(input.charAt(peg$currPos))) {\n              s6 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s6 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c36); }\n            }\n          }\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c37(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsechars() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c38(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsechar() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (peg$c39.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c41(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c42) {\n          s1 = peg$c42;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c44();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c45) {\n            s1 = peg$c45;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c46); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c47();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c48) {\n              s1 = peg$c48;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c49); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c50();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c51) {\n                s1 = peg$c51;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c52); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c53();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c54) {\n                  s1 = peg$c54;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c55); }\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parsehexDigit();\n                  if (s2 !== peg$FAILED) {\n                    s3 = peg$parsehexDigit();\n                    if (s3 !== peg$FAILED) {\n                      s4 = peg$parsehexDigit();\n                      if (s4 !== peg$FAILED) {\n                        s5 = peg$parsehexDigit();\n                        if (s5 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c56(s2, s3, s4, s5);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigits() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c57.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c58); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c57.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c58); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c59(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsehexDigit() {\n      var s0;\n\n      if (peg$c60.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c61); }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsewhitespace();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsewhitespace();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c63(s1);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c62); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsewhitespace() {\n      var s0;\n\n      if (peg$c64.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(\n        null,\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/messageformat/lib/messageformat-parser.js\n// module id = 22\n// module chunks = 0","var _cp = [\nfunction(n, ord) {\n  if (ord) return 'other';\n  return 'other';\n},\nfunction(n, ord) {\n  if (ord) return 'other';\n  return (n == 1) ? 'one' : 'other';\n},\nfunction(n, ord) {\n  if (ord) return 'other';\n  return ((n == 0\n          || n == 1)) ? 'one' : 'other';\n},\nfunction(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1];\n  if (ord) return 'other';\n  return (n == 1 && v0) ? 'one' : 'other';\n}\n];\n\n(function (root, plurals) {\n  if (typeof define === 'function' && define.amd) {\n    define(plurals);\n  } else if (typeof exports === 'object') {\n    module.exports = plurals;\n  } else {\n    root.plurals = plurals;\n  }\n}(this, {\naf: _cp[1],\n\nak: _cp[2],\n\nam: function(n, ord) {\n  if (ord) return 'other';\n  return (n >= 0 && n <= 1) ? 'one' : 'other';\n},\n\nar: function(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n,\n      n100 = t0 && s[0].slice(-2);\n  if (ord) return 'other';\n  return (n == 0) ? 'zero'\n      : (n == 1) ? 'one'\n      : (n == 2) ? 'two'\n      : ((n100 >= 3 && n100 <= 10)) ? 'few'\n      : ((n100 >= 11 && n100 <= 99)) ? 'many'\n      : 'other';\n},\n\nas: function(n, ord) {\n  if (ord) return ((n == 1 || n == 5 || n == 7 || n == 8 || n == 9\n          || n == 10)) ? 'one'\n      : ((n == 2\n          || n == 3)) ? 'two'\n      : (n == 4) ? 'few'\n      : (n == 6) ? 'many'\n      : 'other';\n  return (n >= 0 && n <= 1) ? 'one' : 'other';\n},\n\nasa: _cp[1],\n\nast: _cp[3],\n\naz: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], i10 = i.slice(-1),\n      i100 = i.slice(-2), i1000 = i.slice(-3);\n  if (ord) return ((i10 == 1 || i10 == 2 || i10 == 5 || i10 == 7 || i10 == 8)\n          || (i100 == 20 || i100 == 50 || i100 == 70\n          || i100 == 80)) ? 'one'\n      : ((i10 == 3 || i10 == 4) || (i1000 == 100 || i1000 == 200\n          || i1000 == 300 || i1000 == 400 || i1000 == 500 || i1000 == 600 || i1000 == 700\n          || i1000 == 800\n          || i1000 == 900)) ? 'few'\n      : (i == 0 || i10 == 6 || (i100 == 40 || i100 == 60\n          || i100 == 90)) ? 'many'\n      : 'other';\n  return (n == 1) ? 'one' : 'other';\n},\n\nbe: function(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n,\n      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n  if (ord) return ((n10 == 2\n          || n10 == 3) && n100 != 12 && n100 != 13) ? 'few' : 'other';\n  return (n10 == 1 && n100 != 11) ? 'one'\n      : ((n10 >= 2 && n10 <= 4) && (n100 < 12\n          || n100 > 14)) ? 'few'\n      : (t0 && n10 == 0 || (n10 >= 5 && n10 <= 9)\n          || (n100 >= 11 && n100 <= 14)) ? 'many'\n      : 'other';\n},\n\nbem: _cp[1],\n\nbez: _cp[1],\n\nbg: _cp[1],\n\nbh: _cp[2],\n\nbm: _cp[0],\n\nbn: function(n, ord) {\n  if (ord) return ((n == 1 || n == 5 || n == 7 || n == 8 || n == 9\n          || n == 10)) ? 'one'\n      : ((n == 2\n          || n == 3)) ? 'two'\n      : (n == 4) ? 'few'\n      : (n == 6) ? 'many'\n      : 'other';\n  return (n >= 0 && n <= 1) ? 'one' : 'other';\n},\n\nbo: _cp[0],\n\nbr: function(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n,\n      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2),\n      n1000000 = t0 && s[0].slice(-6);\n  if (ord) return 'other';\n  return (n10 == 1 && n100 != 11 && n100 != 71 && n100 != 91) ? 'one'\n      : (n10 == 2 && n100 != 12 && n100 != 72 && n100 != 92) ? 'two'\n      : (((n10 == 3 || n10 == 4) || n10 == 9) && (n100 < 10\n          || n100 > 19) && (n100 < 70 || n100 > 79) && (n100 < 90\n          || n100 > 99)) ? 'few'\n      : (n != 0 && t0 && n1000000 == 0) ? 'many'\n      : 'other';\n},\n\nbrx: _cp[1],\n\nbs: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],\n      i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  if (ord) return 'other';\n  return (v0 && i10 == 1 && i100 != 11\n          || f10 == 1 && f100 != 11) ? 'one'\n      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14)\n          || (f10 >= 2 && f10 <= 4) && (f100 < 12\n          || f100 > 14)) ? 'few'\n      : 'other';\n},\n\nca: function(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1];\n  if (ord) return ((n == 1\n          || n == 3)) ? 'one'\n      : (n == 2) ? 'two'\n      : (n == 4) ? 'few'\n      : 'other';\n  return (n == 1 && v0) ? 'one' : 'other';\n},\n\nce: _cp[1],\n\ncgg: _cp[1],\n\nchr: _cp[1],\n\nckb: _cp[1],\n\ncs: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1];\n  if (ord) return 'other';\n  return (n == 1 && v0) ? 'one'\n      : ((i >= 2 && i <= 4) && v0) ? 'few'\n      : (!v0) ? 'many'\n      : 'other';\n},\n\ncy: function(n, ord) {\n  if (ord) return ((n == 0 || n == 7 || n == 8\n          || n == 9)) ? 'zero'\n      : (n == 1) ? 'one'\n      : (n == 2) ? 'two'\n      : ((n == 3\n          || n == 4)) ? 'few'\n      : ((n == 5\n          || n == 6)) ? 'many'\n      : 'other';\n  return (n == 0) ? 'zero'\n      : (n == 1) ? 'one'\n      : (n == 2) ? 'two'\n      : (n == 3) ? 'few'\n      : (n == 6) ? 'many'\n      : 'other';\n},\n\nda: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], t0 = Number(s[0]) == n;\n  if (ord) return 'other';\n  return (n == 1 || !t0 && (i == 0\n          || i == 1)) ? 'one' : 'other';\n},\n\nde: _cp[3],\n\ndsb: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],\n      i100 = i.slice(-2), f100 = f.slice(-2);\n  if (ord) return 'other';\n  return (v0 && i100 == 1\n          || f100 == 1) ? 'one'\n      : (v0 && i100 == 2\n          || f100 == 2) ? 'two'\n      : (v0 && (i100 == 3 || i100 == 4) || (f100 == 3\n          || f100 == 4)) ? 'few'\n      : 'other';\n},\n\ndv: _cp[1],\n\ndz: _cp[0],\n\nee: _cp[1],\n\nel: _cp[1],\n\nen: function(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n,\n      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n  if (ord) return (n10 == 1 && n100 != 11) ? 'one'\n      : (n10 == 2 && n100 != 12) ? 'two'\n      : (n10 == 3 && n100 != 13) ? 'few'\n      : 'other';\n  return (n == 1 && v0) ? 'one' : 'other';\n},\n\neo: _cp[1],\n\nes: _cp[1],\n\net: _cp[3],\n\neu: _cp[1],\n\nfa: function(n, ord) {\n  if (ord) return 'other';\n  return (n >= 0 && n <= 1) ? 'one' : 'other';\n},\n\nff: function(n, ord) {\n  if (ord) return 'other';\n  return (n >= 0 && n < 2) ? 'one' : 'other';\n},\n\nfi: _cp[3],\n\nfil: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],\n      i10 = i.slice(-1), f10 = f.slice(-1);\n  if (ord) return (n == 1) ? 'one' : 'other';\n  return (v0 && (i == 1 || i == 2 || i == 3)\n          || v0 && i10 != 4 && i10 != 6 && i10 != 9\n          || !v0 && f10 != 4 && f10 != 6 && f10 != 9) ? 'one' : 'other';\n},\n\nfo: _cp[1],\n\nfr: function(n, ord) {\n  if (ord) return (n == 1) ? 'one' : 'other';\n  return (n >= 0 && n < 2) ? 'one' : 'other';\n},\n\nfur: _cp[1],\n\nfy: _cp[3],\n\nga: function(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n;\n  if (ord) return (n == 1) ? 'one' : 'other';\n  return (n == 1) ? 'one'\n      : (n == 2) ? 'two'\n      : ((t0 && n >= 3 && n <= 6)) ? 'few'\n      : ((t0 && n >= 7 && n <= 10)) ? 'many'\n      : 'other';\n},\n\ngd: function(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n;\n  if (ord) return 'other';\n  return ((n == 1\n          || n == 11)) ? 'one'\n      : ((n == 2\n          || n == 12)) ? 'two'\n      : (((t0 && n >= 3 && n <= 10)\n          || (t0 && n >= 13 && n <= 19))) ? 'few'\n      : 'other';\n},\n\ngl: _cp[3],\n\ngsw: _cp[1],\n\ngu: function(n, ord) {\n  if (ord) return (n == 1) ? 'one'\n      : ((n == 2\n          || n == 3)) ? 'two'\n      : (n == 4) ? 'few'\n      : (n == 6) ? 'many'\n      : 'other';\n  return (n >= 0 && n <= 1) ? 'one' : 'other';\n},\n\nguw: _cp[2],\n\ngv: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1),\n      i100 = i.slice(-2);\n  if (ord) return 'other';\n  return (v0 && i10 == 1) ? 'one'\n      : (v0 && i10 == 2) ? 'two'\n      : (v0 && (i100 == 0 || i100 == 20 || i100 == 40 || i100 == 60\n          || i100 == 80)) ? 'few'\n      : (!v0) ? 'many'\n      : 'other';\n},\n\nha: _cp[1],\n\nhaw: _cp[1],\n\nhe: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], t0 = Number(s[0]) == n,\n      n10 = t0 && s[0].slice(-1);\n  if (ord) return 'other';\n  return (n == 1 && v0) ? 'one'\n      : (i == 2 && v0) ? 'two'\n      : (v0 && (n < 0\n          || n > 10) && t0 && n10 == 0) ? 'many'\n      : 'other';\n},\n\nhi: function(n, ord) {\n  if (ord) return (n == 1) ? 'one'\n      : ((n == 2\n          || n == 3)) ? 'two'\n      : (n == 4) ? 'few'\n      : (n == 6) ? 'many'\n      : 'other';\n  return (n >= 0 && n <= 1) ? 'one' : 'other';\n},\n\nhr: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],\n      i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  if (ord) return 'other';\n  return (v0 && i10 == 1 && i100 != 11\n          || f10 == 1 && f100 != 11) ? 'one'\n      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14)\n          || (f10 >= 2 && f10 <= 4) && (f100 < 12\n          || f100 > 14)) ? 'few'\n      : 'other';\n},\n\nhsb: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],\n      i100 = i.slice(-2), f100 = f.slice(-2);\n  if (ord) return 'other';\n  return (v0 && i100 == 1\n          || f100 == 1) ? 'one'\n      : (v0 && i100 == 2\n          || f100 == 2) ? 'two'\n      : (v0 && (i100 == 3 || i100 == 4) || (f100 == 3\n          || f100 == 4)) ? 'few'\n      : 'other';\n},\n\nhu: function(n, ord) {\n  if (ord) return ((n == 1\n          || n == 5)) ? 'one' : 'other';\n  return (n == 1) ? 'one' : 'other';\n},\n\nhy: function(n, ord) {\n  if (ord) return (n == 1) ? 'one' : 'other';\n  return (n >= 0 && n < 2) ? 'one' : 'other';\n},\n\nid: _cp[0],\n\nig: _cp[0],\n\nii: _cp[0],\n\n\"in\": _cp[0],\n\nis: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], t0 = Number(s[0]) == n,\n      i10 = i.slice(-1), i100 = i.slice(-2);\n  if (ord) return 'other';\n  return (t0 && i10 == 1 && i100 != 11\n          || !t0) ? 'one' : 'other';\n},\n\nit: function(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1];\n  if (ord) return ((n == 11 || n == 8 || n == 80\n          || n == 800)) ? 'many' : 'other';\n  return (n == 1 && v0) ? 'one' : 'other';\n},\n\niu: function(n, ord) {\n  if (ord) return 'other';\n  return (n == 1) ? 'one'\n      : (n == 2) ? 'two'\n      : 'other';\n},\n\niw: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], t0 = Number(s[0]) == n,\n      n10 = t0 && s[0].slice(-1);\n  if (ord) return 'other';\n  return (n == 1 && v0) ? 'one'\n      : (i == 2 && v0) ? 'two'\n      : (v0 && (n < 0\n          || n > 10) && t0 && n10 == 0) ? 'many'\n      : 'other';\n},\n\nja: _cp[0],\n\njbo: _cp[0],\n\njgo: _cp[1],\n\nji: _cp[3],\n\njmc: _cp[1],\n\njv: _cp[0],\n\njw: _cp[0],\n\nka: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], i100 = i.slice(-2);\n  if (ord) return (i == 1) ? 'one'\n      : (i == 0 || ((i100 >= 2 && i100 <= 20) || i100 == 40 || i100 == 60\n          || i100 == 80)) ? 'many'\n      : 'other';\n  return (n == 1) ? 'one' : 'other';\n},\n\nkab: function(n, ord) {\n  if (ord) return 'other';\n  return (n >= 0 && n < 2) ? 'one' : 'other';\n},\n\nkaj: _cp[1],\n\nkcg: _cp[1],\n\nkde: _cp[0],\n\nkea: _cp[0],\n\nkk: function(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n,\n      n10 = t0 && s[0].slice(-1);\n  if (ord) return (n10 == 6 || n10 == 9\n          || t0 && n10 == 0 && n != 0) ? 'many' : 'other';\n  return (n == 1) ? 'one' : 'other';\n},\n\nkkj: _cp[1],\n\nkl: _cp[1],\n\nkm: _cp[0],\n\nkn: function(n, ord) {\n  if (ord) return 'other';\n  return (n >= 0 && n <= 1) ? 'one' : 'other';\n},\n\nko: _cp[0],\n\nks: _cp[1],\n\nksb: _cp[1],\n\nksh: function(n, ord) {\n  if (ord) return 'other';\n  return (n == 0) ? 'zero'\n      : (n == 1) ? 'one'\n      : 'other';\n},\n\nku: _cp[1],\n\nkw: function(n, ord) {\n  if (ord) return 'other';\n  return (n == 1) ? 'one'\n      : (n == 2) ? 'two'\n      : 'other';\n},\n\nky: _cp[1],\n\nlag: function(n, ord) {\n  var s = String(n).split('.'), i = s[0];\n  if (ord) return 'other';\n  return (n == 0) ? 'zero'\n      : ((i == 0\n          || i == 1) && n != 0) ? 'one'\n      : 'other';\n},\n\nlb: _cp[1],\n\nlg: _cp[1],\n\nlkt: _cp[0],\n\nln: _cp[2],\n\nlo: function(n, ord) {\n  if (ord) return (n == 1) ? 'one' : 'other';\n  return 'other';\n},\n\nlt: function(n, ord) {\n  var s = String(n).split('.'), f = s[1] || '', t0 = Number(s[0]) == n,\n      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n  if (ord) return 'other';\n  return (n10 == 1 && (n100 < 11\n          || n100 > 19)) ? 'one'\n      : ((n10 >= 2 && n10 <= 9) && (n100 < 11\n          || n100 > 19)) ? 'few'\n      : (f != 0) ? 'many'\n      : 'other';\n},\n\nlv: function(n, ord) {\n  var s = String(n).split('.'), f = s[1] || '', v = f.length,\n      t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1),\n      n100 = t0 && s[0].slice(-2), f100 = f.slice(-2), f10 = f.slice(-1);\n  if (ord) return 'other';\n  return (t0 && n10 == 0 || (n100 >= 11 && n100 <= 19)\n          || v == 2 && (f100 >= 11 && f100 <= 19)) ? 'zero'\n      : (n10 == 1 && n100 != 11 || v == 2 && f10 == 1 && f100 != 11\n          || v != 2 && f10 == 1) ? 'one'\n      : 'other';\n},\n\nmas: _cp[1],\n\nmg: _cp[2],\n\nmgo: _cp[1],\n\nmk: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],\n      i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1);\n  if (ord) return (i10 == 1 && i100 != 11) ? 'one'\n      : (i10 == 2 && i100 != 12) ? 'two'\n      : ((i10 == 7\n          || i10 == 8) && i100 != 17 && i100 != 18) ? 'many'\n      : 'other';\n  return (v0 && i10 == 1\n          || f10 == 1) ? 'one' : 'other';\n},\n\nml: _cp[1],\n\nmn: _cp[1],\n\nmo: function(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n,\n      n100 = t0 && s[0].slice(-2);\n  if (ord) return (n == 1) ? 'one' : 'other';\n  return (n == 1 && v0) ? 'one'\n      : (!v0 || n == 0\n          || n != 1 && (n100 >= 1 && n100 <= 19)) ? 'few'\n      : 'other';\n},\n\nmr: function(n, ord) {\n  if (ord) return (n == 1) ? 'one'\n      : ((n == 2\n          || n == 3)) ? 'two'\n      : (n == 4) ? 'few'\n      : 'other';\n  return (n >= 0 && n <= 1) ? 'one' : 'other';\n},\n\nms: function(n, ord) {\n  if (ord) return (n == 1) ? 'one' : 'other';\n  return 'other';\n},\n\nmt: function(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n,\n      n100 = t0 && s[0].slice(-2);\n  if (ord) return 'other';\n  return (n == 1) ? 'one'\n      : (n == 0\n          || (n100 >= 2 && n100 <= 10)) ? 'few'\n      : ((n100 >= 11 && n100 <= 19)) ? 'many'\n      : 'other';\n},\n\nmy: _cp[0],\n\nnah: _cp[1],\n\nnaq: function(n, ord) {\n  if (ord) return 'other';\n  return (n == 1) ? 'one'\n      : (n == 2) ? 'two'\n      : 'other';\n},\n\nnb: _cp[1],\n\nnd: _cp[1],\n\nne: function(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n;\n  if (ord) return ((t0 && n >= 1 && n <= 4)) ? 'one' : 'other';\n  return (n == 1) ? 'one' : 'other';\n},\n\nnl: _cp[3],\n\nnn: _cp[1],\n\nnnh: _cp[1],\n\nno: _cp[1],\n\nnqo: _cp[0],\n\nnr: _cp[1],\n\nnso: _cp[2],\n\nny: _cp[1],\n\nnyn: _cp[1],\n\nom: _cp[1],\n\nor: _cp[1],\n\nos: _cp[1],\n\npa: _cp[2],\n\npap: _cp[1],\n\npl: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1),\n      i100 = i.slice(-2);\n  if (ord) return 'other';\n  return (n == 1 && v0) ? 'one'\n      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12\n          || i100 > 14)) ? 'few'\n      : (v0 && i != 1 && (i10 == 0 || i10 == 1)\n          || v0 && (i10 >= 5 && i10 <= 9)\n          || v0 && (i100 >= 12 && i100 <= 14)) ? 'many'\n      : 'other';\n},\n\nprg: function(n, ord) {\n  var s = String(n).split('.'), f = s[1] || '', v = f.length,\n      t0 = Number(s[0]) == n, n10 = t0 && s[0].slice(-1),\n      n100 = t0 && s[0].slice(-2), f100 = f.slice(-2), f10 = f.slice(-1);\n  if (ord) return 'other';\n  return (t0 && n10 == 0 || (n100 >= 11 && n100 <= 19)\n          || v == 2 && (f100 >= 11 && f100 <= 19)) ? 'zero'\n      : (n10 == 1 && n100 != 11 || v == 2 && f10 == 1 && f100 != 11\n          || v != 2 && f10 == 1) ? 'one'\n      : 'other';\n},\n\nps: _cp[1],\n\npt: function(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n;\n  if (ord) return 'other';\n  return ((t0 && n >= 0 && n <= 2) && n != 2) ? 'one' : 'other';\n},\n\n\"pt-PT\": _cp[3],\n\nrm: _cp[1],\n\nro: function(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n,\n      n100 = t0 && s[0].slice(-2);\n  if (ord) return (n == 1) ? 'one' : 'other';\n  return (n == 1 && v0) ? 'one'\n      : (!v0 || n == 0\n          || n != 1 && (n100 >= 1 && n100 <= 19)) ? 'few'\n      : 'other';\n},\n\nrof: _cp[1],\n\nroot: _cp[0],\n\nru: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], i10 = i.slice(-1),\n      i100 = i.slice(-2);\n  if (ord) return 'other';\n  return (v0 && i10 == 1 && i100 != 11) ? 'one'\n      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12\n          || i100 > 14)) ? 'few'\n      : (v0 && i10 == 0 || v0 && (i10 >= 5 && i10 <= 9)\n          || v0 && (i100 >= 11 && i100 <= 14)) ? 'many'\n      : 'other';\n},\n\nrwk: _cp[1],\n\nsah: _cp[0],\n\nsaq: _cp[1],\n\nsdh: _cp[1],\n\nse: function(n, ord) {\n  if (ord) return 'other';\n  return (n == 1) ? 'one'\n      : (n == 2) ? 'two'\n      : 'other';\n},\n\nseh: _cp[1],\n\nses: _cp[0],\n\nsg: _cp[0],\n\nsh: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],\n      i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  if (ord) return 'other';\n  return (v0 && i10 == 1 && i100 != 11\n          || f10 == 1 && f100 != 11) ? 'one'\n      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14)\n          || (f10 >= 2 && f10 <= 4) && (f100 < 12\n          || f100 > 14)) ? 'few'\n      : 'other';\n},\n\nshi: function(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n;\n  if (ord) return 'other';\n  return (n >= 0 && n <= 1) ? 'one'\n      : ((t0 && n >= 2 && n <= 10)) ? 'few'\n      : 'other';\n},\n\nsi: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '';\n  if (ord) return 'other';\n  return ((n == 0 || n == 1)\n          || i == 0 && f == 1) ? 'one' : 'other';\n},\n\nsk: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1];\n  if (ord) return 'other';\n  return (n == 1 && v0) ? 'one'\n      : ((i >= 2 && i <= 4) && v0) ? 'few'\n      : (!v0) ? 'many'\n      : 'other';\n},\n\nsl: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], i100 = i.slice(-2);\n  if (ord) return 'other';\n  return (v0 && i100 == 1) ? 'one'\n      : (v0 && i100 == 2) ? 'two'\n      : (v0 && (i100 == 3 || i100 == 4)\n          || !v0) ? 'few'\n      : 'other';\n},\n\nsma: function(n, ord) {\n  if (ord) return 'other';\n  return (n == 1) ? 'one'\n      : (n == 2) ? 'two'\n      : 'other';\n},\n\nsmi: function(n, ord) {\n  if (ord) return 'other';\n  return (n == 1) ? 'one'\n      : (n == 2) ? 'two'\n      : 'other';\n},\n\nsmj: function(n, ord) {\n  if (ord) return 'other';\n  return (n == 1) ? 'one'\n      : (n == 2) ? 'two'\n      : 'other';\n},\n\nsmn: function(n, ord) {\n  if (ord) return 'other';\n  return (n == 1) ? 'one'\n      : (n == 2) ? 'two'\n      : 'other';\n},\n\nsms: function(n, ord) {\n  if (ord) return 'other';\n  return (n == 1) ? 'one'\n      : (n == 2) ? 'two'\n      : 'other';\n},\n\nsn: _cp[1],\n\nso: _cp[1],\n\nsq: function(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n,\n      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n  if (ord) return (n == 1) ? 'one'\n      : (n10 == 4 && n100 != 14) ? 'many'\n      : 'other';\n  return (n == 1) ? 'one' : 'other';\n},\n\nsr: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],\n      i10 = i.slice(-1), i100 = i.slice(-2), f10 = f.slice(-1), f100 = f.slice(-2);\n  if (ord) return 'other';\n  return (v0 && i10 == 1 && i100 != 11\n          || f10 == 1 && f100 != 11) ? 'one'\n      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12 || i100 > 14)\n          || (f10 >= 2 && f10 <= 4) && (f100 < 12\n          || f100 > 14)) ? 'few'\n      : 'other';\n},\n\nss: _cp[1],\n\nssy: _cp[1],\n\nst: _cp[1],\n\nsv: function(n, ord) {\n  var s = String(n).split('.'), v0 = !s[1], t0 = Number(s[0]) == n,\n      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2);\n  if (ord) return ((n10 == 1\n          || n10 == 2) && n100 != 11 && n100 != 12) ? 'one' : 'other';\n  return (n == 1 && v0) ? 'one' : 'other';\n},\n\nsw: _cp[3],\n\nsyr: _cp[1],\n\nta: _cp[1],\n\nte: _cp[1],\n\nteo: _cp[1],\n\nth: _cp[0],\n\nti: _cp[2],\n\ntig: _cp[1],\n\ntk: _cp[1],\n\ntl: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], f = s[1] || '', v0 = !s[1],\n      i10 = i.slice(-1), f10 = f.slice(-1);\n  if (ord) return (n == 1) ? 'one' : 'other';\n  return (v0 && (i == 1 || i == 2 || i == 3)\n          || v0 && i10 != 4 && i10 != 6 && i10 != 9\n          || !v0 && f10 != 4 && f10 != 6 && f10 != 9) ? 'one' : 'other';\n},\n\ntn: _cp[1],\n\nto: _cp[0],\n\ntr: _cp[1],\n\nts: _cp[1],\n\ntzm: function(n, ord) {\n  var s = String(n).split('.'), t0 = Number(s[0]) == n;\n  if (ord) return 'other';\n  return ((n == 0 || n == 1)\n          || (t0 && n >= 11 && n <= 99)) ? 'one' : 'other';\n},\n\nug: _cp[1],\n\nuk: function(n, ord) {\n  var s = String(n).split('.'), i = s[0], v0 = !s[1], t0 = Number(s[0]) == n,\n      n10 = t0 && s[0].slice(-1), n100 = t0 && s[0].slice(-2), i10 = i.slice(-1),\n      i100 = i.slice(-2);\n  if (ord) return (n10 == 3 && n100 != 13) ? 'few' : 'other';\n  return (v0 && i10 == 1 && i100 != 11) ? 'one'\n      : (v0 && (i10 >= 2 && i10 <= 4) && (i100 < 12\n          || i100 > 14)) ? 'few'\n      : (v0 && i10 == 0 || v0 && (i10 >= 5 && i10 <= 9)\n          || v0 && (i100 >= 11 && i100 <= 14)) ? 'many'\n      : 'other';\n},\n\nur: _cp[3],\n\nuz: _cp[1],\n\nve: _cp[1],\n\nvi: function(n, ord) {\n  if (ord) return (n == 1) ? 'one' : 'other';\n  return 'other';\n},\n\nvo: _cp[1],\n\nvun: _cp[1],\n\nwa: _cp[2],\n\nwae: _cp[1],\n\nwo: _cp[0],\n\nxh: _cp[1],\n\nxog: _cp[1],\n\nyi: _cp[3],\n\nyo: _cp[0],\n\nzh: _cp[0],\n\nzu: function(n, ord) {\n  if (ord) return 'other';\n  return (n >= 0 && n <= 1) ? 'one' : 'other';\n}\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/make-plural/plurals.js\n// module id = 23\n// module chunks = 0","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.MakePlural = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * make-plural.js -- https://github.com/eemeli/make-plural.js/\n * Copyright (c) 2014-2016 by Eemeli Aro <eemeli@gmail.com>\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * The software is provided \"as is\" and the author disclaims all warranties\n * with regard to this software including all implied warranties of\n * merchantability and fitness. In no event shall the author be liable for\n * any special, direct, indirect, or consequential damages or any damages\n * whatsoever resulting from loss of use, data or profits, whether in an\n * action of contract, negligence or other tortious action, arising out of\n * or in connection with the use or performance of this software.\n */\n\nvar Parser = function () {\n    function Parser() {\n        _classCallCheck(this, Parser);\n    }\n\n    _createClass(Parser, [{\n        key: 'parse',\n        value: function parse(cond) {\n            var _this = this;\n\n            if (cond === 'i = 0 or n = 1') return 'n >= 0 && n <= 1';\n            if (cond === 'i = 0,1') return 'n >= 0 && n < 2';\n            if (cond === 'i = 1 and v = 0') {\n                this.v0 = 1;\n                return 'n == 1 && v0';\n            }\n            return cond.replace(/([tv]) (!?)= 0/g, function (m, sym, noteq) {\n                var sn = sym + '0';\n                _this[sn] = 1;\n                return noteq ? '!' + sn : sn;\n            }).replace(/\\b[fintv]\\b/g, function (m) {\n                _this[m] = 1;\n                return m;\n            }).replace(/([fin]) % (10+)/g, function (m, sym, num) {\n                var sn = sym + num;\n                _this[sn] = 1;\n                return sn;\n            }).replace(/n10+ = 0/g, 't0 && $&').replace(/(\\w+ (!?)= )([0-9.]+,[0-9.,]+)/g, function (m, se, noteq, x) {\n                if (m === 'n = 0,1') return '(n == 0 || n == 1)';\n                if (noteq) return se + x.split(',').join(' && ' + se);\n                return '(' + se + x.split(',').join(' || ' + se) + ')';\n            }).replace(/(\\w+) (!?)= ([0-9]+)\\.\\.([0-9]+)/g, function (m, sym, noteq, x0, x1) {\n                if (Number(x0) + 1 === Number(x1)) {\n                    if (noteq) return sym + ' != ' + x0 + ' && ' + sym + ' != ' + x1;\n                    return '(' + sym + ' == ' + x0 + ' || ' + sym + ' == ' + x1 + ')';\n                }\n                if (noteq) return '(' + sym + ' < ' + x0 + ' || ' + sym + ' > ' + x1 + ')';\n                if (sym === 'n') {\n                    _this.t0 = 1;return '(t0 && n >= ' + x0 + ' && n <= ' + x1 + ')';\n                }\n                return '(' + sym + ' >= ' + x0 + ' && ' + sym + ' <= ' + x1 + ')';\n            }).replace(/ and /g, ' && ').replace(/ or /g, ' || ').replace(/ = /g, ' == ');\n        }\n    }, {\n        key: 'vars',\n        value: function vars() {\n            var vars = [];\n            if (this.i) vars.push('i = s[0]');\n            if (this.f || this.v) vars.push(\"f = s[1] || ''\");\n            if (this.t) vars.push(\"t = (s[1] || '').replace(/0+$/, '')\");\n            if (this.v) vars.push('v = f.length');\n            if (this.v0) vars.push('v0 = !s[1]');\n            if (this.t0 || this.n10 || this.n100) vars.push('t0 = Number(s[0]) == n');\n            for (var k in this) {\n                if (/^.10+$/.test(k)) {\n                    var k0 = k[0] === 'n' ? 't0 && s[0]' : k[0];\n                    vars.push(k + ' = ' + k0 + '.slice(-' + k.substr(2).length + ')');\n                }\n            }\n            if (!vars.length) return '';\n            return 'var ' + [\"s = String(n).split('.')\"].concat(vars).join(', ');\n        }\n    }]);\n\n    return Parser;\n}();\n\nvar Tests = function () {\n    function Tests(obj) {\n        _classCallCheck(this, Tests);\n\n        this.obj = obj;\n        this.ordinal = {};\n        this.cardinal = {};\n    }\n\n    _createClass(Tests, [{\n        key: 'add',\n        value: function add(type, cat, examples) {\n            this[type][cat] = examples.join(' ').replace(/^[ ,]+|[ ,…]+$/g, '').replace(/(0\\.[0-9])~(1\\.[1-9])/g, '$1 1.0 $2').split(/[ ,~…]+/);\n        }\n    }, {\n        key: 'testCond',\n        value: function testCond(n, type, expResult, fn) {\n            try {\n                var r = (fn || this.obj.fn)(n, type === 'ordinal');\n            } catch (e) {\n                r = e.toString();\n            }\n            if (r !== expResult) {\n                throw new Error('Locale ' + JSON.stringify(this.obj.lc) + type + ' rule self-test failed for v = ' + JSON.stringify(n) + ' (was ' + JSON.stringify(r) + ', expected ' + JSON.stringify(expResult) + ')');\n            }\n            return true;\n        }\n    }, {\n        key: 'testCat',\n        value: function testCat(type, cat, fn) {\n            var _this2 = this;\n\n            this[type][cat].forEach(function (n) {\n                _this2.testCond(n, type, cat, fn);\n                if (!/\\.0+$/.test(n)) _this2.testCond(Number(n), type, cat, fn);\n            });\n            return true;\n        }\n    }, {\n        key: 'testAll',\n        value: function testAll() {\n            for (var cat in this.cardinal) {\n                this.testCat('cardinal', cat);\n            }for (var _cat in this.ordinal) {\n                this.testCat('ordinal', _cat);\n            }return true;\n        }\n    }]);\n\n    return Tests;\n}();\n\nvar MakePlural = function () {\n    function MakePlural(lc) {\n        var _ref = arguments.length <= 1 || arguments[1] === undefined ? MakePlural : arguments[1];\n\n        var cardinals = _ref.cardinals;\n        var ordinals = _ref.ordinals;\n\n        _classCallCheck(this, MakePlural);\n\n        if (!cardinals && !ordinals) throw new Error('At least one type of plural is required');\n        this.lc = lc;\n        this.categories = { cardinal: [], ordinal: [] };\n        this.parser = new Parser();\n        this.tests = new Tests(this);\n        this.fn = this.buildFunction(cardinals, ordinals);\n        this.fn._obj = this;\n        this.fn.categories = this.categories;\n        this.fn.test = function () {\n            return this.tests.testAll() && this.fn;\n        }.bind(this);\n        this.fn.toString = this.fnToString.bind(this);\n        return this.fn;\n    }\n\n    _createClass(MakePlural, [{\n        key: 'compile',\n        value: function compile(type, req) {\n            var cases = [];\n            var rules = MakePlural.rules[type][this.lc];\n            if (!rules) {\n                if (req) throw new Error('Locale \"' + this.lc + '\" ' + type + ' rules not found');\n                this.categories[type] = ['other'];\n                return \"'other'\";\n            }\n            for (var r in rules) {\n                var _rules$r$trim$split = rules[r].trim().split(/\\s*@\\w*/);\n\n                var _rules$r$trim$split2 = _toArray(_rules$r$trim$split);\n\n                var cond = _rules$r$trim$split2[0];\n                var examples = _rules$r$trim$split2.slice(1);\n                var cat = r.replace('pluralRule-count-', '');\n                if (cond) cases.push([this.parser.parse(cond), cat]);\n                this.tests.add(type, cat, examples);\n            }\n            this.categories[type] = cases.map(function (c) {\n                return c[1];\n            }).concat('other');\n            if (cases.length === 1) {\n                return '(' + cases[0][0] + ') ? \\'' + cases[0][1] + '\\' : \\'other\\'';\n            } else {\n                return [].concat(_toConsumableArray(cases.map(function (c) {\n                    return '(' + c[0] + ') ? \\'' + c[1] + '\\'';\n                })), [\"'other'\"]).join('\\n      : ');\n            }\n        }\n    }, {\n        key: 'buildFunction',\n        value: function buildFunction(cardinals, ordinals) {\n            var _this3 = this;\n\n            var compile = function compile(c) {\n                return c ? (c[1] ? 'return ' : 'if (ord) return ') + _this3.compile.apply(_this3, _toConsumableArray(c)) : '';\n            },\n                fold = { vars: function vars(str) {\n                    return ('  ' + str + ';').replace(/(.{1,78})(,|$) ?/g, '$1$2\\n      ');\n                },\n                cond: function cond(str) {\n                    return ('  ' + str + ';').replace(/(.{1,78}) (\\|\\| |$) ?/gm, '$1\\n          $2');\n                } },\n                cond = [ordinals && ['ordinal', !cardinals], cardinals && ['cardinal', true]].map(compile).map(fold.cond),\n                body = [fold.vars(this.parser.vars())].concat(_toConsumableArray(cond)).filter(function (line) {\n                return !/^[\\s;]*$/.test(line);\n            }).map(function (line) {\n                return line.replace(/\\s+$/gm, '');\n            }).join('\\n'),\n                args = ordinals && cardinals ? 'n, ord' : 'n';\n            return new Function(args, body);\n        }\n    }, {\n        key: 'fnToString',\n        value: function fnToString(name) {\n            return Function.prototype.toString.call(this.fn).replace(/^function( \\w+)?/, name ? 'function ' + name : 'function').replace('\\n/**/', '');\n        }\n    }], [{\n        key: 'load',\n        value: function load() {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            args.forEach(function (cldr) {\n                var data = cldr && cldr.supplemental || null;\n                if (!data) throw new Error('Data does not appear to be CLDR data');\n                MakePlural.rules = {\n                    cardinal: data['plurals-type-cardinal'] || MakePlural.rules.cardinal,\n                    ordinal: data['plurals-type-ordinal'] || MakePlural.rules.ordinal\n                };\n            });\n            return MakePlural;\n        }\n    }]);\n\n    return MakePlural;\n}();\n\nexports.default = MakePlural;\n\n\nMakePlural.cardinals = true;\nMakePlural.ordinals = false;\nMakePlural.rules = { cardinal: {}, ordinal: {} };\nmodule.exports = exports['default'];\n\n},{}]},{},[1])(1)\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/make-plural/make-plural.js\n// module id = 24\n// module chunks = 0","module.exports = {\n\t\"supplemental\": {\n\t\t\"version\": {\n\t\t\t\"_number\": \"$Revision: 12002 $\",\n\t\t\t\"_unicodeVersion\": \"8.0.0\",\n\t\t\t\"_cldrVersion\": \"29\"\n\t\t},\n\t\t\"plurals-type-cardinal\": {\n\t\t\t\"af\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ak\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"am\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ar\": {\n\t\t\t\t\"pluralRule-count-zero\": \"n = 0 @integer 0 @decimal 0.0, 0.00, 0.000, 0.0000\",\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-two\": \"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000\",\n\t\t\t\t\"pluralRule-count-few\": \"n % 100 = 3..10 @integer 3~10, 103~110, 1003, … @decimal 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 103.0, 1003.0, …\",\n\t\t\t\t\"pluralRule-count-many\": \"n % 100 = 11..99 @integer 11~26, 111, 1011, … @decimal 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 111.0, 1011.0, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 100~102, 200~202, 300~302, 400~402, 500~502, 600, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.1, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"as\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"asa\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ast\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"az\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"be\": {\n\t\t\t\t\"pluralRule-count-one\": \"n % 10 = 1 and n % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 1.0, 21.0, 31.0, 41.0, 51.0, 61.0, 71.0, 81.0, 101.0, 1001.0, …\",\n\t\t\t\t\"pluralRule-count-few\": \"n % 10 = 2..4 and n % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, … @decimal 2.0, 3.0, 4.0, 22.0, 23.0, 24.0, 32.0, 33.0, 102.0, 1002.0, …\",\n\t\t\t\t\"pluralRule-count-many\": \"n % 10 = 0 or n % 10 = 5..9 or n % 100 = 11..14 @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\",\n\t\t\t\t\"pluralRule-count-other\": \"   @decimal 0.1~0.9, 1.1~1.7, 10.1, 100.1, 1000.1, …\"\n\t\t\t},\n\t\t\t\"bem\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"bez\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"bg\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"bh\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"bm\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"bn\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"bo\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"br\": {\n\t\t\t\t\"pluralRule-count-one\": \"n % 10 = 1 and n % 100 != 11,71,91 @integer 1, 21, 31, 41, 51, 61, 81, 101, 1001, … @decimal 1.0, 21.0, 31.0, 41.0, 51.0, 61.0, 81.0, 101.0, 1001.0, …\",\n\t\t\t\t\"pluralRule-count-two\": \"n % 10 = 2 and n % 100 != 12,72,92 @integer 2, 22, 32, 42, 52, 62, 82, 102, 1002, … @decimal 2.0, 22.0, 32.0, 42.0, 52.0, 62.0, 82.0, 102.0, 1002.0, …\",\n\t\t\t\t\"pluralRule-count-few\": \"n % 10 = 3..4,9 and n % 100 != 10..19,70..79,90..99 @integer 3, 4, 9, 23, 24, 29, 33, 34, 39, 43, 44, 49, 103, 1003, … @decimal 3.0, 4.0, 9.0, 23.0, 24.0, 29.0, 33.0, 34.0, 103.0, 1003.0, …\",\n\t\t\t\t\"pluralRule-count-many\": \"n != 0 and n % 1000000 = 0 @integer 1000000, … @decimal 1000000.0, 1000000.00, 1000000.000, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 5~8, 10~20, 100, 1000, 10000, 100000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, …\"\n\t\t\t},\n\t\t\t\"brx\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"bs\": {\n\t\t\t\t\"pluralRule-count-one\": \"v = 0 and i % 10 = 1 and i % 100 != 11 or f % 10 = 1 and f % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …\",\n\t\t\t\t\"pluralRule-count-few\": \"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 or f % 10 = 2..4 and f % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, … @decimal 0.2~0.4, 1.2~1.4, 2.2~2.4, 3.2~3.4, 4.2~4.4, 5.2, 10.2, 100.2, 1000.2, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.5~1.0, 1.5~2.0, 2.5~2.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ca\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ce\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"cgg\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"chr\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ckb\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"cs\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-few\": \"i = 2..4 and v = 0 @integer 2~4\",\n\t\t\t\t\"pluralRule-count-many\": \"v != 0   @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, …\"\n\t\t\t},\n\t\t\t\"cy\": {\n\t\t\t\t\"pluralRule-count-zero\": \"n = 0 @integer 0 @decimal 0.0, 0.00, 0.000, 0.0000\",\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-two\": \"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000\",\n\t\t\t\t\"pluralRule-count-few\": \"n = 3 @integer 3 @decimal 3.0, 3.00, 3.000, 3.0000\",\n\t\t\t\t\"pluralRule-count-many\": \"n = 6 @integer 6 @decimal 6.0, 6.00, 6.000, 6.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 4, 5, 7~20, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"da\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 or t != 0 and i = 0,1 @integer 1 @decimal 0.1~1.6\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 2.0~3.4, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"de\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"dsb\": {\n\t\t\t\t\"pluralRule-count-one\": \"v = 0 and i % 100 = 1 or f % 100 = 1 @integer 1, 101, 201, 301, 401, 501, 601, 701, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …\",\n\t\t\t\t\"pluralRule-count-two\": \"v = 0 and i % 100 = 2 or f % 100 = 2 @integer 2, 102, 202, 302, 402, 502, 602, 702, 1002, … @decimal 0.2, 1.2, 2.2, 3.2, 4.2, 5.2, 6.2, 7.2, 10.2, 100.2, 1000.2, …\",\n\t\t\t\t\"pluralRule-count-few\": \"v = 0 and i % 100 = 3..4 or f % 100 = 3..4 @integer 3, 4, 103, 104, 203, 204, 303, 304, 403, 404, 503, 504, 603, 604, 703, 704, 1003, … @decimal 0.3, 0.4, 1.3, 1.4, 2.3, 2.4, 3.3, 3.4, 4.3, 4.4, 5.3, 5.4, 6.3, 6.4, 7.3, 7.4, 10.3, 100.3, 1000.3, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.5~1.0, 1.5~2.0, 2.5~2.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"dv\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"dz\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ee\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"el\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"en\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"eo\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"es\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"et\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"eu\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"fa\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ff\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0,1 @integer 0, 1 @decimal 0.0~1.5\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 2.0~3.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"fi\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"fil\": {\n\t\t\t\t\"pluralRule-count-one\": \"v = 0 and i = 1,2,3 or v = 0 and i % 10 != 4,6,9 or v != 0 and f % 10 != 4,6,9 @integer 0~3, 5, 7, 8, 10~13, 15, 17, 18, 20, 21, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.3, 0.5, 0.7, 0.8, 1.0~1.3, 1.5, 1.7, 1.8, 2.0, 2.1, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 4, 6, 9, 14, 16, 19, 24, 26, 104, 1004, … @decimal 0.4, 0.6, 0.9, 1.4, 1.6, 1.9, 2.4, 2.6, 10.4, 100.4, 1000.4, …\"\n\t\t\t},\n\t\t\t\"fo\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"fr\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0,1 @integer 0, 1 @decimal 0.0~1.5\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 2.0~3.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"fur\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"fy\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ga\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-two\": \"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000\",\n\t\t\t\t\"pluralRule-count-few\": \"n = 3..6 @integer 3~6 @decimal 3.0, 4.0, 5.0, 6.0, 3.00, 4.00, 5.00, 6.00, 3.000, 4.000, 5.000, 6.000, 3.0000, 4.0000, 5.0000, 6.0000\",\n\t\t\t\t\"pluralRule-count-many\": \"n = 7..10 @integer 7~10 @decimal 7.0, 8.0, 9.0, 10.0, 7.00, 8.00, 9.00, 10.00, 7.000, 8.000, 9.000, 10.000, 7.0000, 8.0000, 9.0000, 10.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 11~25, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.1, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"gd\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1,11 @integer 1, 11 @decimal 1.0, 11.0, 1.00, 11.00, 1.000, 11.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-two\": \"n = 2,12 @integer 2, 12 @decimal 2.0, 12.0, 2.00, 12.00, 2.000, 12.000, 2.0000\",\n\t\t\t\t\"pluralRule-count-few\": \"n = 3..10,13..19 @integer 3~10, 13~19 @decimal 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 3.00\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 20~34, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.1, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"gl\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"gsw\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"gu\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"guw\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"gv\": {\n\t\t\t\t\"pluralRule-count-one\": \"v = 0 and i % 10 = 1 @integer 1, 11, 21, 31, 41, 51, 61, 71, 101, 1001, …\",\n\t\t\t\t\"pluralRule-count-two\": \"v = 0 and i % 10 = 2 @integer 2, 12, 22, 32, 42, 52, 62, 72, 102, 1002, …\",\n\t\t\t\t\"pluralRule-count-few\": \"v = 0 and i % 100 = 0,20,40,60,80 @integer 0, 20, 40, 60, 80, 100, 120, 140, 1000, 10000, 100000, 1000000, …\",\n\t\t\t\t\"pluralRule-count-many\": \"v != 0   @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 3~10, 13~19, 23, 103, 1003, …\"\n\t\t\t},\n\t\t\t\"ha\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"haw\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"he\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-two\": \"i = 2 and v = 0 @integer 2\",\n\t\t\t\t\"pluralRule-count-many\": \"v = 0 and n != 0..10 and n % 10 = 0 @integer 20, 30, 40, 50, 60, 70, 80, 90, 100, 1000, 10000, 100000, 1000000, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 3~17, 101, 1001, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"hi\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"hr\": {\n\t\t\t\t\"pluralRule-count-one\": \"v = 0 and i % 10 = 1 and i % 100 != 11 or f % 10 = 1 and f % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …\",\n\t\t\t\t\"pluralRule-count-few\": \"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 or f % 10 = 2..4 and f % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, … @decimal 0.2~0.4, 1.2~1.4, 2.2~2.4, 3.2~3.4, 4.2~4.4, 5.2, 10.2, 100.2, 1000.2, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.5~1.0, 1.5~2.0, 2.5~2.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"hsb\": {\n\t\t\t\t\"pluralRule-count-one\": \"v = 0 and i % 100 = 1 or f % 100 = 1 @integer 1, 101, 201, 301, 401, 501, 601, 701, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …\",\n\t\t\t\t\"pluralRule-count-two\": \"v = 0 and i % 100 = 2 or f % 100 = 2 @integer 2, 102, 202, 302, 402, 502, 602, 702, 1002, … @decimal 0.2, 1.2, 2.2, 3.2, 4.2, 5.2, 6.2, 7.2, 10.2, 100.2, 1000.2, …\",\n\t\t\t\t\"pluralRule-count-few\": \"v = 0 and i % 100 = 3..4 or f % 100 = 3..4 @integer 3, 4, 103, 104, 203, 204, 303, 304, 403, 404, 503, 504, 603, 604, 703, 704, 1003, … @decimal 0.3, 0.4, 1.3, 1.4, 2.3, 2.4, 3.3, 3.4, 4.3, 4.4, 5.3, 5.4, 6.3, 6.4, 7.3, 7.4, 10.3, 100.3, 1000.3, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.5~1.0, 1.5~2.0, 2.5~2.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"hu\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"hy\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0,1 @integer 0, 1 @decimal 0.0~1.5\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 2.0~3.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"id\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ig\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ii\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"in\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"is\": {\n\t\t\t\t\"pluralRule-count-one\": \"t = 0 and i % 10 = 1 and i % 100 != 11 or t != 0 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1~1.6, 10.1, 100.1, 1000.1, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"it\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"iu\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-two\": \"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"iw\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-two\": \"i = 2 and v = 0 @integer 2\",\n\t\t\t\t\"pluralRule-count-many\": \"v = 0 and n != 0..10 and n % 10 = 0 @integer 20, 30, 40, 50, 60, 70, 80, 90, 100, 1000, 10000, 100000, 1000000, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 3~17, 101, 1001, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ja\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"jbo\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"jgo\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ji\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"jmc\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"jv\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"jw\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ka\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"kab\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0,1 @integer 0, 1 @decimal 0.0~1.5\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 2.0~3.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"kaj\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"kcg\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"kde\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"kea\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"kk\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"kkj\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"kl\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"km\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"kn\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ko\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ks\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ksb\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ksh\": {\n\t\t\t\t\"pluralRule-count-zero\": \"n = 0 @integer 0 @decimal 0.0, 0.00, 0.000, 0.0000\",\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ku\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"kw\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-two\": \"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ky\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"lag\": {\n\t\t\t\t\"pluralRule-count-zero\": \"n = 0 @integer 0 @decimal 0.0, 0.00, 0.000, 0.0000\",\n\t\t\t\t\"pluralRule-count-one\": \"i = 0,1 and n != 0 @integer 1 @decimal 0.1~1.6\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 2.0~3.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"lb\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"lg\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"lkt\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ln\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"lo\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"lt\": {\n\t\t\t\t\"pluralRule-count-one\": \"n % 10 = 1 and n % 100 != 11..19 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 1.0, 21.0, 31.0, 41.0, 51.0, 61.0, 71.0, 81.0, 101.0, 1001.0, …\",\n\t\t\t\t\"pluralRule-count-few\": \"n % 10 = 2..9 and n % 100 != 11..19 @integer 2~9, 22~29, 102, 1002, … @decimal 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 22.0, 102.0, 1002.0, …\",\n\t\t\t\t\"pluralRule-count-many\": \"f != 0   @decimal 0.1~0.9, 1.1~1.7, 10.1, 100.1, 1000.1, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 10~20, 30, 40, 50, 60, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"lv\": {\n\t\t\t\t\"pluralRule-count-zero\": \"n % 10 = 0 or n % 100 = 11..19 or v = 2 and f % 100 = 11..19 @integer 0, 10~20, 30, 40, 50, 60, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\",\n\t\t\t\t\"pluralRule-count-one\": \"n % 10 = 1 and n % 100 != 11 or v = 2 and f % 10 = 1 and f % 100 != 11 or v != 2 and f % 10 = 1 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1, 1.0, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~9, 22~29, 102, 1002, … @decimal 0.2~0.9, 1.2~1.9, 10.2, 100.2, 1000.2, …\"\n\t\t\t},\n\t\t\t\"mas\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"mg\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"mgo\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"mk\": {\n\t\t\t\t\"pluralRule-count-one\": \"v = 0 and i % 10 = 1 or f % 10 = 1 @integer 1, 11, 21, 31, 41, 51, 61, 71, 101, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~10, 12~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.2~1.0, 1.2~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ml\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"mn\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"mo\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-few\": \"v != 0 or n = 0 or n != 1 and n % 100 = 1..19 @integer 0, 2~16, 101, 1001, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 20~35, 100, 1000, 10000, 100000, 1000000, …\"\n\t\t\t},\n\t\t\t\"mr\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ms\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"mt\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-few\": \"n = 0 or n % 100 = 2..10 @integer 0, 2~10, 102~107, 1002, … @decimal 0.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 10.0, 102.0, 1002.0, …\",\n\t\t\t\t\"pluralRule-count-many\": \"n % 100 = 11..19 @integer 11~19, 111~117, 1011, … @decimal 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 111.0, 1011.0, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 20~35, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.1, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"my\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"nah\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"naq\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-two\": \"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"nb\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"nd\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ne\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"nl\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"nn\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"nnh\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"no\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"nqo\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"nr\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"nso\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ny\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"nyn\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"om\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"or\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"os\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"pa\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"pap\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"pl\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-few\": \"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, …\",\n\t\t\t\t\"pluralRule-count-many\": \"v = 0 and i != 1 and i % 10 = 0..1 or v = 0 and i % 10 = 5..9 or v = 0 and i % 100 = 12..14 @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, …\",\n\t\t\t\t\"pluralRule-count-other\": \"   @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"prg\": {\n\t\t\t\t\"pluralRule-count-zero\": \"n % 10 = 0 or n % 100 = 11..19 or v = 2 and f % 100 = 11..19 @integer 0, 10~20, 30, 40, 50, 60, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\",\n\t\t\t\t\"pluralRule-count-one\": \"n % 10 = 1 and n % 100 != 11 or v = 2 and f % 10 = 1 and f % 100 != 11 or v != 2 and f % 10 = 1 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1, 1.0, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~9, 22~29, 102, 1002, … @decimal 0.2~0.9, 1.2~1.9, 10.2, 100.2, 1000.2, …\"\n\t\t\t},\n\t\t\t\"ps\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"pt\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 0..2 and n != 2 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"pt-PT\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"rm\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ro\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-few\": \"v != 0 or n = 0 or n != 1 and n % 100 = 1..19 @integer 0, 2~16, 101, 1001, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 20~35, 100, 1000, 10000, 100000, 1000000, …\"\n\t\t\t},\n\t\t\t\"rof\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"root\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ru\": {\n\t\t\t\t\"pluralRule-count-one\": \"v = 0 and i % 10 = 1 and i % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, …\",\n\t\t\t\t\"pluralRule-count-few\": \"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, …\",\n\t\t\t\t\"pluralRule-count-many\": \"v = 0 and i % 10 = 0 or v = 0 and i % 10 = 5..9 or v = 0 and i % 100 = 11..14 @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, …\",\n\t\t\t\t\"pluralRule-count-other\": \"   @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"rwk\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"sah\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"saq\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"sdh\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"se\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-two\": \"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"seh\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ses\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"sg\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"sh\": {\n\t\t\t\t\"pluralRule-count-one\": \"v = 0 and i % 10 = 1 and i % 100 != 11 or f % 10 = 1 and f % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …\",\n\t\t\t\t\"pluralRule-count-few\": \"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 or f % 10 = 2..4 and f % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, … @decimal 0.2~0.4, 1.2~1.4, 2.2~2.4, 3.2~3.4, 4.2~4.4, 5.2, 10.2, 100.2, 1000.2, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.5~1.0, 1.5~2.0, 2.5~2.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"shi\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04\",\n\t\t\t\t\"pluralRule-count-few\": \"n = 2..10 @integer 2~10 @decimal 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 2.00, 3.00, 4.00, 5.00, 6.00, 7.00, 8.00\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 11~26, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~1.9, 2.1~2.7, 10.1, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"si\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 0,1 or i = 0 and f = 1 @integer 0, 1 @decimal 0.0, 0.1, 1.0, 0.00, 0.01, 1.00, 0.000, 0.001, 1.000, 0.0000, 0.0001, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.2~0.9, 1.1~1.8, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"sk\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-few\": \"i = 2..4 and v = 0 @integer 2~4\",\n\t\t\t\t\"pluralRule-count-many\": \"v != 0   @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, …\"\n\t\t\t},\n\t\t\t\"sl\": {\n\t\t\t\t\"pluralRule-count-one\": \"v = 0 and i % 100 = 1 @integer 1, 101, 201, 301, 401, 501, 601, 701, 1001, …\",\n\t\t\t\t\"pluralRule-count-two\": \"v = 0 and i % 100 = 2 @integer 2, 102, 202, 302, 402, 502, 602, 702, 1002, …\",\n\t\t\t\t\"pluralRule-count-few\": \"v = 0 and i % 100 = 3..4 or v != 0 @integer 3, 4, 103, 104, 203, 204, 303, 304, 403, 404, 503, 504, 603, 604, 703, 704, 1003, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, …\"\n\t\t\t},\n\t\t\t\"sma\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-two\": \"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"smi\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-two\": \"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"smj\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-two\": \"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"smn\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-two\": \"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"sms\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-two\": \"n = 2 @integer 2 @decimal 2.0, 2.00, 2.000, 2.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 3~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"sn\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"so\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"sq\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"sr\": {\n\t\t\t\t\"pluralRule-count-one\": \"v = 0 and i % 10 = 1 and i % 100 != 11 or f % 10 = 1 and f % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, … @decimal 0.1, 1.1, 2.1, 3.1, 4.1, 5.1, 6.1, 7.1, 10.1, 100.1, 1000.1, …\",\n\t\t\t\t\"pluralRule-count-few\": \"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 or f % 10 = 2..4 and f % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, … @decimal 0.2~0.4, 1.2~1.4, 2.2~2.4, 3.2~3.4, 4.2~4.4, 5.2, 10.2, 100.2, 1000.2, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0, 0.5~1.0, 1.5~2.0, 2.5~2.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ss\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ssy\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"st\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"sv\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"sw\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"syr\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ta\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"te\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"teo\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"th\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ti\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"tig\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"tk\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"tl\": {\n\t\t\t\t\"pluralRule-count-one\": \"v = 0 and i = 1,2,3 or v = 0 and i % 10 != 4,6,9 or v != 0 and f % 10 != 4,6,9 @integer 0~3, 5, 7, 8, 10~13, 15, 17, 18, 20, 21, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.3, 0.5, 0.7, 0.8, 1.0~1.3, 1.5, 1.7, 1.8, 2.0, 2.1, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 4, 6, 9, 14, 16, 19, 24, 26, 104, 1004, … @decimal 0.4, 0.6, 0.9, 1.4, 1.6, 1.9, 2.4, 2.6, 10.4, 100.4, 1000.4, …\"\n\t\t\t},\n\t\t\t\"tn\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"to\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"tr\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ts\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"tzm\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 0..1 or n = 11..99 @integer 0, 1, 11~24 @decimal 0.0, 1.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~10, 100~106, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ug\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"uk\": {\n\t\t\t\t\"pluralRule-count-one\": \"v = 0 and i % 10 = 1 and i % 100 != 11 @integer 1, 21, 31, 41, 51, 61, 71, 81, 101, 1001, …\",\n\t\t\t\t\"pluralRule-count-few\": \"v = 0 and i % 10 = 2..4 and i % 100 != 12..14 @integer 2~4, 22~24, 32~34, 42~44, 52~54, 62, 102, 1002, …\",\n\t\t\t\t\"pluralRule-count-many\": \"v = 0 and i % 10 = 0 or v = 0 and i % 10 = 5..9 or v = 0 and i % 100 = 11..14 @integer 0, 5~19, 100, 1000, 10000, 100000, 1000000, …\",\n\t\t\t\t\"pluralRule-count-other\": \"   @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ur\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"uz\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"ve\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"vi\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"vo\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"vun\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"wa\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 0..1 @integer 0, 1 @decimal 0.0, 1.0, 0.00, 1.00, 0.000, 1.000, 0.0000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 0.1~0.9, 1.1~1.7, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"wae\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"wo\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"xh\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"xog\": {\n\t\t\t\t\"pluralRule-count-one\": \"n = 1 @integer 1 @decimal 1.0, 1.00, 1.000, 1.0000\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~0.9, 1.1~1.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"yi\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 1 and v = 0 @integer 1\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0, 2~16, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"yo\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"zh\": {\n\t\t\t\t\"pluralRule-count-other\": \" @integer 0~15, 100, 1000, 10000, 100000, 1000000, … @decimal 0.0~1.5, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t},\n\t\t\t\"zu\": {\n\t\t\t\t\"pluralRule-count-one\": \"i = 0 or n = 1 @integer 0, 1 @decimal 0.0~1.0, 0.00~0.04\",\n\t\t\t\t\"pluralRule-count-other\": \" @integer 2~17, 100, 1000, 10000, 100000, 1000000, … @decimal 1.1~2.6, 10.0, 100.0, 1000.0, 10000.0, 100000.0, 1000000.0, …\"\n\t\t\t}\n\t\t}\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/make-plural/data/plurals.json\n// module id = 25\n// module chunks = 0","/// <reference path=\"../typings/tsd.d.ts\" />\r\n'use strict';\r\nvar xregexp_1 = require('xregexp');\r\nvar value = '[-+]?(?:Infinity|[[0-9]*\\\\.?\\\\d*(?:[eE][-+]?\\\\d+)?)';\r\nvar mathInterval = xregexp_1.XRegExp(\"(?<leftBrace>  [\\\\(\\\\]\\\\[] )                                (?<fromValue>  \" + value + \"    )?                               (?<delimeter>  ,           )?                               (?<toValue>    \" + value + \"    )?                               (?<rightBrace> [\\\\)\\\\]\\\\[] )\", 'x');\r\nfunction parse(str) {\r\n    var match = xregexp_1.XRegExp.exec(str, mathInterval);\r\n    if (!match) {\r\n        return null;\r\n    }\r\n    return {\r\n        from: {\r\n            value: match.fromValue !== undefined ?\r\n                +match.fromValue :\r\n                -Infinity,\r\n            included: match.leftBrace === '['\r\n        },\r\n        to: {\r\n            value: match.toValue !== undefined ?\r\n                +match.toValue :\r\n                (match.delimeter ?\r\n                    +Infinity :\r\n                    +match.fromValue),\r\n            included: match.rightBrace === ']'\r\n        }\r\n    };\r\n}\r\nfunction check(interval) {\r\n    if (!interval) {\r\n        return false;\r\n    }\r\n    if (interval.from.value === interval.to.value) {\r\n        return interval.from.included && interval.to.included;\r\n    }\r\n    return Math.min(interval.from.value, interval.to.value) === interval.from.value;\r\n}\r\nfunction entry(str) {\r\n    var interval = parse(str);\r\n    if (!check(interval)) {\r\n        return null;\r\n    }\r\n    return interval;\r\n}\r\nexports.default = entry;\r\n;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/math-interval-parser/lib/index.js\n// module id = 26\n// module chunks = 0","\n/***** xregexp.js *****/\n\n/*!\r\n * XRegExp v2.0.0\r\n * (c) 2007-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n */\r\n\r\n/**\r\n * XRegExp provides augmented, extensible JavaScript regular expressions. You get new syntax,\r\n * flags, and methods beyond what browsers support natively. XRegExp is also a regex utility belt\r\n * with tools to make your client-side grepping simpler and more powerful, while freeing you from\r\n * worrying about pesky cross-browser inconsistencies and the dubious `lastIndex` property. See\r\n * XRegExp's documentation (http://xregexp.com/) for more details.\r\n * @module xregexp\r\n * @requires N/A\r\n */\r\nvar XRegExp;\r\n\r\n// Avoid running twice; that would reset tokens and could break references to native globals\r\nXRegExp = XRegExp || (function (undef) {\r\n    \"use strict\";\r\n\r\n/*--------------------------------------\r\n *  Private variables\r\n *------------------------------------*/\r\n\r\n    var self,\r\n        addToken,\r\n        add,\r\n\r\n// Optional features; can be installed and uninstalled\r\n        features = {\r\n            natives: false,\r\n            extensibility: false\r\n        },\r\n\r\n// Store native methods to use and restore (\"native\" is an ES3 reserved keyword)\r\n        nativ = {\r\n            exec: RegExp.prototype.exec,\r\n            test: RegExp.prototype.test,\r\n            match: String.prototype.match,\r\n            replace: String.prototype.replace,\r\n            split: String.prototype.split\r\n        },\r\n\r\n// Storage for fixed/extended native methods\r\n        fixed = {},\r\n\r\n// Storage for cached regexes\r\n        cache = {},\r\n\r\n// Storage for addon tokens\r\n        tokens = [],\r\n\r\n// Token scopes\r\n        defaultScope = \"default\",\r\n        classScope = \"class\",\r\n\r\n// Regexes that match native regex syntax\r\n        nativeTokens = {\r\n            // Any native multicharacter token in default scope (includes octals, excludes character classes)\r\n            \"default\": /^(?:\\\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\\d*|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S])|\\(\\?[:=!]|[?*+]\\?|{\\d+(?:,\\d*)?}\\??)/,\r\n            // Any native multicharacter token in character class scope (includes octals)\r\n            \"class\": /^(?:\\\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\\dA-Fa-f]{2}|u[\\dA-Fa-f]{4}|c[A-Za-z]|[\\s\\S]))/\r\n        },\r\n\r\n// Any backreference in replacement strings\r\n        replacementToken = /\\$(?:{([\\w$]+)}|(\\d\\d?|[\\s\\S]))/g,\r\n\r\n// Any character with a later instance in the string\r\n        duplicateFlags = /([\\s\\S])(?=[\\s\\S]*\\1)/g,\r\n\r\n// Any greedy/lazy quantifier\r\n        quantifier = /^(?:[?*+]|{\\d+(?:,\\d*)?})\\??/,\r\n\r\n// Check for correct `exec` handling of nonparticipating capturing groups\r\n        compliantExecNpcg = nativ.exec.call(/()??/, \"\")[1] === undef,\r\n\r\n// Check for flag y support (Firefox 3+)\r\n        hasNativeY = RegExp.prototype.sticky !== undef,\r\n\r\n// Used to kill infinite recursion during XRegExp construction\r\n        isInsideConstructor = false,\r\n\r\n// Storage for known flags, including addon flags\r\n        registeredFlags = \"gim\" + (hasNativeY ? \"y\" : \"\");\r\n\r\n/*--------------------------------------\r\n *  Private helper functions\r\n *------------------------------------*/\r\n\r\n/**\r\n * Attaches XRegExp.prototype properties and named capture supporting data to a regex object.\r\n * @private\r\n * @param {RegExp} regex Regex to augment.\r\n * @param {Array} captureNames Array with capture names, or null.\r\n * @param {Boolean} [isNative] Whether the regex was created by `RegExp` rather than `XRegExp`.\r\n * @returns {RegExp} Augmented regex.\r\n */\r\n    function augment(regex, captureNames, isNative) {\r\n        var p;\r\n        // Can't auto-inherit these since the XRegExp constructor returns a nonprimitive value\r\n        for (p in self.prototype) {\r\n            if (self.prototype.hasOwnProperty(p)) {\r\n                regex[p] = self.prototype[p];\r\n            }\r\n        }\r\n        regex.xregexp = {captureNames: captureNames, isNative: !!isNative};\r\n        return regex;\r\n    }\r\n\r\n/**\r\n * Returns native `RegExp` flags used by a regex object.\r\n * @private\r\n * @param {RegExp} regex Regex to check.\r\n * @returns {String} Native flags in use.\r\n */\r\n    function getNativeFlags(regex) {\r\n        //return nativ.exec.call(/\\/([a-z]*)$/i, String(regex))[1];\r\n        return (regex.global     ? \"g\" : \"\") +\r\n               (regex.ignoreCase ? \"i\" : \"\") +\r\n               (regex.multiline  ? \"m\" : \"\") +\r\n               (regex.extended   ? \"x\" : \"\") + // Proposed for ES6, included in AS3\r\n               (regex.sticky     ? \"y\" : \"\"); // Proposed for ES6, included in Firefox 3+\r\n    }\r\n\r\n/**\r\n * Copies a regex object while preserving special properties for named capture and augmenting with\r\n * `XRegExp.prototype` methods. The copy has a fresh `lastIndex` property (set to zero). Allows\r\n * adding and removing flags while copying the regex.\r\n * @private\r\n * @param {RegExp} regex Regex to copy.\r\n * @param {String} [addFlags] Flags to be added while copying the regex.\r\n * @param {String} [removeFlags] Flags to be removed while copying the regex.\r\n * @returns {RegExp} Copy of the provided regex, possibly with modified flags.\r\n */\r\n    function copy(regex, addFlags, removeFlags) {\r\n        if (!self.isRegExp(regex)) {\r\n            throw new TypeError(\"type RegExp expected\");\r\n        }\r\n        var flags = nativ.replace.call(getNativeFlags(regex) + (addFlags || \"\"), duplicateFlags, \"\");\r\n        if (removeFlags) {\r\n            // Would need to escape `removeFlags` if this was public\r\n            flags = nativ.replace.call(flags, new RegExp(\"[\" + removeFlags + \"]+\", \"g\"), \"\");\r\n        }\r\n        if (regex.xregexp && !regex.xregexp.isNative) {\r\n            // Compiling the current (rather than precompilation) source preserves the effects of nonnative source flags\r\n            regex = augment(self(regex.source, flags),\r\n                            regex.xregexp.captureNames ? regex.xregexp.captureNames.slice(0) : null);\r\n        } else {\r\n            // Augment with `XRegExp.prototype` methods, but use native `RegExp` (avoid searching for special tokens)\r\n            regex = augment(new RegExp(regex.source, flags), null, true);\r\n        }\r\n        return regex;\r\n    }\r\n\r\n/*\r\n * Returns the last index at which a given value can be found in an array, or `-1` if it's not\r\n * present. The array is searched backwards.\r\n * @private\r\n * @param {Array} array Array to search.\r\n * @param {*} value Value to locate in the array.\r\n * @returns {Number} Last zero-based index at which the item is found, or -1.\r\n */\r\n    function lastIndexOf(array, value) {\r\n        var i = array.length;\r\n        if (Array.prototype.lastIndexOf) {\r\n            return array.lastIndexOf(value); // Use the native method if available\r\n        }\r\n        while (i--) {\r\n            if (array[i] === value) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n/**\r\n * Determines whether an object is of the specified type.\r\n * @private\r\n * @param {*} value Object to check.\r\n * @param {String} type Type to check for, in lowercase.\r\n * @returns {Boolean} Whether the object matches the type.\r\n */\r\n    function isType(value, type) {\r\n        return Object.prototype.toString.call(value).toLowerCase() === \"[object \" + type + \"]\";\r\n    }\r\n\r\n/**\r\n * Prepares an options object from the given value.\r\n * @private\r\n * @param {String|Object} value Value to convert to an options object.\r\n * @returns {Object} Options object.\r\n */\r\n    function prepareOptions(value) {\r\n        value = value || {};\r\n        if (value === \"all\" || value.all) {\r\n            value = {natives: true, extensibility: true};\r\n        } else if (isType(value, \"string\")) {\r\n            value = self.forEach(value, /[^\\s,]+/, function (m) {\r\n                this[m] = true;\r\n            }, {});\r\n        }\r\n        return value;\r\n    }\r\n\r\n/**\r\n * Runs built-in/custom tokens in reverse insertion order, until a match is found.\r\n * @private\r\n * @param {String} pattern Original pattern from which an XRegExp object is being built.\r\n * @param {Number} pos Position to search for tokens within `pattern`.\r\n * @param {Number} scope Current regex scope.\r\n * @param {Object} context Context object assigned to token handler functions.\r\n * @returns {Object} Object with properties `output` (the substitution string returned by the\r\n *   successful token handler) and `match` (the token's match array), or null.\r\n */\r\n    function runTokens(pattern, pos, scope, context) {\r\n        var i = tokens.length,\r\n            result = null,\r\n            match,\r\n            t;\r\n        // Protect against constructing XRegExps within token handler and trigger functions\r\n        isInsideConstructor = true;\r\n        // Must reset `isInsideConstructor`, even if a `trigger` or `handler` throws\r\n        try {\r\n            while (i--) { // Run in reverse order\r\n                t = tokens[i];\r\n                if ((t.scope === \"all\" || t.scope === scope) && (!t.trigger || t.trigger.call(context))) {\r\n                    t.pattern.lastIndex = pos;\r\n                    match = fixed.exec.call(t.pattern, pattern); // Fixed `exec` here allows use of named backreferences, etc.\r\n                    if (match && match.index === pos) {\r\n                        result = {\r\n                            output: t.handler.call(context, match, scope),\r\n                            match: match\r\n                        };\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        } catch (err) {\r\n            throw err;\r\n        } finally {\r\n            isInsideConstructor = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n/**\r\n * Enables or disables XRegExp syntax and flag extensibility.\r\n * @private\r\n * @param {Boolean} on `true` to enable; `false` to disable.\r\n */\r\n    function setExtensibility(on) {\r\n        self.addToken = addToken[on ? \"on\" : \"off\"];\r\n        features.extensibility = on;\r\n    }\r\n\r\n/**\r\n * Enables or disables native method overrides.\r\n * @private\r\n * @param {Boolean} on `true` to enable; `false` to disable.\r\n */\r\n    function setNatives(on) {\r\n        RegExp.prototype.exec = (on ? fixed : nativ).exec;\r\n        RegExp.prototype.test = (on ? fixed : nativ).test;\r\n        String.prototype.match = (on ? fixed : nativ).match;\r\n        String.prototype.replace = (on ? fixed : nativ).replace;\r\n        String.prototype.split = (on ? fixed : nativ).split;\r\n        features.natives = on;\r\n    }\r\n\r\n/*--------------------------------------\r\n *  Constructor\r\n *------------------------------------*/\r\n\r\n/**\r\n * Creates an extended regular expression object for matching text with a pattern. Differs from a\r\n * native regular expression in that additional syntax and flags are supported. The returned object\r\n * is in fact a native `RegExp` and works with all native methods.\r\n * @class XRegExp\r\n * @constructor\r\n * @param {String|RegExp} pattern Regex pattern string, or an existing `RegExp` object to copy.\r\n * @param {String} [flags] Any combination of flags:\r\n *   <li>`g` - global\r\n *   <li>`i` - ignore case\r\n *   <li>`m` - multiline anchors\r\n *   <li>`n` - explicit capture\r\n *   <li>`s` - dot matches all (aka singleline)\r\n *   <li>`x` - free-spacing and line comments (aka extended)\r\n *   <li>`y` - sticky (Firefox 3+ only)\r\n *   Flags cannot be provided when constructing one `RegExp` from another.\r\n * @returns {RegExp} Extended regular expression object.\r\n * @example\r\n *\r\n * // With named capture and flag x\r\n * date = XRegExp('(?<year>  [0-9]{4}) -?  # year  \\n\\\r\n *                 (?<month> [0-9]{2}) -?  # month \\n\\\r\n *                 (?<day>   [0-9]{2})     # day   ', 'x');\r\n *\r\n * // Passing a regex object to copy it. The copy maintains special properties for named capture,\r\n * // is augmented with `XRegExp.prototype` methods, and has a fresh `lastIndex` property (set to\r\n * // zero). Native regexes are not recompiled using XRegExp syntax.\r\n * XRegExp(/regex/);\r\n */\r\n    self = function (pattern, flags) {\r\n        if (self.isRegExp(pattern)) {\r\n            if (flags !== undef) {\r\n                throw new TypeError(\"can't supply flags when constructing one RegExp from another\");\r\n            }\r\n            return copy(pattern);\r\n        }\r\n        // Tokens become part of the regex construction process, so protect against infinite recursion\r\n        // when an XRegExp is constructed within a token handler function\r\n        if (isInsideConstructor) {\r\n            throw new Error(\"can't call the XRegExp constructor within token definition functions\");\r\n        }\r\n\r\n        var output = [],\r\n            scope = defaultScope,\r\n            tokenContext = {\r\n                hasNamedCapture: false,\r\n                captureNames: [],\r\n                hasFlag: function (flag) {\r\n                    return flags.indexOf(flag) > -1;\r\n                }\r\n            },\r\n            pos = 0,\r\n            tokenResult,\r\n            match,\r\n            chr;\r\n        pattern = pattern === undef ? \"\" : String(pattern);\r\n        flags = flags === undef ? \"\" : String(flags);\r\n\r\n        if (nativ.match.call(flags, duplicateFlags)) { // Don't use test/exec because they would update lastIndex\r\n            throw new SyntaxError(\"invalid duplicate regular expression flag\");\r\n        }\r\n        // Strip/apply leading mode modifier with any combination of flags except g or y: (?imnsx)\r\n        pattern = nativ.replace.call(pattern, /^\\(\\?([\\w$]+)\\)/, function ($0, $1) {\r\n            if (nativ.test.call(/[gy]/, $1)) {\r\n                throw new SyntaxError(\"can't use flag g or y in mode modifier\");\r\n            }\r\n            flags = nativ.replace.call(flags + $1, duplicateFlags, \"\");\r\n            return \"\";\r\n        });\r\n        self.forEach(flags, /[\\s\\S]/, function (m) {\r\n            if (registeredFlags.indexOf(m[0]) < 0) {\r\n                throw new SyntaxError(\"invalid regular expression flag \" + m[0]);\r\n            }\r\n        });\r\n\r\n        while (pos < pattern.length) {\r\n            // Check for custom tokens at the current position\r\n            tokenResult = runTokens(pattern, pos, scope, tokenContext);\r\n            if (tokenResult) {\r\n                output.push(tokenResult.output);\r\n                pos += (tokenResult.match[0].length || 1);\r\n            } else {\r\n                // Check for native tokens (except character classes) at the current position\r\n                match = nativ.exec.call(nativeTokens[scope], pattern.slice(pos));\r\n                if (match) {\r\n                    output.push(match[0]);\r\n                    pos += match[0].length;\r\n                } else {\r\n                    chr = pattern.charAt(pos);\r\n                    if (chr === \"[\") {\r\n                        scope = classScope;\r\n                    } else if (chr === \"]\") {\r\n                        scope = defaultScope;\r\n                    }\r\n                    // Advance position by one character\r\n                    output.push(chr);\r\n                    ++pos;\r\n                }\r\n            }\r\n        }\r\n\r\n        return augment(new RegExp(output.join(\"\"), nativ.replace.call(flags, /[^gimy]+/g, \"\")),\r\n                       tokenContext.hasNamedCapture ? tokenContext.captureNames : null);\r\n    };\r\n\r\n/*--------------------------------------\r\n *  Public methods/properties\r\n *------------------------------------*/\r\n\r\n// Installed and uninstalled states for `XRegExp.addToken`\r\n    addToken = {\r\n        on: function (regex, handler, options) {\r\n            options = options || {};\r\n            if (regex) {\r\n                tokens.push({\r\n                    pattern: copy(regex, \"g\" + (hasNativeY ? \"y\" : \"\")),\r\n                    handler: handler,\r\n                    scope: options.scope || defaultScope,\r\n                    trigger: options.trigger || null\r\n                });\r\n            }\r\n            // Providing `customFlags` with null `regex` and `handler` allows adding flags that do\r\n            // nothing, but don't throw an error\r\n            if (options.customFlags) {\r\n                registeredFlags = nativ.replace.call(registeredFlags + options.customFlags, duplicateFlags, \"\");\r\n            }\r\n        },\r\n        off: function () {\r\n            throw new Error(\"extensibility must be installed before using addToken\");\r\n        }\r\n    };\r\n\r\n/**\r\n * Extends or changes XRegExp syntax and allows custom flags. This is used internally and can be\r\n * used to create XRegExp addons. `XRegExp.install('extensibility')` must be run before calling\r\n * this function, or an error is thrown. If more than one token can match the same string, the last\r\n * added wins.\r\n * @memberOf XRegExp\r\n * @param {RegExp} regex Regex object that matches the new token.\r\n * @param {Function} handler Function that returns a new pattern string (using native regex syntax)\r\n *   to replace the matched token within all future XRegExp regexes. Has access to persistent\r\n *   properties of the regex being built, through `this`. Invoked with two arguments:\r\n *   <li>The match array, with named backreference properties.\r\n *   <li>The regex scope where the match was found.\r\n * @param {Object} [options] Options object with optional properties:\r\n *   <li>`scope` {String} Scopes where the token applies: 'default', 'class', or 'all'.\r\n *   <li>`trigger` {Function} Function that returns `true` when the token should be applied; e.g.,\r\n *     if a flag is set. If `false` is returned, the matched string can be matched by other tokens.\r\n *     Has access to persistent properties of the regex being built, through `this` (including\r\n *     function `this.hasFlag`).\r\n *   <li>`customFlags` {String} Nonnative flags used by the token's handler or trigger functions.\r\n *     Prevents XRegExp from throwing an invalid flag error when the specified flags are used.\r\n * @example\r\n *\r\n * // Basic usage: Adds \\a for ALERT character\r\n * XRegExp.addToken(\r\n *   /\\\\a/,\r\n *   function () {return '\\\\x07';},\r\n *   {scope: 'all'}\r\n * );\r\n * XRegExp('\\\\a[\\\\a-\\\\n]+').test('\\x07\\n\\x07'); // -> true\r\n */\r\n    self.addToken = addToken.off;\r\n\r\n/**\r\n * Caches and returns the result of calling `XRegExp(pattern, flags)`. On any subsequent call with\r\n * the same pattern and flag combination, the cached copy is returned.\r\n * @memberOf XRegExp\r\n * @param {String} pattern Regex pattern string.\r\n * @param {String} [flags] Any combination of XRegExp flags.\r\n * @returns {RegExp} Cached XRegExp object.\r\n * @example\r\n *\r\n * while (match = XRegExp.cache('.', 'gs').exec(str)) {\r\n *   // The regex is compiled once only\r\n * }\r\n */\r\n    self.cache = function (pattern, flags) {\r\n        var key = pattern + \"/\" + (flags || \"\");\r\n        return cache[key] || (cache[key] = self(pattern, flags));\r\n    };\r\n\r\n/**\r\n * Escapes any regular expression metacharacters, for use when matching literal strings. The result\r\n * can safely be used at any point within a regex that uses any flags.\r\n * @memberOf XRegExp\r\n * @param {String} str String to escape.\r\n * @returns {String} String with regex metacharacters escaped.\r\n * @example\r\n *\r\n * XRegExp.escape('Escaped? <.>');\r\n * // -> 'Escaped\\?\\ <\\.>'\r\n */\r\n    self.escape = function (str) {\r\n        return nativ.replace.call(str, /[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\r\n    };\r\n\r\n/**\r\n * Executes a regex search in a specified string. Returns a match array or `null`. If the provided\r\n * regex uses named capture, named backreference properties are included on the match array.\r\n * Optional `pos` and `sticky` arguments specify the search start position, and whether the match\r\n * must start at the specified position only. The `lastIndex` property of the provided regex is not\r\n * used, but is updated for compatibility. Also fixes browser bugs compared to the native\r\n * `RegExp.prototype.exec` and can be used reliably cross-browser.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Number} [pos=0] Zero-based index at which to start the search.\r\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\r\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\r\n * @returns {Array} Match array with named backreference properties, or null.\r\n * @example\r\n *\r\n * // Basic use, with named backreference\r\n * var match = XRegExp.exec('U+2620', XRegExp('U\\\\+(?<hex>[0-9A-F]{4})'));\r\n * match.hex; // -> '2620'\r\n *\r\n * // With pos and sticky, in a loop\r\n * var pos = 2, result = [], match;\r\n * while (match = XRegExp.exec('<1><2><3><4>5<6>', /<(\\d)>/, pos, 'sticky')) {\r\n *   result.push(match[1]);\r\n *   pos = match.index + match[0].length;\r\n * }\r\n * // result -> ['2', '3', '4']\r\n */\r\n    self.exec = function (str, regex, pos, sticky) {\r\n        var r2 = copy(regex, \"g\" + (sticky && hasNativeY ? \"y\" : \"\"), (sticky === false ? \"y\" : \"\")),\r\n            match;\r\n        r2.lastIndex = pos = pos || 0;\r\n        match = fixed.exec.call(r2, str); // Fixed `exec` required for `lastIndex` fix, etc.\r\n        if (sticky && match && match.index !== pos) {\r\n            match = null;\r\n        }\r\n        if (regex.global) {\r\n            regex.lastIndex = match ? r2.lastIndex : 0;\r\n        }\r\n        return match;\r\n    };\r\n\r\n/**\r\n * Executes a provided function once per regex match.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Function} callback Function to execute for each match. Invoked with four arguments:\r\n *   <li>The match array, with named backreference properties.\r\n *   <li>The zero-based match index.\r\n *   <li>The string being traversed.\r\n *   <li>The regex object being used to traverse the string.\r\n * @param {*} [context] Object to use as `this` when executing `callback`.\r\n * @returns {*} Provided `context` object.\r\n * @example\r\n *\r\n * // Extracts every other digit from a string\r\n * XRegExp.forEach('1a2345', /\\d/, function (match, i) {\r\n *   if (i % 2) this.push(+match[0]);\r\n * }, []);\r\n * // -> [2, 4]\r\n */\r\n    self.forEach = function (str, regex, callback, context) {\r\n        var pos = 0,\r\n            i = -1,\r\n            match;\r\n        while ((match = self.exec(str, regex, pos))) {\r\n            callback.call(context, match, ++i, str, regex);\r\n            pos = match.index + (match[0].length || 1);\r\n        }\r\n        return context;\r\n    };\r\n\r\n/**\r\n * Copies a regex object and adds flag `g`. The copy maintains special properties for named\r\n * capture, is augmented with `XRegExp.prototype` methods, and has a fresh `lastIndex` property\r\n * (set to zero). Native regexes are not recompiled using XRegExp syntax.\r\n * @memberOf XRegExp\r\n * @param {RegExp} regex Regex to globalize.\r\n * @returns {RegExp} Copy of the provided regex with flag `g` added.\r\n * @example\r\n *\r\n * var globalCopy = XRegExp.globalize(/regex/);\r\n * globalCopy.global; // -> true\r\n */\r\n    self.globalize = function (regex) {\r\n        return copy(regex, \"g\");\r\n    };\r\n\r\n/**\r\n * Installs optional features according to the specified options.\r\n * @memberOf XRegExp\r\n * @param {Object|String} options Options object or string.\r\n * @example\r\n *\r\n * // With an options object\r\n * XRegExp.install({\r\n *   // Overrides native regex methods with fixed/extended versions that support named\r\n *   // backreferences and fix numerous cross-browser bugs\r\n *   natives: true,\r\n *\r\n *   // Enables extensibility of XRegExp syntax and flags\r\n *   extensibility: true\r\n * });\r\n *\r\n * // With an options string\r\n * XRegExp.install('natives extensibility');\r\n *\r\n * // Using a shortcut to install all optional features\r\n * XRegExp.install('all');\r\n */\r\n    self.install = function (options) {\r\n        options = prepareOptions(options);\r\n        if (!features.natives && options.natives) {\r\n            setNatives(true);\r\n        }\r\n        if (!features.extensibility && options.extensibility) {\r\n            setExtensibility(true);\r\n        }\r\n    };\r\n\r\n/**\r\n * Checks whether an individual optional feature is installed.\r\n * @memberOf XRegExp\r\n * @param {String} feature Name of the feature to check. One of:\r\n *   <li>`natives`\r\n *   <li>`extensibility`\r\n * @returns {Boolean} Whether the feature is installed.\r\n * @example\r\n *\r\n * XRegExp.isInstalled('natives');\r\n */\r\n    self.isInstalled = function (feature) {\r\n        return !!(features[feature]);\r\n    };\r\n\r\n/**\r\n * Returns `true` if an object is a regex; `false` if it isn't. This works correctly for regexes\r\n * created in another frame, when `instanceof` and `constructor` checks would fail.\r\n * @memberOf XRegExp\r\n * @param {*} value Object to check.\r\n * @returns {Boolean} Whether the object is a `RegExp` object.\r\n * @example\r\n *\r\n * XRegExp.isRegExp('string'); // -> false\r\n * XRegExp.isRegExp(/regex/i); // -> true\r\n * XRegExp.isRegExp(RegExp('^', 'm')); // -> true\r\n * XRegExp.isRegExp(XRegExp('(?s).')); // -> true\r\n */\r\n    self.isRegExp = function (value) {\r\n        return isType(value, \"regexp\");\r\n    };\r\n\r\n/**\r\n * Retrieves the matches from searching a string using a chain of regexes that successively search\r\n * within previous matches. The provided `chain` array can contain regexes and objects with `regex`\r\n * and `backref` properties. When a backreference is specified, the named or numbered backreference\r\n * is passed forward to the next regex or returned.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {Array} chain Regexes that each search for matches within preceding results.\r\n * @returns {Array} Matches by the last regex in the chain, or an empty array.\r\n * @example\r\n *\r\n * // Basic usage; matches numbers within <b> tags\r\n * XRegExp.matchChain('1 <b>2</b> 3 <b>4 a 56</b>', [\r\n *   XRegExp('(?is)<b>.*?</b>'),\r\n *   /\\d+/\r\n * ]);\r\n * // -> ['2', '4', '56']\r\n *\r\n * // Passing forward and returning specific backreferences\r\n * html = '<a href=\"http://xregexp.com/api/\">XRegExp</a>\\\r\n *         <a href=\"http://www.google.com/\">Google</a>';\r\n * XRegExp.matchChain(html, [\r\n *   {regex: /<a href=\"([^\"]+)\">/i, backref: 1},\r\n *   {regex: XRegExp('(?i)^https?://(?<domain>[^/?#]+)'), backref: 'domain'}\r\n * ]);\r\n * // -> ['xregexp.com', 'www.google.com']\r\n */\r\n    self.matchChain = function (str, chain) {\r\n        return (function recurseChain(values, level) {\r\n            var item = chain[level].regex ? chain[level] : {regex: chain[level]},\r\n                matches = [],\r\n                addMatch = function (match) {\r\n                    matches.push(item.backref ? (match[item.backref] || \"\") : match[0]);\r\n                },\r\n                i;\r\n            for (i = 0; i < values.length; ++i) {\r\n                self.forEach(values[i], item.regex, addMatch);\r\n            }\r\n            return ((level === chain.length - 1) || !matches.length) ?\r\n                    matches :\r\n                    recurseChain(matches, level + 1);\r\n        }([str], 0));\r\n    };\r\n\r\n/**\r\n * Returns a new string with one or all matches of a pattern replaced. The pattern can be a string\r\n * or regex, and the replacement can be a string or a function to be called for each match. To\r\n * perform a global search and replace, use the optional `scope` argument or include flag `g` if\r\n * using a regex. Replacement strings can use `${n}` for named and numbered backreferences.\r\n * Replacement functions can use named backreferences via `arguments[0].name`. Also fixes browser\r\n * bugs compared to the native `String.prototype.replace` and can be used reliably cross-browser.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp|String} search Search pattern to be replaced.\r\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\r\n *   Replacement strings can include special replacement syntax:\r\n *     <li>$$ - Inserts a literal '$'.\r\n *     <li>$&, $0 - Inserts the matched substring.\r\n *     <li>$` - Inserts the string that precedes the matched substring (left context).\r\n *     <li>$' - Inserts the string that follows the matched substring (right context).\r\n *     <li>$n, $nn - Where n/nn are digits referencing an existent capturing group, inserts\r\n *       backreference n/nn.\r\n *     <li>${n} - Where n is a name or any number of digits that reference an existent capturing\r\n *       group, inserts backreference n.\r\n *   Replacement functions are invoked with three or more arguments:\r\n *     <li>The matched substring (corresponds to $& above). Named backreferences are accessible as\r\n *       properties of this first argument.\r\n *     <li>0..n arguments, one for each backreference (corresponding to $1, $2, etc. above).\r\n *     <li>The zero-based index of the match within the total search string.\r\n *     <li>The total string being searched.\r\n * @param {String} [scope='one'] Use 'one' to replace the first match only, or 'all'. If not\r\n *   explicitly specified and using a regex with flag `g`, `scope` is 'all'.\r\n * @returns {String} New string with one or all matches replaced.\r\n * @example\r\n *\r\n * // Regex search, using named backreferences in replacement string\r\n * var name = XRegExp('(?<first>\\\\w+) (?<last>\\\\w+)');\r\n * XRegExp.replace('John Smith', name, '${last}, ${first}');\r\n * // -> 'Smith, John'\r\n *\r\n * // Regex search, using named backreferences in replacement function\r\n * XRegExp.replace('John Smith', name, function (match) {\r\n *   return match.last + ', ' + match.first;\r\n * });\r\n * // -> 'Smith, John'\r\n *\r\n * // Global string search/replacement\r\n * XRegExp.replace('RegExp builds RegExps', 'RegExp', 'XRegExp', 'all');\r\n * // -> 'XRegExp builds XRegExps'\r\n */\r\n    self.replace = function (str, search, replacement, scope) {\r\n        var isRegex = self.isRegExp(search),\r\n            search2 = search,\r\n            result;\r\n        if (isRegex) {\r\n            if (scope === undef && search.global) {\r\n                scope = \"all\"; // Follow flag g when `scope` isn't explicit\r\n            }\r\n            // Note that since a copy is used, `search`'s `lastIndex` isn't updated *during* replacement iterations\r\n            search2 = copy(search, scope === \"all\" ? \"g\" : \"\", scope === \"all\" ? \"\" : \"g\");\r\n        } else if (scope === \"all\") {\r\n            search2 = new RegExp(self.escape(String(search)), \"g\");\r\n        }\r\n        result = fixed.replace.call(String(str), search2, replacement); // Fixed `replace` required for named backreferences, etc.\r\n        if (isRegex && search.global) {\r\n            search.lastIndex = 0; // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\r\n        }\r\n        return result;\r\n    };\r\n\r\n/**\r\n * Splits a string into an array of strings using a regex or string separator. Matches of the\r\n * separator are not included in the result array. However, if `separator` is a regex that contains\r\n * capturing groups, backreferences are spliced into the result each time `separator` is matched.\r\n * Fixes browser bugs compared to the native `String.prototype.split` and can be used reliably\r\n * cross-browser.\r\n * @memberOf XRegExp\r\n * @param {String} str String to split.\r\n * @param {RegExp|String} separator Regex or string to use for separating the string.\r\n * @param {Number} [limit] Maximum number of items to include in the result array.\r\n * @returns {Array} Array of substrings.\r\n * @example\r\n *\r\n * // Basic use\r\n * XRegExp.split('a b c', ' ');\r\n * // -> ['a', 'b', 'c']\r\n *\r\n * // With limit\r\n * XRegExp.split('a b c', ' ', 2);\r\n * // -> ['a', 'b']\r\n *\r\n * // Backreferences in result array\r\n * XRegExp.split('..word1..', /([a-z]+)(\\d+)/i);\r\n * // -> ['..', 'word', '1', '..']\r\n */\r\n    self.split = function (str, separator, limit) {\r\n        return fixed.split.call(str, separator, limit);\r\n    };\r\n\r\n/**\r\n * Executes a regex search in a specified string. Returns `true` or `false`. Optional `pos` and\r\n * `sticky` arguments specify the search start position, and whether the match must start at the\r\n * specified position only. The `lastIndex` property of the provided regex is not used, but is\r\n * updated for compatibility. Also fixes browser bugs compared to the native\r\n * `RegExp.prototype.test` and can be used reliably cross-browser.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {RegExp} regex Regex to search with.\r\n * @param {Number} [pos=0] Zero-based index at which to start the search.\r\n * @param {Boolean|String} [sticky=false] Whether the match must start at the specified position\r\n *   only. The string `'sticky'` is accepted as an alternative to `true`.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n * @example\r\n *\r\n * // Basic use\r\n * XRegExp.test('abc', /c/); // -> true\r\n *\r\n * // With pos and sticky\r\n * XRegExp.test('abc', /c/, 0, 'sticky'); // -> false\r\n */\r\n    self.test = function (str, regex, pos, sticky) {\r\n        // Do this the easy way :-)\r\n        return !!self.exec(str, regex, pos, sticky);\r\n    };\r\n\r\n/**\r\n * Uninstalls optional features according to the specified options.\r\n * @memberOf XRegExp\r\n * @param {Object|String} options Options object or string.\r\n * @example\r\n *\r\n * // With an options object\r\n * XRegExp.uninstall({\r\n *   // Restores native regex methods\r\n *   natives: true,\r\n *\r\n *   // Disables additional syntax and flag extensions\r\n *   extensibility: true\r\n * });\r\n *\r\n * // With an options string\r\n * XRegExp.uninstall('natives extensibility');\r\n *\r\n * // Using a shortcut to uninstall all optional features\r\n * XRegExp.uninstall('all');\r\n */\r\n    self.uninstall = function (options) {\r\n        options = prepareOptions(options);\r\n        if (features.natives && options.natives) {\r\n            setNatives(false);\r\n        }\r\n        if (features.extensibility && options.extensibility) {\r\n            setExtensibility(false);\r\n        }\r\n    };\r\n\r\n/**\r\n * Returns an XRegExp object that is the union of the given patterns. Patterns can be provided as\r\n * regex objects or strings. Metacharacters are escaped in patterns provided as strings.\r\n * Backreferences in provided regex objects are automatically renumbered to work correctly. Native\r\n * flags used by provided regexes are ignored in favor of the `flags` argument.\r\n * @memberOf XRegExp\r\n * @param {Array} patterns Regexes and strings to combine.\r\n * @param {String} [flags] Any combination of XRegExp flags.\r\n * @returns {RegExp} Union of the provided regexes and strings.\r\n * @example\r\n *\r\n * XRegExp.union(['a+b*c', /(dogs)\\1/, /(cats)\\1/], 'i');\r\n * // -> /a\\+b\\*c|(dogs)\\1|(cats)\\2/i\r\n *\r\n * XRegExp.union([XRegExp('(?<pet>dogs)\\\\k<pet>'), XRegExp('(?<pet>cats)\\\\k<pet>')]);\r\n * // -> XRegExp('(?<pet>dogs)\\\\k<pet>|(?<pet>cats)\\\\k<pet>')\r\n */\r\n    self.union = function (patterns, flags) {\r\n        var parts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]/g,\r\n            numCaptures = 0,\r\n            numPriorCaptures,\r\n            captureNames,\r\n            rewrite = function (match, paren, backref) {\r\n                var name = captureNames[numCaptures - numPriorCaptures];\r\n                if (paren) { // Capturing group\r\n                    ++numCaptures;\r\n                    if (name) { // If the current capture has a name\r\n                        return \"(?<\" + name + \">\";\r\n                    }\r\n                } else if (backref) { // Backreference\r\n                    return \"\\\\\" + (+backref + numPriorCaptures);\r\n                }\r\n                return match;\r\n            },\r\n            output = [],\r\n            pattern,\r\n            i;\r\n        if (!(isType(patterns, \"array\") && patterns.length)) {\r\n            throw new TypeError(\"patterns must be a nonempty array\");\r\n        }\r\n        for (i = 0; i < patterns.length; ++i) {\r\n            pattern = patterns[i];\r\n            if (self.isRegExp(pattern)) {\r\n                numPriorCaptures = numCaptures;\r\n                captureNames = (pattern.xregexp && pattern.xregexp.captureNames) || [];\r\n                // Rewrite backreferences. Passing to XRegExp dies on octals and ensures patterns\r\n                // are independently valid; helps keep this simple. Named captures are put back\r\n                output.push(self(pattern.source).source.replace(parts, rewrite));\r\n            } else {\r\n                output.push(self.escape(pattern));\r\n            }\r\n        }\r\n        return self(output.join(\"|\"), flags);\r\n    };\r\n\r\n/**\r\n * The XRegExp version number.\r\n * @static\r\n * @memberOf XRegExp\r\n * @type String\r\n */\r\n    self.version = \"2.0.0\";\r\n\r\n/*--------------------------------------\r\n *  Fixed/extended native methods\r\n *------------------------------------*/\r\n\r\n/**\r\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\r\n * bugs in the native `RegExp.prototype.exec`. Calling `XRegExp.install('natives')` uses this to\r\n * override the native method. Use via `XRegExp.exec` without overriding natives.\r\n * @private\r\n * @param {String} str String to search.\r\n * @returns {Array} Match array with named backreference properties, or null.\r\n */\r\n    fixed.exec = function (str) {\r\n        var match, name, r2, origLastIndex, i;\r\n        if (!this.global) {\r\n            origLastIndex = this.lastIndex;\r\n        }\r\n        match = nativ.exec.apply(this, arguments);\r\n        if (match) {\r\n            // Fix browsers whose `exec` methods don't consistently return `undefined` for\r\n            // nonparticipating capturing groups\r\n            if (!compliantExecNpcg && match.length > 1 && lastIndexOf(match, \"\") > -1) {\r\n                r2 = new RegExp(this.source, nativ.replace.call(getNativeFlags(this), \"g\", \"\"));\r\n                // Using `str.slice(match.index)` rather than `match[0]` in case lookahead allowed\r\n                // matching due to characters outside the match\r\n                nativ.replace.call(String(str).slice(match.index), r2, function () {\r\n                    var i;\r\n                    for (i = 1; i < arguments.length - 2; ++i) {\r\n                        if (arguments[i] === undef) {\r\n                            match[i] = undef;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            // Attach named capture properties\r\n            if (this.xregexp && this.xregexp.captureNames) {\r\n                for (i = 1; i < match.length; ++i) {\r\n                    name = this.xregexp.captureNames[i - 1];\r\n                    if (name) {\r\n                        match[name] = match[i];\r\n                    }\r\n                }\r\n            }\r\n            // Fix browsers that increment `lastIndex` after zero-length matches\r\n            if (this.global && !match[0].length && (this.lastIndex > match.index)) {\r\n                this.lastIndex = match.index;\r\n            }\r\n        }\r\n        if (!this.global) {\r\n            this.lastIndex = origLastIndex; // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\r\n        }\r\n        return match;\r\n    };\r\n\r\n/**\r\n * Fixes browser bugs in the native `RegExp.prototype.test`. Calling `XRegExp.install('natives')`\r\n * uses this to override the native method.\r\n * @private\r\n * @param {String} str String to search.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n */\r\n    fixed.test = function (str) {\r\n        // Do this the easy way :-)\r\n        return !!fixed.exec.call(this, str);\r\n    };\r\n\r\n/**\r\n * Adds named capture support (with backreferences returned as `result.name`), and fixes browser\r\n * bugs in the native `String.prototype.match`. Calling `XRegExp.install('natives')` uses this to\r\n * override the native method.\r\n * @private\r\n * @param {RegExp} regex Regex to search with.\r\n * @returns {Array} If `regex` uses flag g, an array of match strings or null. Without flag g, the\r\n *   result of calling `regex.exec(this)`.\r\n */\r\n    fixed.match = function (regex) {\r\n        if (!self.isRegExp(regex)) {\r\n            regex = new RegExp(regex); // Use native `RegExp`\r\n        } else if (regex.global) {\r\n            var result = nativ.match.apply(this, arguments);\r\n            regex.lastIndex = 0; // Fixes IE bug\r\n            return result;\r\n        }\r\n        return fixed.exec.call(regex, this);\r\n    };\r\n\r\n/**\r\n * Adds support for `${n}` tokens for named and numbered backreferences in replacement text, and\r\n * provides named backreferences to replacement functions as `arguments[0].name`. Also fixes\r\n * browser bugs in replacement text syntax when performing a replacement using a nonregex search\r\n * value, and the value of a replacement regex's `lastIndex` property during replacement iterations\r\n * and upon completion. Note that this doesn't support SpiderMonkey's proprietary third (`flags`)\r\n * argument. Calling `XRegExp.install('natives')` uses this to override the native method. Use via\r\n * `XRegExp.replace` without overriding natives.\r\n * @private\r\n * @param {RegExp|String} search Search pattern to be replaced.\r\n * @param {String|Function} replacement Replacement string or a function invoked to create it.\r\n * @returns {String} New string with one or all matches replaced.\r\n */\r\n    fixed.replace = function (search, replacement) {\r\n        var isRegex = self.isRegExp(search), captureNames, result, str, origLastIndex;\r\n        if (isRegex) {\r\n            if (search.xregexp) {\r\n                captureNames = search.xregexp.captureNames;\r\n            }\r\n            if (!search.global) {\r\n                origLastIndex = search.lastIndex;\r\n            }\r\n        } else {\r\n            search += \"\";\r\n        }\r\n        if (isType(replacement, \"function\")) {\r\n            result = nativ.replace.call(String(this), search, function () {\r\n                var args = arguments, i;\r\n                if (captureNames) {\r\n                    // Change the `arguments[0]` string primitive to a `String` object that can store properties\r\n                    args[0] = new String(args[0]);\r\n                    // Store named backreferences on the first argument\r\n                    for (i = 0; i < captureNames.length; ++i) {\r\n                        if (captureNames[i]) {\r\n                            args[0][captureNames[i]] = args[i + 1];\r\n                        }\r\n                    }\r\n                }\r\n                // Update `lastIndex` before calling `replacement`.\r\n                // Fixes IE, Chrome, Firefox, Safari bug (last tested IE 9, Chrome 17, Firefox 11, Safari 5.1)\r\n                if (isRegex && search.global) {\r\n                    search.lastIndex = args[args.length - 2] + args[0].length;\r\n                }\r\n                return replacement.apply(null, args);\r\n            });\r\n        } else {\r\n            str = String(this); // Ensure `args[args.length - 1]` will be a string when given nonstring `this`\r\n            result = nativ.replace.call(str, search, function () {\r\n                var args = arguments; // Keep this function's `arguments` available through closure\r\n                return nativ.replace.call(String(replacement), replacementToken, function ($0, $1, $2) {\r\n                    var n;\r\n                    // Named or numbered backreference with curly brackets\r\n                    if ($1) {\r\n                        /* XRegExp behavior for `${n}`:\r\n                         * 1. Backreference to numbered capture, where `n` is 1+ digits. `0`, `00`, etc. is the entire match.\r\n                         * 2. Backreference to named capture `n`, if it exists and is not a number overridden by numbered capture.\r\n                         * 3. Otherwise, it's an error.\r\n                         */\r\n                        n = +$1; // Type-convert; drop leading zeros\r\n                        if (n <= args.length - 3) {\r\n                            return args[n] || \"\";\r\n                        }\r\n                        n = captureNames ? lastIndexOf(captureNames, $1) : -1;\r\n                        if (n < 0) {\r\n                            throw new SyntaxError(\"backreference to undefined group \" + $0);\r\n                        }\r\n                        return args[n + 1] || \"\";\r\n                    }\r\n                    // Else, special variable or numbered backreference (without curly brackets)\r\n                    if ($2 === \"$\") return \"$\";\r\n                    if ($2 === \"&\" || +$2 === 0) return args[0]; // $&, $0 (not followed by 1-9), $00\r\n                    if ($2 === \"`\") return args[args.length - 1].slice(0, args[args.length - 2]);\r\n                    if ($2 === \"'\") return args[args.length - 1].slice(args[args.length - 2] + args[0].length);\r\n                    // Else, numbered backreference (without curly brackets)\r\n                    $2 = +$2; // Type-convert; drop leading zero\r\n                    /* XRegExp behavior:\r\n                     * - Backreferences without curly brackets end after 1 or 2 digits. Use `${..}` for more digits.\r\n                     * - `$1` is an error if there are no capturing groups.\r\n                     * - `$10` is an error if there are less than 10 capturing groups. Use `${1}0` instead.\r\n                     * - `$01` is equivalent to `$1` if a capturing group exists, otherwise it's an error.\r\n                     * - `$0` (not followed by 1-9), `$00`, and `$&` are the entire match.\r\n                     * Native behavior, for comparison:\r\n                     * - Backreferences end after 1 or 2 digits. Cannot use backreference to capturing group 100+.\r\n                     * - `$1` is a literal `$1` if there are no capturing groups.\r\n                     * - `$10` is `$1` followed by a literal `0` if there are less than 10 capturing groups.\r\n                     * - `$01` is equivalent to `$1` if a capturing group exists, otherwise it's a literal `$01`.\r\n                     * - `$0` is a literal `$0`. `$&` is the entire match.\r\n                     */\r\n                    if (!isNaN($2)) {\r\n                        if ($2 > args.length - 3) {\r\n                            throw new SyntaxError(\"backreference to undefined group \" + $0);\r\n                        }\r\n                        return args[$2] || \"\";\r\n                    }\r\n                    throw new SyntaxError(\"invalid token \" + $0);\r\n                });\r\n            });\r\n        }\r\n        if (isRegex) {\r\n            if (search.global) {\r\n                search.lastIndex = 0; // Fixes IE, Safari bug (last tested IE 9, Safari 5.1)\r\n            } else {\r\n                search.lastIndex = origLastIndex; // Fixes IE, Opera bug (last tested IE 9, Opera 11.6)\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n/**\r\n * Fixes browser bugs in the native `String.prototype.split`. Calling `XRegExp.install('natives')`\r\n * uses this to override the native method. Use via `XRegExp.split` without overriding natives.\r\n * @private\r\n * @param {RegExp|String} separator Regex or string to use for separating the string.\r\n * @param {Number} [limit] Maximum number of items to include in the result array.\r\n * @returns {Array} Array of substrings.\r\n */\r\n    fixed.split = function (separator, limit) {\r\n        if (!self.isRegExp(separator)) {\r\n            return nativ.split.apply(this, arguments); // use faster native method\r\n        }\r\n        var str = String(this),\r\n            origLastIndex = separator.lastIndex,\r\n            output = [],\r\n            lastLastIndex = 0,\r\n            lastLength;\r\n        /* Values for `limit`, per the spec:\r\n         * If undefined: pow(2,32) - 1\r\n         * If 0, Infinity, or NaN: 0\r\n         * If positive number: limit = floor(limit); if (limit >= pow(2,32)) limit -= pow(2,32);\r\n         * If negative number: pow(2,32) - floor(abs(limit))\r\n         * If other: Type-convert, then use the above rules\r\n         */\r\n        limit = (limit === undef ? -1 : limit) >>> 0;\r\n        self.forEach(str, separator, function (match) {\r\n            if ((match.index + match[0].length) > lastLastIndex) { // != `if (match[0].length)`\r\n                output.push(str.slice(lastLastIndex, match.index));\r\n                if (match.length > 1 && match.index < str.length) {\r\n                    Array.prototype.push.apply(output, match.slice(1));\r\n                }\r\n                lastLength = match[0].length;\r\n                lastLastIndex = match.index + lastLength;\r\n            }\r\n        });\r\n        if (lastLastIndex === str.length) {\r\n            if (!nativ.test.call(separator, \"\") || lastLength) {\r\n                output.push(\"\");\r\n            }\r\n        } else {\r\n            output.push(str.slice(lastLastIndex));\r\n        }\r\n        separator.lastIndex = origLastIndex;\r\n        return output.length > limit ? output.slice(0, limit) : output;\r\n    };\r\n\r\n/*--------------------------------------\r\n *  Built-in tokens\r\n *------------------------------------*/\r\n\r\n// Shortcut\r\n    add = addToken.on;\r\n\r\n/* Letter identity escapes that natively match literal characters: \\p, \\P, etc.\r\n * Should be SyntaxErrors but are allowed in web reality. XRegExp makes them errors for cross-\r\n * browser consistency and to reserve their syntax, but lets them be superseded by XRegExp addons.\r\n */\r\n    add(/\\\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\\dA-Fa-f]{4})|x(?![\\dA-Fa-f]{2}))/,\r\n        function (match, scope) {\r\n            // \\B is allowed in default scope only\r\n            if (match[1] === \"B\" && scope === defaultScope) {\r\n                return match[0];\r\n            }\r\n            throw new SyntaxError(\"invalid escape \" + match[0]);\r\n        },\r\n        {scope: \"all\"});\r\n\r\n/* Empty character class: [] or [^]\r\n * Fixes a critical cross-browser syntax inconsistency. Unless this is standardized (per the spec),\r\n * regex syntax can't be accurately parsed because character class endings can't be determined.\r\n */\r\n    add(/\\[(\\^?)]/,\r\n        function (match) {\r\n            // For cross-browser compatibility with ES3, convert [] to \\b\\B and [^] to [\\s\\S].\r\n            // (?!) should work like \\b\\B, but is unreliable in Firefox\r\n            return match[1] ? \"[\\\\s\\\\S]\" : \"\\\\b\\\\B\";\r\n        });\r\n\r\n/* Comment pattern: (?# )\r\n * Inline comments are an alternative to the line comments allowed in free-spacing mode (flag x).\r\n */\r\n    add(/(?:\\(\\?#[^)]*\\))+/,\r\n        function (match) {\r\n            // Keep tokens separated unless the following token is a quantifier\r\n            return nativ.test.call(quantifier, match.input.slice(match.index + match[0].length)) ? \"\" : \"(?:)\";\r\n        });\r\n\r\n/* Named backreference: \\k<name>\r\n * Backreference names can use the characters A-Z, a-z, 0-9, _, and $ only.\r\n */\r\n    add(/\\\\k<([\\w$]+)>/,\r\n        function (match) {\r\n            var index = isNaN(match[1]) ? (lastIndexOf(this.captureNames, match[1]) + 1) : +match[1],\r\n                endIndex = match.index + match[0].length;\r\n            if (!index || index > this.captureNames.length) {\r\n                throw new SyntaxError(\"backreference to undefined group \" + match[0]);\r\n            }\r\n            // Keep backreferences separate from subsequent literal numbers\r\n            return \"\\\\\" + index + (\r\n                endIndex === match.input.length || isNaN(match.input.charAt(endIndex)) ? \"\" : \"(?:)\"\r\n            );\r\n        });\r\n\r\n/* Whitespace and line comments, in free-spacing mode (aka extended mode, flag x) only.\r\n */\r\n    add(/(?:\\s+|#.*)+/,\r\n        function (match) {\r\n            // Keep tokens separated unless the following token is a quantifier\r\n            return nativ.test.call(quantifier, match.input.slice(match.index + match[0].length)) ? \"\" : \"(?:)\";\r\n        },\r\n        {\r\n            trigger: function () {\r\n                return this.hasFlag(\"x\");\r\n            },\r\n            customFlags: \"x\"\r\n        });\r\n\r\n/* Dot, in dotall mode (aka singleline mode, flag s) only.\r\n */\r\n    add(/\\./,\r\n        function () {\r\n            return \"[\\\\s\\\\S]\";\r\n        },\r\n        {\r\n            trigger: function () {\r\n                return this.hasFlag(\"s\");\r\n            },\r\n            customFlags: \"s\"\r\n        });\r\n\r\n/* Named capturing group; match the opening delimiter only: (?<name>\r\n * Capture names can use the characters A-Z, a-z, 0-9, _, and $ only. Names can't be integers.\r\n * Supports Python-style (?P<name> as an alternate syntax to avoid issues in recent Opera (which\r\n * natively supports the Python-style syntax). Otherwise, XRegExp might treat numbered\r\n * backreferences to Python-style named capture as octals.\r\n */\r\n    add(/\\(\\?P?<([\\w$]+)>/,\r\n        function (match) {\r\n            if (!isNaN(match[1])) {\r\n                // Avoid incorrect lookups, since named backreferences are added to match arrays\r\n                throw new SyntaxError(\"can't use integer as capture name \" + match[0]);\r\n            }\r\n            this.captureNames.push(match[1]);\r\n            this.hasNamedCapture = true;\r\n            return \"(\";\r\n        });\r\n\r\n/* Numbered backreference or octal, plus any following digits: \\0, \\11, etc.\r\n * Octals except \\0 not followed by 0-9 and backreferences to unopened capture groups throw an\r\n * error. Other matches are returned unaltered. IE <= 8 doesn't support backreferences greater than\r\n * \\99 in regex syntax.\r\n */\r\n    add(/\\\\(\\d+)/,\r\n        function (match, scope) {\r\n            if (!(scope === defaultScope && /^[1-9]/.test(match[1]) && +match[1] <= this.captureNames.length) &&\r\n                    match[1] !== \"0\") {\r\n                throw new SyntaxError(\"can't use octal escape or backreference to undefined group \" + match[0]);\r\n            }\r\n            return match[0];\r\n        },\r\n        {scope: \"all\"});\r\n\r\n/* Capturing group; match the opening parenthesis only.\r\n * Required for support of named capturing groups. Also adds explicit capture mode (flag n).\r\n */\r\n    add(/\\((?!\\?)/,\r\n        function () {\r\n            if (this.hasFlag(\"n\")) {\r\n                return \"(?:\";\r\n            }\r\n            this.captureNames.push(null);\r\n            return \"(\";\r\n        },\r\n        {customFlags: \"n\"});\r\n\r\n/*--------------------------------------\r\n *  Expose XRegExp\r\n *------------------------------------*/\r\n\r\n// For CommonJS enviroments\r\n    if (typeof exports !== \"undefined\") {\r\n        exports.XRegExp = self;\r\n    }\r\n\r\n    return self;\r\n\r\n}());\r\n\r\n\n/***** unicode-base.js *****/\n\n/*!\r\n * XRegExp Unicode Base v1.0.0\r\n * (c) 2008-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds support for the `\\p{L}` or `\\p{Letter}` Unicode category. Addon packages for other Unicode\r\n * categories, scripts, blocks, and properties are available separately. All Unicode tokens can be\r\n * inverted using `\\P{..}` or `\\p{^..}`. Token names are case insensitive, and any spaces, hyphens,\r\n * and underscores are ignored.\r\n * @requires XRegExp\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    var unicode = {};\r\n\r\n/*--------------------------------------\r\n *  Private helper functions\r\n *------------------------------------*/\r\n\r\n// Generates a standardized token name (lowercase, with hyphens, spaces, and underscores removed)\r\n    function slug(name) {\r\n        return name.replace(/[- _]+/g, \"\").toLowerCase();\r\n    }\r\n\r\n// Expands a list of Unicode code points and ranges to be usable in a regex character class\r\n    function expand(str) {\r\n        return str.replace(/\\w{4}/g, \"\\\\u$&\");\r\n    }\r\n\r\n// Adds leading zeros if shorter than four characters\r\n    function pad4(str) {\r\n        while (str.length < 4) {\r\n            str = \"0\" + str;\r\n        }\r\n        return str;\r\n    }\r\n\r\n// Converts a hexadecimal number to decimal\r\n    function dec(hex) {\r\n        return parseInt(hex, 16);\r\n    }\r\n\r\n// Converts a decimal number to hexadecimal\r\n    function hex(dec) {\r\n        return parseInt(dec, 10).toString(16);\r\n    }\r\n\r\n// Inverts a list of Unicode code points and ranges\r\n    function invert(range) {\r\n        var output = [],\r\n            lastEnd = -1,\r\n            start;\r\n        XRegExp.forEach(range, /\\\\u(\\w{4})(?:-\\\\u(\\w{4}))?/, function (m) {\r\n            start = dec(m[1]);\r\n            if (start > (lastEnd + 1)) {\r\n                output.push(\"\\\\u\" + pad4(hex(lastEnd + 1)));\r\n                if (start > (lastEnd + 2)) {\r\n                    output.push(\"-\\\\u\" + pad4(hex(start - 1)));\r\n                }\r\n            }\r\n            lastEnd = dec(m[2] || m[1]);\r\n        });\r\n        if (lastEnd < 0xFFFF) {\r\n            output.push(\"\\\\u\" + pad4(hex(lastEnd + 1)));\r\n            if (lastEnd < 0xFFFE) {\r\n                output.push(\"-\\\\uFFFF\");\r\n            }\r\n        }\r\n        return output.join(\"\");\r\n    }\r\n\r\n// Generates an inverted token on first use\r\n    function cacheInversion(item) {\r\n        return unicode[\"^\" + item] || (unicode[\"^\" + item] = invert(unicode[item]));\r\n    }\r\n\r\n/*--------------------------------------\r\n *  Core functionality\r\n *------------------------------------*/\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n/**\r\n * Adds to the list of Unicode properties that XRegExp regexes can match via \\p{..} or \\P{..}.\r\n * @memberOf XRegExp\r\n * @param {Object} pack Named sets of Unicode code points and ranges.\r\n * @param {Object} [aliases] Aliases for the primary token names.\r\n * @example\r\n *\r\n * XRegExp.addUnicodePackage({\r\n *   XDigit: '0030-00390041-00460061-0066' // 0-9A-Fa-f\r\n * }, {\r\n *   XDigit: 'Hexadecimal'\r\n * });\r\n */\r\n    XRegExp.addUnicodePackage = function (pack, aliases) {\r\n        var p;\r\n        if (!XRegExp.isInstalled(\"extensibility\")) {\r\n            throw new Error(\"extensibility must be installed before adding Unicode packages\");\r\n        }\r\n        if (pack) {\r\n            for (p in pack) {\r\n                if (pack.hasOwnProperty(p)) {\r\n                    unicode[slug(p)] = expand(pack[p]);\r\n                }\r\n            }\r\n        }\r\n        if (aliases) {\r\n            for (p in aliases) {\r\n                if (aliases.hasOwnProperty(p)) {\r\n                    unicode[slug(aliases[p])] = unicode[slug(p)];\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n/* Adds data for the Unicode `Letter` category. Addon packages include other categories, scripts,\r\n * blocks, and properties.\r\n */\r\n    XRegExp.addUnicodePackage({\r\n        L: \"0041-005A0061-007A00AA00B500BA00C0-00D600D8-00F600F8-02C102C6-02D102E0-02E402EC02EE0370-037403760377037A-037D03860388-038A038C038E-03A103A3-03F503F7-0481048A-05270531-055605590561-058705D0-05EA05F0-05F20620-064A066E066F0671-06D306D506E506E606EE06EF06FA-06FC06FF07100712-072F074D-07A507B107CA-07EA07F407F507FA0800-0815081A082408280840-085808A008A2-08AC0904-0939093D09500958-09610971-09770979-097F0985-098C098F09900993-09A809AA-09B009B209B6-09B909BD09CE09DC09DD09DF-09E109F009F10A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A59-0A5C0A5E0A72-0A740A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD0AD00AE00AE10B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D0B5C0B5D0B5F-0B610B710B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BD00C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D0C580C590C600C610C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD0CDE0CE00CE10CF10CF20D05-0D0C0D0E-0D100D12-0D3A0D3D0D4E0D600D610D7A-0D7F0D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60E01-0E300E320E330E40-0E460E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB00EB20EB30EBD0EC0-0EC40EC60EDC-0EDF0F000F40-0F470F49-0F6C0F88-0F8C1000-102A103F1050-1055105A-105D106110651066106E-10701075-1081108E10A0-10C510C710CD10D0-10FA10FC-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA1700-170C170E-17111720-17311740-17511760-176C176E-17701780-17B317D717DC1820-18771880-18A818AA18B0-18F51900-191C1950-196D1970-19741980-19AB19C1-19C71A00-1A161A20-1A541AA71B05-1B331B45-1B4B1B83-1BA01BAE1BAF1BBA-1BE51C00-1C231C4D-1C4F1C5A-1C7D1CE9-1CEC1CEE-1CF11CF51CF61D00-1DBF1E00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FBC1FBE1FC2-1FC41FC6-1FCC1FD0-1FD31FD6-1FDB1FE0-1FEC1FF2-1FF41FF6-1FFC2071207F2090-209C21022107210A-211321152119-211D212421262128212A-212D212F-2139213C-213F2145-2149214E218321842C00-2C2E2C30-2C5E2C60-2CE42CEB-2CEE2CF22CF32D00-2D252D272D2D2D30-2D672D6F2D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2E2F300530063031-3035303B303C3041-3096309D-309F30A1-30FA30FC-30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A48CA4D0-A4FDA500-A60CA610-A61FA62AA62BA640-A66EA67F-A697A6A0-A6E5A717-A71FA722-A788A78B-A78EA790-A793A7A0-A7AAA7F8-A801A803-A805A807-A80AA80C-A822A840-A873A882-A8B3A8F2-A8F7A8FBA90A-A925A930-A946A960-A97CA984-A9B2A9CFAA00-AA28AA40-AA42AA44-AA4BAA60-AA76AA7AAA80-AAAFAAB1AAB5AAB6AAB9-AABDAAC0AAC2AADB-AADDAAE0-AAEAAAF2-AAF4AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABE2AC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1DFB1F-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF21-FF3AFF41-FF5AFF66-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\"\r\n    }, {\r\n        L: \"Letter\"\r\n    });\r\n\r\n/* Adds Unicode property syntax to XRegExp: \\p{..}, \\P{..}, \\p{^..}\r\n */\r\n    XRegExp.addToken(\r\n        /\\\\([pP]){(\\^?)([^}]*)}/,\r\n        function (match, scope) {\r\n            var inv = (match[1] === \"P\" || match[2]) ? \"^\" : \"\",\r\n                item = slug(match[3]);\r\n            // The double negative \\P{^..} is invalid\r\n            if (match[1] === \"P\" && match[2]) {\r\n                throw new SyntaxError(\"invalid double negation \\\\P{^\");\r\n            }\r\n            if (!unicode.hasOwnProperty(item)) {\r\n                throw new SyntaxError(\"invalid or unknown Unicode property \" + match[0]);\r\n            }\r\n            return scope === \"class\" ?\r\n                    (inv ? cacheInversion(item) : unicode[item]) :\r\n                    \"[\" + inv + unicode[item] + \"]\";\r\n        },\r\n        {scope: \"all\"}\r\n    );\r\n\r\n}(XRegExp));\r\n\r\n\n/***** unicode-categories.js *****/\n\n/*!\r\n * XRegExp Unicode Categories v1.2.0\r\n * (c) 2010-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds support for all Unicode categories (aka properties) E.g., `\\p{Lu}` or\r\n * `\\p{Uppercase Letter}`. Token names are case insensitive, and any spaces, hyphens, and\r\n * underscores are ignored.\r\n * @requires XRegExp, XRegExp Unicode Base\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    if (!XRegExp.addUnicodePackage) {\r\n        throw new ReferenceError(\"Unicode Base must be loaded before Unicode Categories\");\r\n    }\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n    XRegExp.addUnicodePackage({\r\n        //L: \"\", // Included in the Unicode Base addon\r\n        Ll: \"0061-007A00B500DF-00F600F8-00FF01010103010501070109010B010D010F01110113011501170119011B011D011F01210123012501270129012B012D012F01310133013501370138013A013C013E014001420144014601480149014B014D014F01510153015501570159015B015D015F01610163016501670169016B016D016F0171017301750177017A017C017E-0180018301850188018C018D019201950199-019B019E01A101A301A501A801AA01AB01AD01B001B401B601B901BA01BD-01BF01C601C901CC01CE01D001D201D401D601D801DA01DC01DD01DF01E101E301E501E701E901EB01ED01EF01F001F301F501F901FB01FD01FF02010203020502070209020B020D020F02110213021502170219021B021D021F02210223022502270229022B022D022F02310233-0239023C023F0240024202470249024B024D024F-02930295-02AF037103730377037B-037D039003AC-03CE03D003D103D5-03D703D903DB03DD03DF03E103E303E503E703E903EB03ED03EF-03F303F503F803FB03FC0430-045F04610463046504670469046B046D046F04710473047504770479047B047D047F0481048B048D048F04910493049504970499049B049D049F04A104A304A504A704A904AB04AD04AF04B104B304B504B704B904BB04BD04BF04C204C404C604C804CA04CC04CE04CF04D104D304D504D704D904DB04DD04DF04E104E304E504E704E904EB04ED04EF04F104F304F504F704F904FB04FD04FF05010503050505070509050B050D050F05110513051505170519051B051D051F05210523052505270561-05871D00-1D2B1D6B-1D771D79-1D9A1E011E031E051E071E091E0B1E0D1E0F1E111E131E151E171E191E1B1E1D1E1F1E211E231E251E271E291E2B1E2D1E2F1E311E331E351E371E391E3B1E3D1E3F1E411E431E451E471E491E4B1E4D1E4F1E511E531E551E571E591E5B1E5D1E5F1E611E631E651E671E691E6B1E6D1E6F1E711E731E751E771E791E7B1E7D1E7F1E811E831E851E871E891E8B1E8D1E8F1E911E931E95-1E9D1E9F1EA11EA31EA51EA71EA91EAB1EAD1EAF1EB11EB31EB51EB71EB91EBB1EBD1EBF1EC11EC31EC51EC71EC91ECB1ECD1ECF1ED11ED31ED51ED71ED91EDB1EDD1EDF1EE11EE31EE51EE71EE91EEB1EED1EEF1EF11EF31EF51EF71EF91EFB1EFD1EFF-1F071F10-1F151F20-1F271F30-1F371F40-1F451F50-1F571F60-1F671F70-1F7D1F80-1F871F90-1F971FA0-1FA71FB0-1FB41FB61FB71FBE1FC2-1FC41FC61FC71FD0-1FD31FD61FD71FE0-1FE71FF2-1FF41FF61FF7210A210E210F2113212F21342139213C213D2146-2149214E21842C30-2C5E2C612C652C662C682C6A2C6C2C712C732C742C76-2C7B2C812C832C852C872C892C8B2C8D2C8F2C912C932C952C972C992C9B2C9D2C9F2CA12CA32CA52CA72CA92CAB2CAD2CAF2CB12CB32CB52CB72CB92CBB2CBD2CBF2CC12CC32CC52CC72CC92CCB2CCD2CCF2CD12CD32CD52CD72CD92CDB2CDD2CDF2CE12CE32CE42CEC2CEE2CF32D00-2D252D272D2DA641A643A645A647A649A64BA64DA64FA651A653A655A657A659A65BA65DA65FA661A663A665A667A669A66BA66DA681A683A685A687A689A68BA68DA68FA691A693A695A697A723A725A727A729A72BA72DA72F-A731A733A735A737A739A73BA73DA73FA741A743A745A747A749A74BA74DA74FA751A753A755A757A759A75BA75DA75FA761A763A765A767A769A76BA76DA76FA771-A778A77AA77CA77FA781A783A785A787A78CA78EA791A793A7A1A7A3A7A5A7A7A7A9A7FAFB00-FB06FB13-FB17FF41-FF5A\",\r\n        Lu: \"0041-005A00C0-00D600D8-00DE01000102010401060108010A010C010E01100112011401160118011A011C011E01200122012401260128012A012C012E01300132013401360139013B013D013F0141014301450147014A014C014E01500152015401560158015A015C015E01600162016401660168016A016C016E017001720174017601780179017B017D018101820184018601870189-018B018E-0191019301940196-0198019C019D019F01A001A201A401A601A701A901AC01AE01AF01B1-01B301B501B701B801BC01C401C701CA01CD01CF01D101D301D501D701D901DB01DE01E001E201E401E601E801EA01EC01EE01F101F401F6-01F801FA01FC01FE02000202020402060208020A020C020E02100212021402160218021A021C021E02200222022402260228022A022C022E02300232023A023B023D023E02410243-02460248024A024C024E03700372037603860388-038A038C038E038F0391-03A103A3-03AB03CF03D2-03D403D803DA03DC03DE03E003E203E403E603E803EA03EC03EE03F403F703F903FA03FD-042F04600462046404660468046A046C046E04700472047404760478047A047C047E0480048A048C048E04900492049404960498049A049C049E04A004A204A404A604A804AA04AC04AE04B004B204B404B604B804BA04BC04BE04C004C104C304C504C704C904CB04CD04D004D204D404D604D804DA04DC04DE04E004E204E404E604E804EA04EC04EE04F004F204F404F604F804FA04FC04FE05000502050405060508050A050C050E05100512051405160518051A051C051E05200522052405260531-055610A0-10C510C710CD1E001E021E041E061E081E0A1E0C1E0E1E101E121E141E161E181E1A1E1C1E1E1E201E221E241E261E281E2A1E2C1E2E1E301E321E341E361E381E3A1E3C1E3E1E401E421E441E461E481E4A1E4C1E4E1E501E521E541E561E581E5A1E5C1E5E1E601E621E641E661E681E6A1E6C1E6E1E701E721E741E761E781E7A1E7C1E7E1E801E821E841E861E881E8A1E8C1E8E1E901E921E941E9E1EA01EA21EA41EA61EA81EAA1EAC1EAE1EB01EB21EB41EB61EB81EBA1EBC1EBE1EC01EC21EC41EC61EC81ECA1ECC1ECE1ED01ED21ED41ED61ED81EDA1EDC1EDE1EE01EE21EE41EE61EE81EEA1EEC1EEE1EF01EF21EF41EF61EF81EFA1EFC1EFE1F08-1F0F1F18-1F1D1F28-1F2F1F38-1F3F1F48-1F4D1F591F5B1F5D1F5F1F68-1F6F1FB8-1FBB1FC8-1FCB1FD8-1FDB1FE8-1FEC1FF8-1FFB21022107210B-210D2110-211221152119-211D212421262128212A-212D2130-2133213E213F214521832C00-2C2E2C602C62-2C642C672C692C6B2C6D-2C702C722C752C7E-2C802C822C842C862C882C8A2C8C2C8E2C902C922C942C962C982C9A2C9C2C9E2CA02CA22CA42CA62CA82CAA2CAC2CAE2CB02CB22CB42CB62CB82CBA2CBC2CBE2CC02CC22CC42CC62CC82CCA2CCC2CCE2CD02CD22CD42CD62CD82CDA2CDC2CDE2CE02CE22CEB2CED2CF2A640A642A644A646A648A64AA64CA64EA650A652A654A656A658A65AA65CA65EA660A662A664A666A668A66AA66CA680A682A684A686A688A68AA68CA68EA690A692A694A696A722A724A726A728A72AA72CA72EA732A734A736A738A73AA73CA73EA740A742A744A746A748A74AA74CA74EA750A752A754A756A758A75AA75CA75EA760A762A764A766A768A76AA76CA76EA779A77BA77DA77EA780A782A784A786A78BA78DA790A792A7A0A7A2A7A4A7A6A7A8A7AAFF21-FF3A\",\r\n        Lt: \"01C501C801CB01F21F88-1F8F1F98-1F9F1FA8-1FAF1FBC1FCC1FFC\",\r\n        Lm: \"02B0-02C102C6-02D102E0-02E402EC02EE0374037A0559064006E506E607F407F507FA081A0824082809710E460EC610FC17D718431AA71C78-1C7D1D2C-1D6A1D781D9B-1DBF2071207F2090-209C2C7C2C7D2D6F2E2F30053031-3035303B309D309E30FC-30FEA015A4F8-A4FDA60CA67FA717-A71FA770A788A7F8A7F9A9CFAA70AADDAAF3AAF4FF70FF9EFF9F\",\r\n        Lo: \"00AA00BA01BB01C0-01C3029405D0-05EA05F0-05F20620-063F0641-064A066E066F0671-06D306D506EE06EF06FA-06FC06FF07100712-072F074D-07A507B107CA-07EA0800-08150840-085808A008A2-08AC0904-0939093D09500958-09610972-09770979-097F0985-098C098F09900993-09A809AA-09B009B209B6-09B909BD09CE09DC09DD09DF-09E109F009F10A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A59-0A5C0A5E0A72-0A740A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD0AD00AE00AE10B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D0B5C0B5D0B5F-0B610B710B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BD00C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D0C580C590C600C610C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD0CDE0CE00CE10CF10CF20D05-0D0C0D0E-0D100D12-0D3A0D3D0D4E0D600D610D7A-0D7F0D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60E01-0E300E320E330E40-0E450E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB00EB20EB30EBD0EC0-0EC40EDC-0EDF0F000F40-0F470F49-0F6C0F88-0F8C1000-102A103F1050-1055105A-105D106110651066106E-10701075-1081108E10D0-10FA10FD-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA1700-170C170E-17111720-17311740-17511760-176C176E-17701780-17B317DC1820-18421844-18771880-18A818AA18B0-18F51900-191C1950-196D1970-19741980-19AB19C1-19C71A00-1A161A20-1A541B05-1B331B45-1B4B1B83-1BA01BAE1BAF1BBA-1BE51C00-1C231C4D-1C4F1C5A-1C771CE9-1CEC1CEE-1CF11CF51CF62135-21382D30-2D672D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE3006303C3041-3096309F30A1-30FA30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A014A016-A48CA4D0-A4F7A500-A60BA610-A61FA62AA62BA66EA6A0-A6E5A7FB-A801A803-A805A807-A80AA80C-A822A840-A873A882-A8B3A8F2-A8F7A8FBA90A-A925A930-A946A960-A97CA984-A9B2AA00-AA28AA40-AA42AA44-AA4BAA60-AA6FAA71-AA76AA7AAA80-AAAFAAB1AAB5AAB6AAB9-AABDAAC0AAC2AADBAADCAAE0-AAEAAAF2AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABE2AC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB1DFB1F-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF66-FF6FFF71-FF9DFFA0-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\",\r\n        M: \"0300-036F0483-04890591-05BD05BF05C105C205C405C505C70610-061A064B-065F067006D6-06DC06DF-06E406E706E806EA-06ED07110730-074A07A6-07B007EB-07F30816-0819081B-08230825-08270829-082D0859-085B08E4-08FE0900-0903093A-093C093E-094F0951-0957096209630981-098309BC09BE-09C409C709C809CB-09CD09D709E209E30A01-0A030A3C0A3E-0A420A470A480A4B-0A4D0A510A700A710A750A81-0A830ABC0ABE-0AC50AC7-0AC90ACB-0ACD0AE20AE30B01-0B030B3C0B3E-0B440B470B480B4B-0B4D0B560B570B620B630B820BBE-0BC20BC6-0BC80BCA-0BCD0BD70C01-0C030C3E-0C440C46-0C480C4A-0C4D0C550C560C620C630C820C830CBC0CBE-0CC40CC6-0CC80CCA-0CCD0CD50CD60CE20CE30D020D030D3E-0D440D46-0D480D4A-0D4D0D570D620D630D820D830DCA0DCF-0DD40DD60DD8-0DDF0DF20DF30E310E34-0E3A0E47-0E4E0EB10EB4-0EB90EBB0EBC0EC8-0ECD0F180F190F350F370F390F3E0F3F0F71-0F840F860F870F8D-0F970F99-0FBC0FC6102B-103E1056-1059105E-10601062-10641067-106D1071-10741082-108D108F109A-109D135D-135F1712-17141732-1734175217531772177317B4-17D317DD180B-180D18A91920-192B1930-193B19B0-19C019C819C91A17-1A1B1A55-1A5E1A60-1A7C1A7F1B00-1B041B34-1B441B6B-1B731B80-1B821BA1-1BAD1BE6-1BF31C24-1C371CD0-1CD21CD4-1CE81CED1CF2-1CF41DC0-1DE61DFC-1DFF20D0-20F02CEF-2CF12D7F2DE0-2DFF302A-302F3099309AA66F-A672A674-A67DA69FA6F0A6F1A802A806A80BA823-A827A880A881A8B4-A8C4A8E0-A8F1A926-A92DA947-A953A980-A983A9B3-A9C0AA29-AA36AA43AA4CAA4DAA7BAAB0AAB2-AAB4AAB7AAB8AABEAABFAAC1AAEB-AAEFAAF5AAF6ABE3-ABEAABECABEDFB1EFE00-FE0FFE20-FE26\",\r\n        Mn: \"0300-036F0483-04870591-05BD05BF05C105C205C405C505C70610-061A064B-065F067006D6-06DC06DF-06E406E706E806EA-06ED07110730-074A07A6-07B007EB-07F30816-0819081B-08230825-08270829-082D0859-085B08E4-08FE0900-0902093A093C0941-0948094D0951-095709620963098109BC09C1-09C409CD09E209E30A010A020A3C0A410A420A470A480A4B-0A4D0A510A700A710A750A810A820ABC0AC1-0AC50AC70AC80ACD0AE20AE30B010B3C0B3F0B41-0B440B4D0B560B620B630B820BC00BCD0C3E-0C400C46-0C480C4A-0C4D0C550C560C620C630CBC0CBF0CC60CCC0CCD0CE20CE30D41-0D440D4D0D620D630DCA0DD2-0DD40DD60E310E34-0E3A0E47-0E4E0EB10EB4-0EB90EBB0EBC0EC8-0ECD0F180F190F350F370F390F71-0F7E0F80-0F840F860F870F8D-0F970F99-0FBC0FC6102D-10301032-10371039103A103D103E10581059105E-10601071-1074108210851086108D109D135D-135F1712-17141732-1734175217531772177317B417B517B7-17BD17C617C9-17D317DD180B-180D18A91920-19221927192819321939-193B1A171A181A561A58-1A5E1A601A621A65-1A6C1A73-1A7C1A7F1B00-1B031B341B36-1B3A1B3C1B421B6B-1B731B801B811BA2-1BA51BA81BA91BAB1BE61BE81BE91BED1BEF-1BF11C2C-1C331C361C371CD0-1CD21CD4-1CE01CE2-1CE81CED1CF41DC0-1DE61DFC-1DFF20D0-20DC20E120E5-20F02CEF-2CF12D7F2DE0-2DFF302A-302D3099309AA66FA674-A67DA69FA6F0A6F1A802A806A80BA825A826A8C4A8E0-A8F1A926-A92DA947-A951A980-A982A9B3A9B6-A9B9A9BCAA29-AA2EAA31AA32AA35AA36AA43AA4CAAB0AAB2-AAB4AAB7AAB8AABEAABFAAC1AAECAAEDAAF6ABE5ABE8ABEDFB1EFE00-FE0FFE20-FE26\",\r\n        Mc: \"0903093B093E-09400949-094C094E094F0982098309BE-09C009C709C809CB09CC09D70A030A3E-0A400A830ABE-0AC00AC90ACB0ACC0B020B030B3E0B400B470B480B4B0B4C0B570BBE0BBF0BC10BC20BC6-0BC80BCA-0BCC0BD70C01-0C030C41-0C440C820C830CBE0CC0-0CC40CC70CC80CCA0CCB0CD50CD60D020D030D3E-0D400D46-0D480D4A-0D4C0D570D820D830DCF-0DD10DD8-0DDF0DF20DF30F3E0F3F0F7F102B102C10311038103B103C105610571062-10641067-106D108310841087-108C108F109A-109C17B617BE-17C517C717C81923-19261929-192B193019311933-193819B0-19C019C819C91A19-1A1B1A551A571A611A631A641A6D-1A721B041B351B3B1B3D-1B411B431B441B821BA11BA61BA71BAA1BAC1BAD1BE71BEA-1BEC1BEE1BF21BF31C24-1C2B1C341C351CE11CF21CF3302E302FA823A824A827A880A881A8B4-A8C3A952A953A983A9B4A9B5A9BAA9BBA9BD-A9C0AA2FAA30AA33AA34AA4DAA7BAAEBAAEEAAEFAAF5ABE3ABE4ABE6ABE7ABE9ABEAABEC\",\r\n        Me: \"0488048920DD-20E020E2-20E4A670-A672\",\r\n        N: \"0030-003900B200B300B900BC-00BE0660-066906F0-06F907C0-07C90966-096F09E6-09EF09F4-09F90A66-0A6F0AE6-0AEF0B66-0B6F0B72-0B770BE6-0BF20C66-0C6F0C78-0C7E0CE6-0CEF0D66-0D750E50-0E590ED0-0ED90F20-0F331040-10491090-10991369-137C16EE-16F017E0-17E917F0-17F91810-18191946-194F19D0-19DA1A80-1A891A90-1A991B50-1B591BB0-1BB91C40-1C491C50-1C5920702074-20792080-20892150-21822185-21892460-249B24EA-24FF2776-27932CFD30073021-30293038-303A3192-31953220-32293248-324F3251-325F3280-328932B1-32BFA620-A629A6E6-A6EFA830-A835A8D0-A8D9A900-A909A9D0-A9D9AA50-AA59ABF0-ABF9FF10-FF19\",\r\n        Nd: \"0030-00390660-066906F0-06F907C0-07C90966-096F09E6-09EF0A66-0A6F0AE6-0AEF0B66-0B6F0BE6-0BEF0C66-0C6F0CE6-0CEF0D66-0D6F0E50-0E590ED0-0ED90F20-0F291040-10491090-109917E0-17E91810-18191946-194F19D0-19D91A80-1A891A90-1A991B50-1B591BB0-1BB91C40-1C491C50-1C59A620-A629A8D0-A8D9A900-A909A9D0-A9D9AA50-AA59ABF0-ABF9FF10-FF19\",\r\n        Nl: \"16EE-16F02160-21822185-218830073021-30293038-303AA6E6-A6EF\",\r\n        No: \"00B200B300B900BC-00BE09F4-09F90B72-0B770BF0-0BF20C78-0C7E0D70-0D750F2A-0F331369-137C17F0-17F919DA20702074-20792080-20892150-215F21892460-249B24EA-24FF2776-27932CFD3192-31953220-32293248-324F3251-325F3280-328932B1-32BFA830-A835\",\r\n        P: \"0021-00230025-002A002C-002F003A003B003F0040005B-005D005F007B007D00A100A700AB00B600B700BB00BF037E0387055A-055F0589058A05BE05C005C305C605F305F40609060A060C060D061B061E061F066A-066D06D40700-070D07F7-07F90830-083E085E0964096509700AF00DF40E4F0E5A0E5B0F04-0F120F140F3A-0F3D0F850FD0-0FD40FD90FDA104A-104F10FB1360-13681400166D166E169B169C16EB-16ED1735173617D4-17D617D8-17DA1800-180A194419451A1E1A1F1AA0-1AA61AA8-1AAD1B5A-1B601BFC-1BFF1C3B-1C3F1C7E1C7F1CC0-1CC71CD32010-20272030-20432045-20512053-205E207D207E208D208E2329232A2768-277527C527C627E6-27EF2983-299829D8-29DB29FC29FD2CF9-2CFC2CFE2CFF2D702E00-2E2E2E30-2E3B3001-30033008-30113014-301F3030303D30A030FBA4FEA4FFA60D-A60FA673A67EA6F2-A6F7A874-A877A8CEA8CFA8F8-A8FAA92EA92FA95FA9C1-A9CDA9DEA9DFAA5C-AA5FAADEAADFAAF0AAF1ABEBFD3EFD3FFE10-FE19FE30-FE52FE54-FE61FE63FE68FE6AFE6BFF01-FF03FF05-FF0AFF0C-FF0FFF1AFF1BFF1FFF20FF3B-FF3DFF3FFF5BFF5DFF5F-FF65\",\r\n        Pd: \"002D058A05BE140018062010-20152E172E1A2E3A2E3B301C303030A0FE31FE32FE58FE63FF0D\",\r\n        Ps: \"0028005B007B0F3A0F3C169B201A201E2045207D208D23292768276A276C276E27702772277427C527E627E827EA27EC27EE2983298529872989298B298D298F299129932995299729D829DA29FC2E222E242E262E283008300A300C300E3010301430163018301A301DFD3EFE17FE35FE37FE39FE3BFE3DFE3FFE41FE43FE47FE59FE5BFE5DFF08FF3BFF5BFF5FFF62\",\r\n        Pe: \"0029005D007D0F3B0F3D169C2046207E208E232A2769276B276D276F27712773277527C627E727E927EB27ED27EF298429862988298A298C298E2990299229942996299829D929DB29FD2E232E252E272E293009300B300D300F3011301530173019301B301E301FFD3FFE18FE36FE38FE3AFE3CFE3EFE40FE42FE44FE48FE5AFE5CFE5EFF09FF3DFF5DFF60FF63\",\r\n        Pi: \"00AB2018201B201C201F20392E022E042E092E0C2E1C2E20\",\r\n        Pf: \"00BB2019201D203A2E032E052E0A2E0D2E1D2E21\",\r\n        Pc: \"005F203F20402054FE33FE34FE4D-FE4FFF3F\",\r\n        Po: \"0021-00230025-0027002A002C002E002F003A003B003F0040005C00A100A700B600B700BF037E0387055A-055F058905C005C305C605F305F40609060A060C060D061B061E061F066A-066D06D40700-070D07F7-07F90830-083E085E0964096509700AF00DF40E4F0E5A0E5B0F04-0F120F140F850FD0-0FD40FD90FDA104A-104F10FB1360-1368166D166E16EB-16ED1735173617D4-17D617D8-17DA1800-18051807-180A194419451A1E1A1F1AA0-1AA61AA8-1AAD1B5A-1B601BFC-1BFF1C3B-1C3F1C7E1C7F1CC0-1CC71CD3201620172020-20272030-2038203B-203E2041-20432047-205120532055-205E2CF9-2CFC2CFE2CFF2D702E002E012E06-2E082E0B2E0E-2E162E182E192E1B2E1E2E1F2E2A-2E2E2E30-2E393001-3003303D30FBA4FEA4FFA60D-A60FA673A67EA6F2-A6F7A874-A877A8CEA8CFA8F8-A8FAA92EA92FA95FA9C1-A9CDA9DEA9DFAA5C-AA5FAADEAADFAAF0AAF1ABEBFE10-FE16FE19FE30FE45FE46FE49-FE4CFE50-FE52FE54-FE57FE5F-FE61FE68FE6AFE6BFF01-FF03FF05-FF07FF0AFF0CFF0EFF0FFF1AFF1BFF1FFF20FF3CFF61FF64FF65\",\r\n        S: \"0024002B003C-003E005E0060007C007E00A2-00A600A800A900AC00AE-00B100B400B800D700F702C2-02C502D2-02DF02E5-02EB02ED02EF-02FF03750384038503F60482058F0606-0608060B060E060F06DE06E906FD06FE07F609F209F309FA09FB0AF10B700BF3-0BFA0C7F0D790E3F0F01-0F030F130F15-0F170F1A-0F1F0F340F360F380FBE-0FC50FC7-0FCC0FCE0FCF0FD5-0FD8109E109F1390-139917DB194019DE-19FF1B61-1B6A1B74-1B7C1FBD1FBF-1FC11FCD-1FCF1FDD-1FDF1FED-1FEF1FFD1FFE20442052207A-207C208A-208C20A0-20B9210021012103-21062108210921142116-2118211E-2123212521272129212E213A213B2140-2144214A-214D214F2190-2328232B-23F32400-24262440-244A249C-24E92500-26FF2701-27672794-27C427C7-27E527F0-29822999-29D729DC-29FB29FE-2B4C2B50-2B592CE5-2CEA2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB300430123013302030363037303E303F309B309C319031913196-319F31C0-31E33200-321E322A-324732503260-327F328A-32B032C0-32FE3300-33FF4DC0-4DFFA490-A4C6A700-A716A720A721A789A78AA828-A82BA836-A839AA77-AA79FB29FBB2-FBC1FDFCFDFDFE62FE64-FE66FE69FF04FF0BFF1C-FF1EFF3EFF40FF5CFF5EFFE0-FFE6FFE8-FFEEFFFCFFFD\",\r\n        Sm: \"002B003C-003E007C007E00AC00B100D700F703F60606-060820442052207A-207C208A-208C21182140-2144214B2190-2194219A219B21A021A321A621AE21CE21CF21D221D421F4-22FF2308-230B23202321237C239B-23B323DC-23E125B725C125F8-25FF266F27C0-27C427C7-27E527F0-27FF2900-29822999-29D729DC-29FB29FE-2AFF2B30-2B442B47-2B4CFB29FE62FE64-FE66FF0BFF1C-FF1EFF5CFF5EFFE2FFE9-FFEC\",\r\n        Sc: \"002400A2-00A5058F060B09F209F309FB0AF10BF90E3F17DB20A0-20B9A838FDFCFE69FF04FFE0FFE1FFE5FFE6\",\r\n        Sk: \"005E006000A800AF00B400B802C2-02C502D2-02DF02E5-02EB02ED02EF-02FF0375038403851FBD1FBF-1FC11FCD-1FCF1FDD-1FDF1FED-1FEF1FFD1FFE309B309CA700-A716A720A721A789A78AFBB2-FBC1FF3EFF40FFE3\",\r\n        So: \"00A600A900AE00B00482060E060F06DE06E906FD06FE07F609FA0B700BF3-0BF80BFA0C7F0D790F01-0F030F130F15-0F170F1A-0F1F0F340F360F380FBE-0FC50FC7-0FCC0FCE0FCF0FD5-0FD8109E109F1390-1399194019DE-19FF1B61-1B6A1B74-1B7C210021012103-210621082109211421162117211E-2123212521272129212E213A213B214A214C214D214F2195-2199219C-219F21A121A221A421A521A7-21AD21AF-21CD21D021D121D321D5-21F32300-2307230C-231F2322-2328232B-237B237D-239A23B4-23DB23E2-23F32400-24262440-244A249C-24E92500-25B625B8-25C025C2-25F72600-266E2670-26FF2701-27672794-27BF2800-28FF2B00-2B2F2B452B462B50-2B592CE5-2CEA2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB300430123013302030363037303E303F319031913196-319F31C0-31E33200-321E322A-324732503260-327F328A-32B032C0-32FE3300-33FF4DC0-4DFFA490-A4C6A828-A82BA836A837A839AA77-AA79FDFDFFE4FFE8FFEDFFEEFFFCFFFD\",\r\n        Z: \"002000A01680180E2000-200A20282029202F205F3000\",\r\n        Zs: \"002000A01680180E2000-200A202F205F3000\",\r\n        Zl: \"2028\",\r\n        Zp: \"2029\",\r\n        C: \"0000-001F007F-009F00AD03780379037F-0383038B038D03A20528-05300557055805600588058B-058E059005C8-05CF05EB-05EF05F5-0605061C061D06DD070E070F074B074C07B2-07BF07FB-07FF082E082F083F085C085D085F-089F08A108AD-08E308FF097809800984098D098E0991099209A909B109B3-09B509BA09BB09C509C609C909CA09CF-09D609D8-09DB09DE09E409E509FC-0A000A040A0B-0A0E0A110A120A290A310A340A370A3A0A3B0A3D0A43-0A460A490A4A0A4E-0A500A52-0A580A5D0A5F-0A650A76-0A800A840A8E0A920AA90AB10AB40ABA0ABB0AC60ACA0ACE0ACF0AD1-0ADF0AE40AE50AF2-0B000B040B0D0B0E0B110B120B290B310B340B3A0B3B0B450B460B490B4A0B4E-0B550B58-0B5B0B5E0B640B650B78-0B810B840B8B-0B8D0B910B96-0B980B9B0B9D0BA0-0BA20BA5-0BA70BAB-0BAD0BBA-0BBD0BC3-0BC50BC90BCE0BCF0BD1-0BD60BD8-0BE50BFB-0C000C040C0D0C110C290C340C3A-0C3C0C450C490C4E-0C540C570C5A-0C5F0C640C650C70-0C770C800C810C840C8D0C910CA90CB40CBA0CBB0CC50CC90CCE-0CD40CD7-0CDD0CDF0CE40CE50CF00CF3-0D010D040D0D0D110D3B0D3C0D450D490D4F-0D560D58-0D5F0D640D650D76-0D780D800D810D840D97-0D990DB20DBC0DBE0DBF0DC7-0DC90DCB-0DCE0DD50DD70DE0-0DF10DF5-0E000E3B-0E3E0E5C-0E800E830E850E860E890E8B0E8C0E8E-0E930E980EA00EA40EA60EA80EA90EAC0EBA0EBE0EBF0EC50EC70ECE0ECF0EDA0EDB0EE0-0EFF0F480F6D-0F700F980FBD0FCD0FDB-0FFF10C610C8-10CC10CE10CF1249124E124F12571259125E125F1289128E128F12B112B612B712BF12C112C612C712D7131113161317135B135C137D-137F139A-139F13F5-13FF169D-169F16F1-16FF170D1715-171F1737-173F1754-175F176D17711774-177F17DE17DF17EA-17EF17FA-17FF180F181A-181F1878-187F18AB-18AF18F6-18FF191D-191F192C-192F193C-193F1941-1943196E196F1975-197F19AC-19AF19CA-19CF19DB-19DD1A1C1A1D1A5F1A7D1A7E1A8A-1A8F1A9A-1A9F1AAE-1AFF1B4C-1B4F1B7D-1B7F1BF4-1BFB1C38-1C3A1C4A-1C4C1C80-1CBF1CC8-1CCF1CF7-1CFF1DE7-1DFB1F161F171F1E1F1F1F461F471F4E1F4F1F581F5A1F5C1F5E1F7E1F7F1FB51FC51FD41FD51FDC1FF01FF11FF51FFF200B-200F202A-202E2060-206F20722073208F209D-209F20BA-20CF20F1-20FF218A-218F23F4-23FF2427-243F244B-245F27002B4D-2B4F2B5A-2BFF2C2F2C5F2CF4-2CF82D262D28-2D2C2D2E2D2F2D68-2D6E2D71-2D7E2D97-2D9F2DA72DAF2DB72DBF2DC72DCF2DD72DDF2E3C-2E7F2E9A2EF4-2EFF2FD6-2FEF2FFC-2FFF3040309730983100-3104312E-3130318F31BB-31BF31E4-31EF321F32FF4DB6-4DBF9FCD-9FFFA48D-A48FA4C7-A4CFA62C-A63FA698-A69EA6F8-A6FFA78FA794-A79FA7AB-A7F7A82C-A82FA83A-A83FA878-A87FA8C5-A8CDA8DA-A8DFA8FC-A8FFA954-A95EA97D-A97FA9CEA9DA-A9DDA9E0-A9FFAA37-AA3FAA4EAA4FAA5AAA5BAA7C-AA7FAAC3-AADAAAF7-AB00AB07AB08AB0FAB10AB17-AB1FAB27AB2F-ABBFABEEABEFABFA-ABFFD7A4-D7AFD7C7-D7CAD7FC-F8FFFA6EFA6FFADA-FAFFFB07-FB12FB18-FB1CFB37FB3DFB3FFB42FB45FBC2-FBD2FD40-FD4FFD90FD91FDC8-FDEFFDFEFDFFFE1A-FE1FFE27-FE2FFE53FE67FE6C-FE6FFE75FEFD-FF00FFBF-FFC1FFC8FFC9FFD0FFD1FFD8FFD9FFDD-FFDFFFE7FFEF-FFFBFFFEFFFF\",\r\n        Cc: \"0000-001F007F-009F\",\r\n        Cf: \"00AD0600-060406DD070F200B-200F202A-202E2060-2064206A-206FFEFFFFF9-FFFB\",\r\n        Co: \"E000-F8FF\",\r\n        Cs: \"D800-DFFF\",\r\n        Cn: \"03780379037F-0383038B038D03A20528-05300557055805600588058B-058E059005C8-05CF05EB-05EF05F5-05FF0605061C061D070E074B074C07B2-07BF07FB-07FF082E082F083F085C085D085F-089F08A108AD-08E308FF097809800984098D098E0991099209A909B109B3-09B509BA09BB09C509C609C909CA09CF-09D609D8-09DB09DE09E409E509FC-0A000A040A0B-0A0E0A110A120A290A310A340A370A3A0A3B0A3D0A43-0A460A490A4A0A4E-0A500A52-0A580A5D0A5F-0A650A76-0A800A840A8E0A920AA90AB10AB40ABA0ABB0AC60ACA0ACE0ACF0AD1-0ADF0AE40AE50AF2-0B000B040B0D0B0E0B110B120B290B310B340B3A0B3B0B450B460B490B4A0B4E-0B550B58-0B5B0B5E0B640B650B78-0B810B840B8B-0B8D0B910B96-0B980B9B0B9D0BA0-0BA20BA5-0BA70BAB-0BAD0BBA-0BBD0BC3-0BC50BC90BCE0BCF0BD1-0BD60BD8-0BE50BFB-0C000C040C0D0C110C290C340C3A-0C3C0C450C490C4E-0C540C570C5A-0C5F0C640C650C70-0C770C800C810C840C8D0C910CA90CB40CBA0CBB0CC50CC90CCE-0CD40CD7-0CDD0CDF0CE40CE50CF00CF3-0D010D040D0D0D110D3B0D3C0D450D490D4F-0D560D58-0D5F0D640D650D76-0D780D800D810D840D97-0D990DB20DBC0DBE0DBF0DC7-0DC90DCB-0DCE0DD50DD70DE0-0DF10DF5-0E000E3B-0E3E0E5C-0E800E830E850E860E890E8B0E8C0E8E-0E930E980EA00EA40EA60EA80EA90EAC0EBA0EBE0EBF0EC50EC70ECE0ECF0EDA0EDB0EE0-0EFF0F480F6D-0F700F980FBD0FCD0FDB-0FFF10C610C8-10CC10CE10CF1249124E124F12571259125E125F1289128E128F12B112B612B712BF12C112C612C712D7131113161317135B135C137D-137F139A-139F13F5-13FF169D-169F16F1-16FF170D1715-171F1737-173F1754-175F176D17711774-177F17DE17DF17EA-17EF17FA-17FF180F181A-181F1878-187F18AB-18AF18F6-18FF191D-191F192C-192F193C-193F1941-1943196E196F1975-197F19AC-19AF19CA-19CF19DB-19DD1A1C1A1D1A5F1A7D1A7E1A8A-1A8F1A9A-1A9F1AAE-1AFF1B4C-1B4F1B7D-1B7F1BF4-1BFB1C38-1C3A1C4A-1C4C1C80-1CBF1CC8-1CCF1CF7-1CFF1DE7-1DFB1F161F171F1E1F1F1F461F471F4E1F4F1F581F5A1F5C1F5E1F7E1F7F1FB51FC51FD41FD51FDC1FF01FF11FF51FFF2065-206920722073208F209D-209F20BA-20CF20F1-20FF218A-218F23F4-23FF2427-243F244B-245F27002B4D-2B4F2B5A-2BFF2C2F2C5F2CF4-2CF82D262D28-2D2C2D2E2D2F2D68-2D6E2D71-2D7E2D97-2D9F2DA72DAF2DB72DBF2DC72DCF2DD72DDF2E3C-2E7F2E9A2EF4-2EFF2FD6-2FEF2FFC-2FFF3040309730983100-3104312E-3130318F31BB-31BF31E4-31EF321F32FF4DB6-4DBF9FCD-9FFFA48D-A48FA4C7-A4CFA62C-A63FA698-A69EA6F8-A6FFA78FA794-A79FA7AB-A7F7A82C-A82FA83A-A83FA878-A87FA8C5-A8CDA8DA-A8DFA8FC-A8FFA954-A95EA97D-A97FA9CEA9DA-A9DDA9E0-A9FFAA37-AA3FAA4EAA4FAA5AAA5BAA7C-AA7FAAC3-AADAAAF7-AB00AB07AB08AB0FAB10AB17-AB1FAB27AB2F-ABBFABEEABEFABFA-ABFFD7A4-D7AFD7C7-D7CAD7FC-D7FFFA6EFA6FFADA-FAFFFB07-FB12FB18-FB1CFB37FB3DFB3FFB42FB45FBC2-FBD2FD40-FD4FFD90FD91FDC8-FDEFFDFEFDFFFE1A-FE1FFE27-FE2FFE53FE67FE6C-FE6FFE75FEFDFEFEFF00FFBF-FFC1FFC8FFC9FFD0FFD1FFD8FFD9FFDD-FFDFFFE7FFEF-FFF8FFFEFFFF\"\r\n    }, {\r\n        //L: \"Letter\", // Included in the Unicode Base addon\r\n        Ll: \"Lowercase_Letter\",\r\n        Lu: \"Uppercase_Letter\",\r\n        Lt: \"Titlecase_Letter\",\r\n        Lm: \"Modifier_Letter\",\r\n        Lo: \"Other_Letter\",\r\n        M: \"Mark\",\r\n        Mn: \"Nonspacing_Mark\",\r\n        Mc: \"Spacing_Mark\",\r\n        Me: \"Enclosing_Mark\",\r\n        N: \"Number\",\r\n        Nd: \"Decimal_Number\",\r\n        Nl: \"Letter_Number\",\r\n        No: \"Other_Number\",\r\n        P: \"Punctuation\",\r\n        Pd: \"Dash_Punctuation\",\r\n        Ps: \"Open_Punctuation\",\r\n        Pe: \"Close_Punctuation\",\r\n        Pi: \"Initial_Punctuation\",\r\n        Pf: \"Final_Punctuation\",\r\n        Pc: \"Connector_Punctuation\",\r\n        Po: \"Other_Punctuation\",\r\n        S: \"Symbol\",\r\n        Sm: \"Math_Symbol\",\r\n        Sc: \"Currency_Symbol\",\r\n        Sk: \"Modifier_Symbol\",\r\n        So: \"Other_Symbol\",\r\n        Z: \"Separator\",\r\n        Zs: \"Space_Separator\",\r\n        Zl: \"Line_Separator\",\r\n        Zp: \"Paragraph_Separator\",\r\n        C: \"Other\",\r\n        Cc: \"Control\",\r\n        Cf: \"Format\",\r\n        Co: \"Private_Use\",\r\n        Cs: \"Surrogate\",\r\n        Cn: \"Unassigned\"\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n/***** unicode-scripts.js *****/\n\n/*!\r\n * XRegExp Unicode Scripts v1.2.0\r\n * (c) 2010-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds support for all Unicode scripts in the Basic Multilingual Plane (U+0000-U+FFFF).\r\n * E.g., `\\p{Latin}`. Token names are case insensitive, and any spaces, hyphens, and underscores\r\n * are ignored.\r\n * @requires XRegExp, XRegExp Unicode Base\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    if (!XRegExp.addUnicodePackage) {\r\n        throw new ReferenceError(\"Unicode Base must be loaded before Unicode Scripts\");\r\n    }\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n    XRegExp.addUnicodePackage({\r\n        Arabic: \"0600-06040606-060B060D-061A061E0620-063F0641-064A0656-065E066A-066F0671-06DC06DE-06FF0750-077F08A008A2-08AC08E4-08FEFB50-FBC1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFCFE70-FE74FE76-FEFC\",\r\n        Armenian: \"0531-05560559-055F0561-0587058A058FFB13-FB17\",\r\n        Balinese: \"1B00-1B4B1B50-1B7C\",\r\n        Bamum: \"A6A0-A6F7\",\r\n        Batak: \"1BC0-1BF31BFC-1BFF\",\r\n        Bengali: \"0981-09830985-098C098F09900993-09A809AA-09B009B209B6-09B909BC-09C409C709C809CB-09CE09D709DC09DD09DF-09E309E6-09FB\",\r\n        Bopomofo: \"02EA02EB3105-312D31A0-31BA\",\r\n        Braille: \"2800-28FF\",\r\n        Buginese: \"1A00-1A1B1A1E1A1F\",\r\n        Buhid: \"1740-1753\",\r\n        Canadian_Aboriginal: \"1400-167F18B0-18F5\",\r\n        Cham: \"AA00-AA36AA40-AA4DAA50-AA59AA5C-AA5F\",\r\n        Cherokee: \"13A0-13F4\",\r\n        Common: \"0000-0040005B-0060007B-00A900AB-00B900BB-00BF00D700F702B9-02DF02E5-02E902EC-02FF0374037E038503870589060C061B061F06400660-066906DD096409650E3F0FD5-0FD810FB16EB-16ED173517361802180318051CD31CE11CE9-1CEC1CEE-1CF31CF51CF62000-200B200E-2064206A-20702074-207E2080-208E20A0-20B92100-21252127-2129212C-21312133-214D214F-215F21892190-23F32400-24262440-244A2460-26FF2701-27FF2900-2B4C2B50-2B592E00-2E3B2FF0-2FFB3000-300430063008-30203030-3037303C-303F309B309C30A030FB30FC3190-319F31C0-31E33220-325F327F-32CF3358-33FF4DC0-4DFFA700-A721A788-A78AA830-A839FD3EFD3FFDFDFE10-FE19FE30-FE52FE54-FE66FE68-FE6BFEFFFF01-FF20FF3B-FF40FF5B-FF65FF70FF9EFF9FFFE0-FFE6FFE8-FFEEFFF9-FFFD\",\r\n        Coptic: \"03E2-03EF2C80-2CF32CF9-2CFF\",\r\n        Cyrillic: \"0400-04840487-05271D2B1D782DE0-2DFFA640-A697A69F\",\r\n        Devanagari: \"0900-09500953-09630966-09770979-097FA8E0-A8FB\",\r\n        Ethiopic: \"1200-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A135D-137C1380-13992D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDEAB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2E\",\r\n        Georgian: \"10A0-10C510C710CD10D0-10FA10FC-10FF2D00-2D252D272D2D\",\r\n        Glagolitic: \"2C00-2C2E2C30-2C5E\",\r\n        Greek: \"0370-03730375-0377037A-037D038403860388-038A038C038E-03A103A3-03E103F0-03FF1D26-1D2A1D5D-1D611D66-1D6A1DBF1F00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FC41FC6-1FD31FD6-1FDB1FDD-1FEF1FF2-1FF41FF6-1FFE2126\",\r\n        Gujarati: \"0A81-0A830A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABC-0AC50AC7-0AC90ACB-0ACD0AD00AE0-0AE30AE6-0AF1\",\r\n        Gurmukhi: \"0A01-0A030A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A3C0A3E-0A420A470A480A4B-0A4D0A510A59-0A5C0A5E0A66-0A75\",\r\n        Han: \"2E80-2E992E9B-2EF32F00-2FD5300530073021-30293038-303B3400-4DB54E00-9FCCF900-FA6DFA70-FAD9\",\r\n        Hangul: \"1100-11FF302E302F3131-318E3200-321E3260-327EA960-A97CAC00-D7A3D7B0-D7C6D7CB-D7FBFFA0-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\",\r\n        Hanunoo: \"1720-1734\",\r\n        Hebrew: \"0591-05C705D0-05EA05F0-05F4FB1D-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FB4F\",\r\n        Hiragana: \"3041-3096309D-309F\",\r\n        Inherited: \"0300-036F04850486064B-0655065F0670095109521CD0-1CD21CD4-1CE01CE2-1CE81CED1CF41DC0-1DE61DFC-1DFF200C200D20D0-20F0302A-302D3099309AFE00-FE0FFE20-FE26\",\r\n        Javanese: \"A980-A9CDA9CF-A9D9A9DEA9DF\",\r\n        Kannada: \"0C820C830C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBC-0CC40CC6-0CC80CCA-0CCD0CD50CD60CDE0CE0-0CE30CE6-0CEF0CF10CF2\",\r\n        Katakana: \"30A1-30FA30FD-30FF31F0-31FF32D0-32FE3300-3357FF66-FF6FFF71-FF9D\",\r\n        Kayah_Li: \"A900-A92F\",\r\n        Khmer: \"1780-17DD17E0-17E917F0-17F919E0-19FF\",\r\n        Lao: \"0E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB90EBB-0EBD0EC0-0EC40EC60EC8-0ECD0ED0-0ED90EDC-0EDF\",\r\n        Latin: \"0041-005A0061-007A00AA00BA00C0-00D600D8-00F600F8-02B802E0-02E41D00-1D251D2C-1D5C1D62-1D651D6B-1D771D79-1DBE1E00-1EFF2071207F2090-209C212A212B2132214E2160-21882C60-2C7FA722-A787A78B-A78EA790-A793A7A0-A7AAA7F8-A7FFFB00-FB06FF21-FF3AFF41-FF5A\",\r\n        Lepcha: \"1C00-1C371C3B-1C491C4D-1C4F\",\r\n        Limbu: \"1900-191C1920-192B1930-193B19401944-194F\",\r\n        Lisu: \"A4D0-A4FF\",\r\n        Malayalam: \"0D020D030D05-0D0C0D0E-0D100D12-0D3A0D3D-0D440D46-0D480D4A-0D4E0D570D60-0D630D66-0D750D79-0D7F\",\r\n        Mandaic: \"0840-085B085E\",\r\n        Meetei_Mayek: \"AAE0-AAF6ABC0-ABEDABF0-ABF9\",\r\n        Mongolian: \"1800180118041806-180E1810-18191820-18771880-18AA\",\r\n        Myanmar: \"1000-109FAA60-AA7B\",\r\n        New_Tai_Lue: \"1980-19AB19B0-19C919D0-19DA19DE19DF\",\r\n        Nko: \"07C0-07FA\",\r\n        Ogham: \"1680-169C\",\r\n        Ol_Chiki: \"1C50-1C7F\",\r\n        Oriya: \"0B01-0B030B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3C-0B440B470B480B4B-0B4D0B560B570B5C0B5D0B5F-0B630B66-0B77\",\r\n        Phags_Pa: \"A840-A877\",\r\n        Rejang: \"A930-A953A95F\",\r\n        Runic: \"16A0-16EA16EE-16F0\",\r\n        Samaritan: \"0800-082D0830-083E\",\r\n        Saurashtra: \"A880-A8C4A8CE-A8D9\",\r\n        Sinhala: \"0D820D830D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60DCA0DCF-0DD40DD60DD8-0DDF0DF2-0DF4\",\r\n        Sundanese: \"1B80-1BBF1CC0-1CC7\",\r\n        Syloti_Nagri: \"A800-A82B\",\r\n        Syriac: \"0700-070D070F-074A074D-074F\",\r\n        Tagalog: \"1700-170C170E-1714\",\r\n        Tagbanwa: \"1760-176C176E-177017721773\",\r\n        Tai_Le: \"1950-196D1970-1974\",\r\n        Tai_Tham: \"1A20-1A5E1A60-1A7C1A7F-1A891A90-1A991AA0-1AAD\",\r\n        Tai_Viet: \"AA80-AAC2AADB-AADF\",\r\n        Tamil: \"0B820B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BBE-0BC20BC6-0BC80BCA-0BCD0BD00BD70BE6-0BFA\",\r\n        Telugu: \"0C01-0C030C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D-0C440C46-0C480C4A-0C4D0C550C560C580C590C60-0C630C66-0C6F0C78-0C7F\",\r\n        Thaana: \"0780-07B1\",\r\n        Thai: \"0E01-0E3A0E40-0E5B\",\r\n        Tibetan: \"0F00-0F470F49-0F6C0F71-0F970F99-0FBC0FBE-0FCC0FCE-0FD40FD90FDA\",\r\n        Tifinagh: \"2D30-2D672D6F2D702D7F\",\r\n        Vai: \"A500-A62B\",\r\n        Yi: \"A000-A48CA490-A4C6\"\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n/***** unicode-blocks.js *****/\n\n/*!\r\n * XRegExp Unicode Blocks v1.2.0\r\n * (c) 2010-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds support for all Unicode blocks in the Basic Multilingual Plane (U+0000-U+FFFF). Unicode\r\n * blocks use the prefix \"In\". E.g., `\\p{InBasicLatin}`. Token names are case insensitive, and any\r\n * spaces, hyphens, and underscores are ignored.\r\n * @requires XRegExp, XRegExp Unicode Base\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    if (!XRegExp.addUnicodePackage) {\r\n        throw new ReferenceError(\"Unicode Base must be loaded before Unicode Blocks\");\r\n    }\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n    XRegExp.addUnicodePackage({\r\n        InBasic_Latin: \"0000-007F\",\r\n        InLatin_1_Supplement: \"0080-00FF\",\r\n        InLatin_Extended_A: \"0100-017F\",\r\n        InLatin_Extended_B: \"0180-024F\",\r\n        InIPA_Extensions: \"0250-02AF\",\r\n        InSpacing_Modifier_Letters: \"02B0-02FF\",\r\n        InCombining_Diacritical_Marks: \"0300-036F\",\r\n        InGreek_and_Coptic: \"0370-03FF\",\r\n        InCyrillic: \"0400-04FF\",\r\n        InCyrillic_Supplement: \"0500-052F\",\r\n        InArmenian: \"0530-058F\",\r\n        InHebrew: \"0590-05FF\",\r\n        InArabic: \"0600-06FF\",\r\n        InSyriac: \"0700-074F\",\r\n        InArabic_Supplement: \"0750-077F\",\r\n        InThaana: \"0780-07BF\",\r\n        InNKo: \"07C0-07FF\",\r\n        InSamaritan: \"0800-083F\",\r\n        InMandaic: \"0840-085F\",\r\n        InArabic_Extended_A: \"08A0-08FF\",\r\n        InDevanagari: \"0900-097F\",\r\n        InBengali: \"0980-09FF\",\r\n        InGurmukhi: \"0A00-0A7F\",\r\n        InGujarati: \"0A80-0AFF\",\r\n        InOriya: \"0B00-0B7F\",\r\n        InTamil: \"0B80-0BFF\",\r\n        InTelugu: \"0C00-0C7F\",\r\n        InKannada: \"0C80-0CFF\",\r\n        InMalayalam: \"0D00-0D7F\",\r\n        InSinhala: \"0D80-0DFF\",\r\n        InThai: \"0E00-0E7F\",\r\n        InLao: \"0E80-0EFF\",\r\n        InTibetan: \"0F00-0FFF\",\r\n        InMyanmar: \"1000-109F\",\r\n        InGeorgian: \"10A0-10FF\",\r\n        InHangul_Jamo: \"1100-11FF\",\r\n        InEthiopic: \"1200-137F\",\r\n        InEthiopic_Supplement: \"1380-139F\",\r\n        InCherokee: \"13A0-13FF\",\r\n        InUnified_Canadian_Aboriginal_Syllabics: \"1400-167F\",\r\n        InOgham: \"1680-169F\",\r\n        InRunic: \"16A0-16FF\",\r\n        InTagalog: \"1700-171F\",\r\n        InHanunoo: \"1720-173F\",\r\n        InBuhid: \"1740-175F\",\r\n        InTagbanwa: \"1760-177F\",\r\n        InKhmer: \"1780-17FF\",\r\n        InMongolian: \"1800-18AF\",\r\n        InUnified_Canadian_Aboriginal_Syllabics_Extended: \"18B0-18FF\",\r\n        InLimbu: \"1900-194F\",\r\n        InTai_Le: \"1950-197F\",\r\n        InNew_Tai_Lue: \"1980-19DF\",\r\n        InKhmer_Symbols: \"19E0-19FF\",\r\n        InBuginese: \"1A00-1A1F\",\r\n        InTai_Tham: \"1A20-1AAF\",\r\n        InBalinese: \"1B00-1B7F\",\r\n        InSundanese: \"1B80-1BBF\",\r\n        InBatak: \"1BC0-1BFF\",\r\n        InLepcha: \"1C00-1C4F\",\r\n        InOl_Chiki: \"1C50-1C7F\",\r\n        InSundanese_Supplement: \"1CC0-1CCF\",\r\n        InVedic_Extensions: \"1CD0-1CFF\",\r\n        InPhonetic_Extensions: \"1D00-1D7F\",\r\n        InPhonetic_Extensions_Supplement: \"1D80-1DBF\",\r\n        InCombining_Diacritical_Marks_Supplement: \"1DC0-1DFF\",\r\n        InLatin_Extended_Additional: \"1E00-1EFF\",\r\n        InGreek_Extended: \"1F00-1FFF\",\r\n        InGeneral_Punctuation: \"2000-206F\",\r\n        InSuperscripts_and_Subscripts: \"2070-209F\",\r\n        InCurrency_Symbols: \"20A0-20CF\",\r\n        InCombining_Diacritical_Marks_for_Symbols: \"20D0-20FF\",\r\n        InLetterlike_Symbols: \"2100-214F\",\r\n        InNumber_Forms: \"2150-218F\",\r\n        InArrows: \"2190-21FF\",\r\n        InMathematical_Operators: \"2200-22FF\",\r\n        InMiscellaneous_Technical: \"2300-23FF\",\r\n        InControl_Pictures: \"2400-243F\",\r\n        InOptical_Character_Recognition: \"2440-245F\",\r\n        InEnclosed_Alphanumerics: \"2460-24FF\",\r\n        InBox_Drawing: \"2500-257F\",\r\n        InBlock_Elements: \"2580-259F\",\r\n        InGeometric_Shapes: \"25A0-25FF\",\r\n        InMiscellaneous_Symbols: \"2600-26FF\",\r\n        InDingbats: \"2700-27BF\",\r\n        InMiscellaneous_Mathematical_Symbols_A: \"27C0-27EF\",\r\n        InSupplemental_Arrows_A: \"27F0-27FF\",\r\n        InBraille_Patterns: \"2800-28FF\",\r\n        InSupplemental_Arrows_B: \"2900-297F\",\r\n        InMiscellaneous_Mathematical_Symbols_B: \"2980-29FF\",\r\n        InSupplemental_Mathematical_Operators: \"2A00-2AFF\",\r\n        InMiscellaneous_Symbols_and_Arrows: \"2B00-2BFF\",\r\n        InGlagolitic: \"2C00-2C5F\",\r\n        InLatin_Extended_C: \"2C60-2C7F\",\r\n        InCoptic: \"2C80-2CFF\",\r\n        InGeorgian_Supplement: \"2D00-2D2F\",\r\n        InTifinagh: \"2D30-2D7F\",\r\n        InEthiopic_Extended: \"2D80-2DDF\",\r\n        InCyrillic_Extended_A: \"2DE0-2DFF\",\r\n        InSupplemental_Punctuation: \"2E00-2E7F\",\r\n        InCJK_Radicals_Supplement: \"2E80-2EFF\",\r\n        InKangxi_Radicals: \"2F00-2FDF\",\r\n        InIdeographic_Description_Characters: \"2FF0-2FFF\",\r\n        InCJK_Symbols_and_Punctuation: \"3000-303F\",\r\n        InHiragana: \"3040-309F\",\r\n        InKatakana: \"30A0-30FF\",\r\n        InBopomofo: \"3100-312F\",\r\n        InHangul_Compatibility_Jamo: \"3130-318F\",\r\n        InKanbun: \"3190-319F\",\r\n        InBopomofo_Extended: \"31A0-31BF\",\r\n        InCJK_Strokes: \"31C0-31EF\",\r\n        InKatakana_Phonetic_Extensions: \"31F0-31FF\",\r\n        InEnclosed_CJK_Letters_and_Months: \"3200-32FF\",\r\n        InCJK_Compatibility: \"3300-33FF\",\r\n        InCJK_Unified_Ideographs_Extension_A: \"3400-4DBF\",\r\n        InYijing_Hexagram_Symbols: \"4DC0-4DFF\",\r\n        InCJK_Unified_Ideographs: \"4E00-9FFF\",\r\n        InYi_Syllables: \"A000-A48F\",\r\n        InYi_Radicals: \"A490-A4CF\",\r\n        InLisu: \"A4D0-A4FF\",\r\n        InVai: \"A500-A63F\",\r\n        InCyrillic_Extended_B: \"A640-A69F\",\r\n        InBamum: \"A6A0-A6FF\",\r\n        InModifier_Tone_Letters: \"A700-A71F\",\r\n        InLatin_Extended_D: \"A720-A7FF\",\r\n        InSyloti_Nagri: \"A800-A82F\",\r\n        InCommon_Indic_Number_Forms: \"A830-A83F\",\r\n        InPhags_pa: \"A840-A87F\",\r\n        InSaurashtra: \"A880-A8DF\",\r\n        InDevanagari_Extended: \"A8E0-A8FF\",\r\n        InKayah_Li: \"A900-A92F\",\r\n        InRejang: \"A930-A95F\",\r\n        InHangul_Jamo_Extended_A: \"A960-A97F\",\r\n        InJavanese: \"A980-A9DF\",\r\n        InCham: \"AA00-AA5F\",\r\n        InMyanmar_Extended_A: \"AA60-AA7F\",\r\n        InTai_Viet: \"AA80-AADF\",\r\n        InMeetei_Mayek_Extensions: \"AAE0-AAFF\",\r\n        InEthiopic_Extended_A: \"AB00-AB2F\",\r\n        InMeetei_Mayek: \"ABC0-ABFF\",\r\n        InHangul_Syllables: \"AC00-D7AF\",\r\n        InHangul_Jamo_Extended_B: \"D7B0-D7FF\",\r\n        InHigh_Surrogates: \"D800-DB7F\",\r\n        InHigh_Private_Use_Surrogates: \"DB80-DBFF\",\r\n        InLow_Surrogates: \"DC00-DFFF\",\r\n        InPrivate_Use_Area: \"E000-F8FF\",\r\n        InCJK_Compatibility_Ideographs: \"F900-FAFF\",\r\n        InAlphabetic_Presentation_Forms: \"FB00-FB4F\",\r\n        InArabic_Presentation_Forms_A: \"FB50-FDFF\",\r\n        InVariation_Selectors: \"FE00-FE0F\",\r\n        InVertical_Forms: \"FE10-FE1F\",\r\n        InCombining_Half_Marks: \"FE20-FE2F\",\r\n        InCJK_Compatibility_Forms: \"FE30-FE4F\",\r\n        InSmall_Form_Variants: \"FE50-FE6F\",\r\n        InArabic_Presentation_Forms_B: \"FE70-FEFF\",\r\n        InHalfwidth_and_Fullwidth_Forms: \"FF00-FFEF\",\r\n        InSpecials: \"FFF0-FFFF\"\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n/***** unicode-properties.js *****/\n\n/*!\r\n * XRegExp Unicode Properties v1.0.0\r\n * (c) 2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Uses Unicode 6.1 <http://unicode.org/>\r\n */\r\n\r\n/**\r\n * Adds Unicode properties necessary to meet Level 1 Unicode support (detailed in UTS#18 RL1.2).\r\n * Includes code points from the Basic Multilingual Plane (U+0000-U+FFFF) only. Token names are\r\n * case insensitive, and any spaces, hyphens, and underscores are ignored.\r\n * @requires XRegExp, XRegExp Unicode Base\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    if (!XRegExp.addUnicodePackage) {\r\n        throw new ReferenceError(\"Unicode Base must be loaded before Unicode Properties\");\r\n    }\r\n\r\n    XRegExp.install(\"extensibility\");\r\n\r\n    XRegExp.addUnicodePackage({\r\n        Alphabetic: \"0041-005A0061-007A00AA00B500BA00C0-00D600D8-00F600F8-02C102C6-02D102E0-02E402EC02EE03450370-037403760377037A-037D03860388-038A038C038E-03A103A3-03F503F7-0481048A-05270531-055605590561-058705B0-05BD05BF05C105C205C405C505C705D0-05EA05F0-05F20610-061A0620-06570659-065F066E-06D306D5-06DC06E1-06E806ED-06EF06FA-06FC06FF0710-073F074D-07B107CA-07EA07F407F507FA0800-0817081A-082C0840-085808A008A2-08AC08E4-08E908F0-08FE0900-093B093D-094C094E-09500955-09630971-09770979-097F0981-09830985-098C098F09900993-09A809AA-09B009B209B6-09B909BD-09C409C709C809CB09CC09CE09D709DC09DD09DF-09E309F009F10A01-0A030A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A3E-0A420A470A480A4B0A4C0A510A59-0A5C0A5E0A70-0A750A81-0A830A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABD-0AC50AC7-0AC90ACB0ACC0AD00AE0-0AE30B01-0B030B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3D-0B440B470B480B4B0B4C0B560B570B5C0B5D0B5F-0B630B710B820B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BBE-0BC20BC6-0BC80BCA-0BCC0BD00BD70C01-0C030C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D-0C440C46-0C480C4A-0C4C0C550C560C580C590C60-0C630C820C830C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBD-0CC40CC6-0CC80CCA-0CCC0CD50CD60CDE0CE0-0CE30CF10CF20D020D030D05-0D0C0D0E-0D100D12-0D3A0D3D-0D440D46-0D480D4A-0D4C0D4E0D570D60-0D630D7A-0D7F0D820D830D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60DCF-0DD40DD60DD8-0DDF0DF20DF30E01-0E3A0E40-0E460E4D0E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB90EBB-0EBD0EC0-0EC40EC60ECD0EDC-0EDF0F000F40-0F470F49-0F6C0F71-0F810F88-0F970F99-0FBC1000-10361038103B-103F1050-10621065-1068106E-1086108E109C109D10A0-10C510C710CD10D0-10FA10FC-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A135F1380-138F13A0-13F41401-166C166F-167F1681-169A16A0-16EA16EE-16F01700-170C170E-17131720-17331740-17531760-176C176E-1770177217731780-17B317B6-17C817D717DC1820-18771880-18AA18B0-18F51900-191C1920-192B1930-19381950-196D1970-19741980-19AB19B0-19C91A00-1A1B1A20-1A5E1A61-1A741AA71B00-1B331B35-1B431B45-1B4B1B80-1BA91BAC-1BAF1BBA-1BE51BE7-1BF11C00-1C351C4D-1C4F1C5A-1C7D1CE9-1CEC1CEE-1CF31CF51CF61D00-1DBF1E00-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FBC1FBE1FC2-1FC41FC6-1FCC1FD0-1FD31FD6-1FDB1FE0-1FEC1FF2-1FF41FF6-1FFC2071207F2090-209C21022107210A-211321152119-211D212421262128212A-212D212F-2139213C-213F2145-2149214E2160-218824B6-24E92C00-2C2E2C30-2C5E2C60-2CE42CEB-2CEE2CF22CF32D00-2D252D272D2D2D30-2D672D6F2D80-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2DE0-2DFF2E2F3005-30073021-30293031-30353038-303C3041-3096309D-309F30A1-30FA30FC-30FF3105-312D3131-318E31A0-31BA31F0-31FF3400-4DB54E00-9FCCA000-A48CA4D0-A4FDA500-A60CA610-A61FA62AA62BA640-A66EA674-A67BA67F-A697A69F-A6EFA717-A71FA722-A788A78B-A78EA790-A793A7A0-A7AAA7F8-A801A803-A805A807-A80AA80C-A827A840-A873A880-A8C3A8F2-A8F7A8FBA90A-A92AA930-A952A960-A97CA980-A9B2A9B4-A9BFA9CFAA00-AA36AA40-AA4DAA60-AA76AA7AAA80-AABEAAC0AAC2AADB-AADDAAE0-AAEFAAF2-AAF5AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABEAAC00-D7A3D7B0-D7C6D7CB-D7FBF900-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1D-FB28FB2A-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBB1FBD3-FD3DFD50-FD8FFD92-FDC7FDF0-FDFBFE70-FE74FE76-FEFCFF21-FF3AFF41-FF5AFF66-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDC\",\r\n        Uppercase: \"0041-005A00C0-00D600D8-00DE01000102010401060108010A010C010E01100112011401160118011A011C011E01200122012401260128012A012C012E01300132013401360139013B013D013F0141014301450147014A014C014E01500152015401560158015A015C015E01600162016401660168016A016C016E017001720174017601780179017B017D018101820184018601870189-018B018E-0191019301940196-0198019C019D019F01A001A201A401A601A701A901AC01AE01AF01B1-01B301B501B701B801BC01C401C701CA01CD01CF01D101D301D501D701D901DB01DE01E001E201E401E601E801EA01EC01EE01F101F401F6-01F801FA01FC01FE02000202020402060208020A020C020E02100212021402160218021A021C021E02200222022402260228022A022C022E02300232023A023B023D023E02410243-02460248024A024C024E03700372037603860388-038A038C038E038F0391-03A103A3-03AB03CF03D2-03D403D803DA03DC03DE03E003E203E403E603E803EA03EC03EE03F403F703F903FA03FD-042F04600462046404660468046A046C046E04700472047404760478047A047C047E0480048A048C048E04900492049404960498049A049C049E04A004A204A404A604A804AA04AC04AE04B004B204B404B604B804BA04BC04BE04C004C104C304C504C704C904CB04CD04D004D204D404D604D804DA04DC04DE04E004E204E404E604E804EA04EC04EE04F004F204F404F604F804FA04FC04FE05000502050405060508050A050C050E05100512051405160518051A051C051E05200522052405260531-055610A0-10C510C710CD1E001E021E041E061E081E0A1E0C1E0E1E101E121E141E161E181E1A1E1C1E1E1E201E221E241E261E281E2A1E2C1E2E1E301E321E341E361E381E3A1E3C1E3E1E401E421E441E461E481E4A1E4C1E4E1E501E521E541E561E581E5A1E5C1E5E1E601E621E641E661E681E6A1E6C1E6E1E701E721E741E761E781E7A1E7C1E7E1E801E821E841E861E881E8A1E8C1E8E1E901E921E941E9E1EA01EA21EA41EA61EA81EAA1EAC1EAE1EB01EB21EB41EB61EB81EBA1EBC1EBE1EC01EC21EC41EC61EC81ECA1ECC1ECE1ED01ED21ED41ED61ED81EDA1EDC1EDE1EE01EE21EE41EE61EE81EEA1EEC1EEE1EF01EF21EF41EF61EF81EFA1EFC1EFE1F08-1F0F1F18-1F1D1F28-1F2F1F38-1F3F1F48-1F4D1F591F5B1F5D1F5F1F68-1F6F1FB8-1FBB1FC8-1FCB1FD8-1FDB1FE8-1FEC1FF8-1FFB21022107210B-210D2110-211221152119-211D212421262128212A-212D2130-2133213E213F21452160-216F218324B6-24CF2C00-2C2E2C602C62-2C642C672C692C6B2C6D-2C702C722C752C7E-2C802C822C842C862C882C8A2C8C2C8E2C902C922C942C962C982C9A2C9C2C9E2CA02CA22CA42CA62CA82CAA2CAC2CAE2CB02CB22CB42CB62CB82CBA2CBC2CBE2CC02CC22CC42CC62CC82CCA2CCC2CCE2CD02CD22CD42CD62CD82CDA2CDC2CDE2CE02CE22CEB2CED2CF2A640A642A644A646A648A64AA64CA64EA650A652A654A656A658A65AA65CA65EA660A662A664A666A668A66AA66CA680A682A684A686A688A68AA68CA68EA690A692A694A696A722A724A726A728A72AA72CA72EA732A734A736A738A73AA73CA73EA740A742A744A746A748A74AA74CA74EA750A752A754A756A758A75AA75CA75EA760A762A764A766A768A76AA76CA76EA779A77BA77DA77EA780A782A784A786A78BA78DA790A792A7A0A7A2A7A4A7A6A7A8A7AAFF21-FF3A\",\r\n        Lowercase: \"0061-007A00AA00B500BA00DF-00F600F8-00FF01010103010501070109010B010D010F01110113011501170119011B011D011F01210123012501270129012B012D012F01310133013501370138013A013C013E014001420144014601480149014B014D014F01510153015501570159015B015D015F01610163016501670169016B016D016F0171017301750177017A017C017E-0180018301850188018C018D019201950199-019B019E01A101A301A501A801AA01AB01AD01B001B401B601B901BA01BD-01BF01C601C901CC01CE01D001D201D401D601D801DA01DC01DD01DF01E101E301E501E701E901EB01ED01EF01F001F301F501F901FB01FD01FF02010203020502070209020B020D020F02110213021502170219021B021D021F02210223022502270229022B022D022F02310233-0239023C023F0240024202470249024B024D024F-02930295-02B802C002C102E0-02E40345037103730377037A-037D039003AC-03CE03D003D103D5-03D703D903DB03DD03DF03E103E303E503E703E903EB03ED03EF-03F303F503F803FB03FC0430-045F04610463046504670469046B046D046F04710473047504770479047B047D047F0481048B048D048F04910493049504970499049B049D049F04A104A304A504A704A904AB04AD04AF04B104B304B504B704B904BB04BD04BF04C204C404C604C804CA04CC04CE04CF04D104D304D504D704D904DB04DD04DF04E104E304E504E704E904EB04ED04EF04F104F304F504F704F904FB04FD04FF05010503050505070509050B050D050F05110513051505170519051B051D051F05210523052505270561-05871D00-1DBF1E011E031E051E071E091E0B1E0D1E0F1E111E131E151E171E191E1B1E1D1E1F1E211E231E251E271E291E2B1E2D1E2F1E311E331E351E371E391E3B1E3D1E3F1E411E431E451E471E491E4B1E4D1E4F1E511E531E551E571E591E5B1E5D1E5F1E611E631E651E671E691E6B1E6D1E6F1E711E731E751E771E791E7B1E7D1E7F1E811E831E851E871E891E8B1E8D1E8F1E911E931E95-1E9D1E9F1EA11EA31EA51EA71EA91EAB1EAD1EAF1EB11EB31EB51EB71EB91EBB1EBD1EBF1EC11EC31EC51EC71EC91ECB1ECD1ECF1ED11ED31ED51ED71ED91EDB1EDD1EDF1EE11EE31EE51EE71EE91EEB1EED1EEF1EF11EF31EF51EF71EF91EFB1EFD1EFF-1F071F10-1F151F20-1F271F30-1F371F40-1F451F50-1F571F60-1F671F70-1F7D1F80-1F871F90-1F971FA0-1FA71FB0-1FB41FB61FB71FBE1FC2-1FC41FC61FC71FD0-1FD31FD61FD71FE0-1FE71FF2-1FF41FF61FF72071207F2090-209C210A210E210F2113212F21342139213C213D2146-2149214E2170-217F218424D0-24E92C30-2C5E2C612C652C662C682C6A2C6C2C712C732C742C76-2C7D2C812C832C852C872C892C8B2C8D2C8F2C912C932C952C972C992C9B2C9D2C9F2CA12CA32CA52CA72CA92CAB2CAD2CAF2CB12CB32CB52CB72CB92CBB2CBD2CBF2CC12CC32CC52CC72CC92CCB2CCD2CCF2CD12CD32CD52CD72CD92CDB2CDD2CDF2CE12CE32CE42CEC2CEE2CF32D00-2D252D272D2DA641A643A645A647A649A64BA64DA64FA651A653A655A657A659A65BA65DA65FA661A663A665A667A669A66BA66DA681A683A685A687A689A68BA68DA68FA691A693A695A697A723A725A727A729A72BA72DA72F-A731A733A735A737A739A73BA73DA73FA741A743A745A747A749A74BA74DA74FA751A753A755A757A759A75BA75DA75FA761A763A765A767A769A76BA76DA76F-A778A77AA77CA77FA781A783A785A787A78CA78EA791A793A7A1A7A3A7A5A7A7A7A9A7F8-A7FAFB00-FB06FB13-FB17FF41-FF5A\",\r\n        White_Space: \"0009-000D0020008500A01680180E2000-200A20282029202F205F3000\",\r\n        Noncharacter_Code_Point: \"FDD0-FDEFFFFEFFFF\",\r\n        Default_Ignorable_Code_Point: \"00AD034F115F116017B417B5180B-180D200B-200F202A-202E2060-206F3164FE00-FE0FFEFFFFA0FFF0-FFF8\",\r\n        // \\p{Any} matches a code unit. To match any code point via surrogate pairs, use (?:[\\0-\\uD7FF\\uDC00-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF])\r\n        Any: \"0000-FFFF\", // \\p{^Any} compiles to [^\\u0000-\\uFFFF]; [\\p{^Any}] to []\r\n        Ascii: \"0000-007F\",\r\n        // \\p{Assigned} is equivalent to \\p{^Cn}\r\n        //Assigned: XRegExp(\"[\\\\p{^Cn}]\").source.replace(/[[\\]]|\\\\u/g, \"\") // Negation inside a character class triggers inversion\r\n        Assigned: \"0000-0377037A-037E0384-038A038C038E-03A103A3-05270531-05560559-055F0561-05870589058A058F0591-05C705D0-05EA05F0-05F40600-06040606-061B061E-070D070F-074A074D-07B107C0-07FA0800-082D0830-083E0840-085B085E08A008A2-08AC08E4-08FE0900-09770979-097F0981-09830985-098C098F09900993-09A809AA-09B009B209B6-09B909BC-09C409C709C809CB-09CE09D709DC09DD09DF-09E309E6-09FB0A01-0A030A05-0A0A0A0F0A100A13-0A280A2A-0A300A320A330A350A360A380A390A3C0A3E-0A420A470A480A4B-0A4D0A510A59-0A5C0A5E0A66-0A750A81-0A830A85-0A8D0A8F-0A910A93-0AA80AAA-0AB00AB20AB30AB5-0AB90ABC-0AC50AC7-0AC90ACB-0ACD0AD00AE0-0AE30AE6-0AF10B01-0B030B05-0B0C0B0F0B100B13-0B280B2A-0B300B320B330B35-0B390B3C-0B440B470B480B4B-0B4D0B560B570B5C0B5D0B5F-0B630B66-0B770B820B830B85-0B8A0B8E-0B900B92-0B950B990B9A0B9C0B9E0B9F0BA30BA40BA8-0BAA0BAE-0BB90BBE-0BC20BC6-0BC80BCA-0BCD0BD00BD70BE6-0BFA0C01-0C030C05-0C0C0C0E-0C100C12-0C280C2A-0C330C35-0C390C3D-0C440C46-0C480C4A-0C4D0C550C560C580C590C60-0C630C66-0C6F0C78-0C7F0C820C830C85-0C8C0C8E-0C900C92-0CA80CAA-0CB30CB5-0CB90CBC-0CC40CC6-0CC80CCA-0CCD0CD50CD60CDE0CE0-0CE30CE6-0CEF0CF10CF20D020D030D05-0D0C0D0E-0D100D12-0D3A0D3D-0D440D46-0D480D4A-0D4E0D570D60-0D630D66-0D750D79-0D7F0D820D830D85-0D960D9A-0DB10DB3-0DBB0DBD0DC0-0DC60DCA0DCF-0DD40DD60DD8-0DDF0DF2-0DF40E01-0E3A0E3F-0E5B0E810E820E840E870E880E8A0E8D0E94-0E970E99-0E9F0EA1-0EA30EA50EA70EAA0EAB0EAD-0EB90EBB-0EBD0EC0-0EC40EC60EC8-0ECD0ED0-0ED90EDC-0EDF0F00-0F470F49-0F6C0F71-0F970F99-0FBC0FBE-0FCC0FCE-0FDA1000-10C510C710CD10D0-1248124A-124D1250-12561258125A-125D1260-1288128A-128D1290-12B012B2-12B512B8-12BE12C012C2-12C512C8-12D612D8-13101312-13151318-135A135D-137C1380-139913A0-13F41400-169C16A0-16F01700-170C170E-17141720-17361740-17531760-176C176E-1770177217731780-17DD17E0-17E917F0-17F91800-180E1810-18191820-18771880-18AA18B0-18F51900-191C1920-192B1930-193B19401944-196D1970-19741980-19AB19B0-19C919D0-19DA19DE-1A1B1A1E-1A5E1A60-1A7C1A7F-1A891A90-1A991AA0-1AAD1B00-1B4B1B50-1B7C1B80-1BF31BFC-1C371C3B-1C491C4D-1C7F1CC0-1CC71CD0-1CF61D00-1DE61DFC-1F151F18-1F1D1F20-1F451F48-1F4D1F50-1F571F591F5B1F5D1F5F-1F7D1F80-1FB41FB6-1FC41FC6-1FD31FD6-1FDB1FDD-1FEF1FF2-1FF41FF6-1FFE2000-2064206A-20712074-208E2090-209C20A0-20B920D0-20F02100-21892190-23F32400-24262440-244A2460-26FF2701-2B4C2B50-2B592C00-2C2E2C30-2C5E2C60-2CF32CF9-2D252D272D2D2D30-2D672D6F2D702D7F-2D962DA0-2DA62DA8-2DAE2DB0-2DB62DB8-2DBE2DC0-2DC62DC8-2DCE2DD0-2DD62DD8-2DDE2DE0-2E3B2E80-2E992E9B-2EF32F00-2FD52FF0-2FFB3000-303F3041-30963099-30FF3105-312D3131-318E3190-31BA31C0-31E331F0-321E3220-32FE3300-4DB54DC0-9FCCA000-A48CA490-A4C6A4D0-A62BA640-A697A69F-A6F7A700-A78EA790-A793A7A0-A7AAA7F8-A82BA830-A839A840-A877A880-A8C4A8CE-A8D9A8E0-A8FBA900-A953A95F-A97CA980-A9CDA9CF-A9D9A9DEA9DFAA00-AA36AA40-AA4DAA50-AA59AA5C-AA7BAA80-AAC2AADB-AAF6AB01-AB06AB09-AB0EAB11-AB16AB20-AB26AB28-AB2EABC0-ABEDABF0-ABF9AC00-D7A3D7B0-D7C6D7CB-D7FBD800-FA6DFA70-FAD9FB00-FB06FB13-FB17FB1D-FB36FB38-FB3CFB3EFB40FB41FB43FB44FB46-FBC1FBD3-FD3FFD50-FD8FFD92-FDC7FDF0-FDFDFE00-FE19FE20-FE26FE30-FE52FE54-FE66FE68-FE6BFE70-FE74FE76-FEFCFEFFFF01-FFBEFFC2-FFC7FFCA-FFCFFFD2-FFD7FFDA-FFDCFFE0-FFE6FFE8-FFEEFFF9-FFFD\"\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n/***** matchrecursive.js *****/\n\n/*!\r\n * XRegExp.matchRecursive v0.2.0\r\n * (c) 2009-2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n */\r\n\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n/**\r\n * Returns a match detail object composed of the provided values.\r\n * @private\r\n */\r\n    function row(value, name, start, end) {\r\n        return {value:value, name:name, start:start, end:end};\r\n    }\r\n\r\n/**\r\n * Returns an array of match strings between outermost left and right delimiters, or an array of\r\n * objects with detailed match parts and position data. An error is thrown if delimiters are\r\n * unbalanced within the data.\r\n * @memberOf XRegExp\r\n * @param {String} str String to search.\r\n * @param {String} left Left delimiter as an XRegExp pattern.\r\n * @param {String} right Right delimiter as an XRegExp pattern.\r\n * @param {String} [flags] Flags for the left and right delimiters. Use any of: `gimnsxy`.\r\n * @param {Object} [options] Lets you specify `valueNames` and `escapeChar` options.\r\n * @returns {Array} Array of matches, or an empty array.\r\n * @example\r\n *\r\n * // Basic usage\r\n * var str = '(t((e))s)t()(ing)';\r\n * XRegExp.matchRecursive(str, '\\\\(', '\\\\)', 'g');\r\n * // -> ['t((e))s', '', 'ing']\r\n *\r\n * // Extended information mode with valueNames\r\n * str = 'Here is <div> <div>an</div></div> example';\r\n * XRegExp.matchRecursive(str, '<div\\\\s*>', '</div>', 'gi', {\r\n *   valueNames: ['between', 'left', 'match', 'right']\r\n * });\r\n * // -> [\r\n * // {name: 'between', value: 'Here is ',       start: 0,  end: 8},\r\n * // {name: 'left',    value: '<div>',          start: 8,  end: 13},\r\n * // {name: 'match',   value: ' <div>an</div>', start: 13, end: 27},\r\n * // {name: 'right',   value: '</div>',         start: 27, end: 33},\r\n * // {name: 'between', value: ' example',       start: 33, end: 41}\r\n * // ]\r\n *\r\n * // Omitting unneeded parts with null valueNames, and using escapeChar\r\n * str = '...{1}\\\\{{function(x,y){return y+x;}}';\r\n * XRegExp.matchRecursive(str, '{', '}', 'g', {\r\n *   valueNames: ['literal', null, 'value', null],\r\n *   escapeChar: '\\\\'\r\n * });\r\n * // -> [\r\n * // {name: 'literal', value: '...', start: 0, end: 3},\r\n * // {name: 'value',   value: '1',   start: 4, end: 5},\r\n * // {name: 'literal', value: '\\\\{', start: 6, end: 8},\r\n * // {name: 'value',   value: 'function(x,y){return y+x;}', start: 9, end: 35}\r\n * // ]\r\n *\r\n * // Sticky mode via flag y\r\n * str = '<1><<<2>>><3>4<5>';\r\n * XRegExp.matchRecursive(str, '<', '>', 'gy');\r\n * // -> ['1', '<<2>>', '3']\r\n */\r\n    XRegExp.matchRecursive = function (str, left, right, flags, options) {\r\n        flags = flags || \"\";\r\n        options = options || {};\r\n        var global = flags.indexOf(\"g\") > -1,\r\n            sticky = flags.indexOf(\"y\") > -1,\r\n            basicFlags = flags.replace(/y/g, \"\"), // Flag y controlled internally\r\n            escapeChar = options.escapeChar,\r\n            vN = options.valueNames,\r\n            output = [],\r\n            openTokens = 0,\r\n            delimStart = 0,\r\n            delimEnd = 0,\r\n            lastOuterEnd = 0,\r\n            outerStart,\r\n            innerStart,\r\n            leftMatch,\r\n            rightMatch,\r\n            esc;\r\n        left = XRegExp(left, basicFlags);\r\n        right = XRegExp(right, basicFlags);\r\n\r\n        if (escapeChar) {\r\n            if (escapeChar.length > 1) {\r\n                throw new SyntaxError(\"can't use more than one escape character\");\r\n            }\r\n            escapeChar = XRegExp.escape(escapeChar);\r\n            // Using XRegExp.union safely rewrites backreferences in `left` and `right`\r\n            esc = new RegExp(\r\n                \"(?:\" + escapeChar + \"[\\\\S\\\\s]|(?:(?!\" + XRegExp.union([left, right]).source + \")[^\" + escapeChar + \"])+)+\",\r\n                flags.replace(/[^im]+/g, \"\") // Flags gy not needed here; flags nsx handled by XRegExp\r\n            );\r\n        }\r\n\r\n        while (true) {\r\n            // If using an escape character, advance to the delimiter's next starting position,\r\n            // skipping any escaped characters in between\r\n            if (escapeChar) {\r\n                delimEnd += (XRegExp.exec(str, esc, delimEnd, \"sticky\") || [\"\"])[0].length;\r\n            }\r\n            leftMatch = XRegExp.exec(str, left, delimEnd);\r\n            rightMatch = XRegExp.exec(str, right, delimEnd);\r\n            // Keep the leftmost match only\r\n            if (leftMatch && rightMatch) {\r\n                if (leftMatch.index <= rightMatch.index) {\r\n                    rightMatch = null;\r\n                } else {\r\n                    leftMatch = null;\r\n                }\r\n            }\r\n            /* Paths (LM:leftMatch, RM:rightMatch, OT:openTokens):\r\n            LM | RM | OT | Result\r\n            1  | 0  | 1  | loop\r\n            1  | 0  | 0  | loop\r\n            0  | 1  | 1  | loop\r\n            0  | 1  | 0  | throw\r\n            0  | 0  | 1  | throw\r\n            0  | 0  | 0  | break\r\n            * Doesn't include the sticky mode special case\r\n            * Loop ends after the first completed match if `!global` */\r\n            if (leftMatch || rightMatch) {\r\n                delimStart = (leftMatch || rightMatch).index;\r\n                delimEnd = delimStart + (leftMatch || rightMatch)[0].length;\r\n            } else if (!openTokens) {\r\n                break;\r\n            }\r\n            if (sticky && !openTokens && delimStart > lastOuterEnd) {\r\n                break;\r\n            }\r\n            if (leftMatch) {\r\n                if (!openTokens) {\r\n                    outerStart = delimStart;\r\n                    innerStart = delimEnd;\r\n                }\r\n                ++openTokens;\r\n            } else if (rightMatch && openTokens) {\r\n                if (!--openTokens) {\r\n                    if (vN) {\r\n                        if (vN[0] && outerStart > lastOuterEnd) {\r\n                            output.push(row(vN[0], str.slice(lastOuterEnd, outerStart), lastOuterEnd, outerStart));\r\n                        }\r\n                        if (vN[1]) {\r\n                            output.push(row(vN[1], str.slice(outerStart, innerStart), outerStart, innerStart));\r\n                        }\r\n                        if (vN[2]) {\r\n                            output.push(row(vN[2], str.slice(innerStart, delimStart), innerStart, delimStart));\r\n                        }\r\n                        if (vN[3]) {\r\n                            output.push(row(vN[3], str.slice(delimStart, delimEnd), delimStart, delimEnd));\r\n                        }\r\n                    } else {\r\n                        output.push(str.slice(innerStart, delimStart));\r\n                    }\r\n                    lastOuterEnd = delimEnd;\r\n                    if (!global) {\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                throw new Error(\"string contains unbalanced delimiters\");\r\n            }\r\n            // If the delimiter matched an empty string, avoid an infinite loop\r\n            if (delimStart === delimEnd) {\r\n                ++delimEnd;\r\n            }\r\n        }\r\n\r\n        if (global && !sticky && vN && vN[0] && str.length > lastOuterEnd) {\r\n            output.push(row(vN[0], str.slice(lastOuterEnd), lastOuterEnd, str.length));\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n}(XRegExp));\r\n\r\n\n/***** build.js *****/\n\n/*!\r\n * XRegExp.build v0.1.0\r\n * (c) 2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n * Inspired by RegExp.create by Lea Verou <http://lea.verou.me/>\r\n */\r\n\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n    var subparts = /(\\()(?!\\?)|\\\\([1-9]\\d*)|\\\\[\\s\\S]|\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*]/g,\r\n        parts = XRegExp.union([/\\({{([\\w$]+)}}\\)|{{([\\w$]+)}}/, subparts], \"g\");\r\n\r\n/**\r\n * Strips a leading `^` and trailing unescaped `$`, if both are present.\r\n * @private\r\n * @param {String} pattern Pattern to process.\r\n * @returns {String} Pattern with edge anchors removed.\r\n */\r\n    function deanchor(pattern) {\r\n        var startAnchor = /^(?:\\(\\?:\\))?\\^/, // Leading `^` or `(?:)^` (handles /x cruft)\r\n            endAnchor = /\\$(?:\\(\\?:\\))?$/; // Trailing `$` or `$(?:)` (handles /x cruft)\r\n        if (endAnchor.test(pattern.replace(/\\\\[\\s\\S]/g, \"\"))) { // Ensure trailing `$` isn't escaped\r\n            return pattern.replace(startAnchor, \"\").replace(endAnchor, \"\");\r\n        }\r\n        return pattern;\r\n    }\r\n\r\n/**\r\n * Converts the provided value to an XRegExp.\r\n * @private\r\n * @param {String|RegExp} value Value to convert.\r\n * @returns {RegExp} XRegExp object with XRegExp syntax applied.\r\n */\r\n    function asXRegExp(value) {\r\n        return XRegExp.isRegExp(value) ?\r\n                (value.xregexp && !value.xregexp.isNative ? value : XRegExp(value.source)) :\r\n                XRegExp(value);\r\n    }\r\n\r\n/**\r\n * Builds regexes using named subpatterns, for readability and pattern reuse. Backreferences in the\r\n * outer pattern and provided subpatterns are automatically renumbered to work correctly. Native\r\n * flags used by provided subpatterns are ignored in favor of the `flags` argument.\r\n * @memberOf XRegExp\r\n * @param {String} pattern XRegExp pattern using `{{name}}` for embedded subpatterns. Allows\r\n *   `({{name}})` as shorthand for `(?<name>{{name}})`. Patterns cannot be embedded within\r\n *   character classes.\r\n * @param {Object} subs Lookup object for named subpatterns. Values can be strings or regexes. A\r\n *   leading `^` and trailing unescaped `$` are stripped from subpatterns, if both are present.\r\n * @param {String} [flags] Any combination of XRegExp flags.\r\n * @returns {RegExp} Regex with interpolated subpatterns.\r\n * @example\r\n *\r\n * var time = XRegExp.build('(?x)^ {{hours}} ({{minutes}}) $', {\r\n *   hours: XRegExp.build('{{h12}} : | {{h24}}', {\r\n *     h12: /1[0-2]|0?[1-9]/,\r\n *     h24: /2[0-3]|[01][0-9]/\r\n *   }, 'x'),\r\n *   minutes: /^[0-5][0-9]$/\r\n * });\r\n * time.test('10:59'); // -> true\r\n * XRegExp.exec('10:59', time).minutes; // -> '59'\r\n */\r\n    XRegExp.build = function (pattern, subs, flags) {\r\n        var inlineFlags = /^\\(\\?([\\w$]+)\\)/.exec(pattern),\r\n            data = {},\r\n            numCaps = 0, // Caps is short for captures\r\n            numPriorCaps,\r\n            numOuterCaps = 0,\r\n            outerCapsMap = [0],\r\n            outerCapNames,\r\n            sub,\r\n            p;\r\n\r\n        // Add flags within a leading mode modifier to the overall pattern's flags\r\n        if (inlineFlags) {\r\n            flags = flags || \"\";\r\n            inlineFlags[1].replace(/./g, function (flag) {\r\n                flags += (flags.indexOf(flag) > -1 ? \"\" : flag); // Don't add duplicates\r\n            });\r\n        }\r\n\r\n        for (p in subs) {\r\n            if (subs.hasOwnProperty(p)) {\r\n                // Passing to XRegExp enables entended syntax for subpatterns provided as strings\r\n                // and ensures independent validity, lest an unescaped `(`, `)`, `[`, or trailing\r\n                // `\\` breaks the `(?:)` wrapper. For subpatterns provided as regexes, it dies on\r\n                // octals and adds the `xregexp` property, for simplicity\r\n                sub = asXRegExp(subs[p]);\r\n                // Deanchoring allows embedding independently useful anchored regexes. If you\r\n                // really need to keep your anchors, double them (i.e., `^^...$$`)\r\n                data[p] = {pattern: deanchor(sub.source), names: sub.xregexp.captureNames || []};\r\n            }\r\n        }\r\n\r\n        // Passing to XRegExp dies on octals and ensures the outer pattern is independently valid;\r\n        // helps keep this simple. Named captures will be put back\r\n        pattern = asXRegExp(pattern);\r\n        outerCapNames = pattern.xregexp.captureNames || [];\r\n        pattern = pattern.source.replace(parts, function ($0, $1, $2, $3, $4) {\r\n            var subName = $1 || $2, capName, intro;\r\n            if (subName) { // Named subpattern\r\n                if (!data.hasOwnProperty(subName)) {\r\n                    throw new ReferenceError(\"undefined property \" + $0);\r\n                }\r\n                if ($1) { // Named subpattern was wrapped in a capturing group\r\n                    capName = outerCapNames[numOuterCaps];\r\n                    outerCapsMap[++numOuterCaps] = ++numCaps;\r\n                    // If it's a named group, preserve the name. Otherwise, use the subpattern name\r\n                    // as the capture name\r\n                    intro = \"(?<\" + (capName || subName) + \">\";\r\n                } else {\r\n                    intro = \"(?:\";\r\n                }\r\n                numPriorCaps = numCaps;\r\n                return intro + data[subName].pattern.replace(subparts, function (match, paren, backref) {\r\n                    if (paren) { // Capturing group\r\n                        capName = data[subName].names[numCaps - numPriorCaps];\r\n                        ++numCaps;\r\n                        if (capName) { // If the current capture has a name, preserve the name\r\n                            return \"(?<\" + capName + \">\";\r\n                        }\r\n                    } else if (backref) { // Backreference\r\n                        return \"\\\\\" + (+backref + numPriorCaps); // Rewrite the backreference\r\n                    }\r\n                    return match;\r\n                }) + \")\";\r\n            }\r\n            if ($3) { // Capturing group\r\n                capName = outerCapNames[numOuterCaps];\r\n                outerCapsMap[++numOuterCaps] = ++numCaps;\r\n                if (capName) { // If the current capture has a name, preserve the name\r\n                    return \"(?<\" + capName + \">\";\r\n                }\r\n            } else if ($4) { // Backreference\r\n                return \"\\\\\" + outerCapsMap[+$4]; // Rewrite the backreference\r\n            }\r\n            return $0;\r\n        });\r\n\r\n        return XRegExp(pattern, flags);\r\n    };\r\n\r\n}(XRegExp));\r\n\r\n\n/***** prototypes.js *****/\n\n/*!\r\n * XRegExp Prototype Methods v1.0.0\r\n * (c) 2012 Steven Levithan <http://xregexp.com/>\r\n * MIT License\r\n */\r\n\r\n/**\r\n * Adds a collection of methods to `XRegExp.prototype`. RegExp objects copied by XRegExp are also\r\n * augmented with any `XRegExp.prototype` methods. Hence, the following work equivalently:\r\n *\r\n * XRegExp('[a-z]', 'ig').xexec('abc');\r\n * XRegExp(/[a-z]/ig).xexec('abc');\r\n * XRegExp.globalize(/[a-z]/i).xexec('abc');\r\n */\r\n(function (XRegExp) {\r\n    \"use strict\";\r\n\r\n/**\r\n * Copy properties of `b` to `a`.\r\n * @private\r\n * @param {Object} a Object that will receive new properties.\r\n * @param {Object} b Object whose properties will be copied.\r\n */\r\n    function extend(a, b) {\r\n        for (var p in b) {\r\n            if (b.hasOwnProperty(p)) {\r\n                a[p] = b[p];\r\n            }\r\n        }\r\n        //return a;\r\n    }\r\n\r\n    extend(XRegExp.prototype, {\r\n\r\n/**\r\n * Implicitly calls the regex's `test` method with the first value in the provided arguments array.\r\n * @memberOf XRegExp.prototype\r\n * @param {*} context Ignored. Accepted only for congruity with `Function.prototype.apply`.\r\n * @param {Array} args Array with the string to search as its first value.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n * @example\r\n *\r\n * XRegExp('[a-z]').apply(null, ['abc']); // -> true\r\n */\r\n        apply: function (context, args) {\r\n            return this.test(args[0]);\r\n        },\r\n\r\n/**\r\n * Implicitly calls the regex's `test` method with the provided string.\r\n * @memberOf XRegExp.prototype\r\n * @param {*} context Ignored. Accepted only for congruity with `Function.prototype.call`.\r\n * @param {String} str String to search.\r\n * @returns {Boolean} Whether the regex matched the provided value.\r\n * @example\r\n *\r\n * XRegExp('[a-z]').call(null, 'abc'); // -> true\r\n */\r\n        call: function (context, str) {\r\n            return this.test(str);\r\n        },\r\n\r\n/**\r\n * Implicitly calls {@link #XRegExp.forEach}.\r\n * @memberOf XRegExp.prototype\r\n * @example\r\n *\r\n * XRegExp('\\\\d').forEach('1a2345', function (match, i) {\r\n *   if (i % 2) this.push(+match[0]);\r\n * }, []);\r\n * // -> [2, 4]\r\n */\r\n        forEach: function (str, callback, context) {\r\n            return XRegExp.forEach(str, this, callback, context);\r\n        },\r\n\r\n/**\r\n * Implicitly calls {@link #XRegExp.globalize}.\r\n * @memberOf XRegExp.prototype\r\n * @example\r\n *\r\n * var globalCopy = XRegExp('regex').globalize();\r\n * globalCopy.global; // -> true\r\n */\r\n        globalize: function () {\r\n            return XRegExp.globalize(this);\r\n        },\r\n\r\n/**\r\n * Implicitly calls {@link #XRegExp.exec}.\r\n * @memberOf XRegExp.prototype\r\n * @example\r\n *\r\n * var match = XRegExp('U\\\\+(?<hex>[0-9A-F]{4})').xexec('U+2620');\r\n * match.hex; // -> '2620'\r\n */\r\n        xexec: function (str, pos, sticky) {\r\n            return XRegExp.exec(str, this, pos, sticky);\r\n        },\r\n\r\n/**\r\n * Implicitly calls {@link #XRegExp.test}.\r\n * @memberOf XRegExp.prototype\r\n * @example\r\n *\r\n * XRegExp('c').xtest('abc'); // -> true\r\n */\r\n        xtest: function (str, pos, sticky) {\r\n            return XRegExp.test(str, this, pos, sticky);\r\n        }\r\n\r\n    });\r\n\r\n}(XRegExp));\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/xregexp/xregexp-all.js\n// module id = 27\n// module chunks = 0","import path from 'path';\r\nimport i18n from 'i18n';\r\n\r\nexport default {\r\n  i18n: () => {\r\n    i18n.configure({\r\n      locales: ['en'],\r\n      directory: path.resolve(__dirname, '../../', 'locales'),\r\n      objectNotation: true,\r\n      logWarnFn(msg) {\r\n        console.warn('warn', msg);\r\n      }\r\n    });\r\n    i18n.setLocale('en');\r\n  }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// src/config.js","import ref from 'ref';\r\nimport StructType from 'ref-struct';\r\nimport Enum from 'enum';\r\n\r\nexport const u8 = ref.types.uint8;\r\nexport const u32 = ref.types.uint32;\r\nexport const usize = ref.types.size_t;\r\nexport const bool = ref.types.bool;\r\nexport const int32 = ref.types.int32;\r\nexport const Void = ref.types.void;\r\nexport const Null = ref.NULL;\r\nexport const CString = ref.types.CString;\r\n\r\n// Pointer Types\r\nexport const voidPointer = ref.refType(Void);\r\nexport const AppHandlePointer = ref.refType(voidPointer);\r\n\r\nexport const AppExchangeInfo = StructType({\r\n  id: CString,\r\n  scope: CString,\r\n  name: CString,\r\n  vendor: CString\r\n});\r\n\r\nexport const Permission = new Enum({\r\n  Read: 0,\r\n  Insert: 1,\r\n  Update: 2,\r\n  Delete: 3,\r\n  ManagePermissions: 4\r\n});\r\n\r\nexport const ContainerPermissions = StructType({\r\n  cont_name: CString,\r\n  access: ref.refType(Permission),\r\n  access_len: usize,\r\n  access_cap: usize\r\n});\r\n\r\nexport const RegisteredApp = StructType({\r\n  app_info: AppExchangeInfo,\r\n  containers: ref.refType(ContainerPermissions),\r\n  containers_len: usize,\r\n  containers_cap: usize\r\n});\r\n\r\nexport const RegisteredAppPointer = ref.refType(RegisteredApp);\r\n\r\nexport const AuthReq = StructType({\r\n  app: AppExchangeInfo,\r\n  app_container: bool,\r\n  containers: ref.refType(ContainerPermissions),\r\n  containers_len: usize,\r\n  containers_cap: usize\r\n});\r\n\r\nexport const AuthReqPointer = ref.refType(AuthReq);\r\n\r\nexport const ContainersReq = StructType({\r\n  app: AppExchangeInfo,\r\n  containers: ref.refType(ContainerPermissions),\r\n  containers_len: usize,\r\n  containers_cap: usize\r\n});\r\n\r\nexport const FfiResult = StructType({\r\n  error_code: int32,\r\n  description: CString\r\n});\r\n\r\nexport const ContainersReqPointer = ref.refType(ContainersReq);\r\n\r\nexport const allocAppHandlePointer = () => (ref.alloc(AppHandlePointer));\r\n\r\nexport const allocCString = (str) => (ref.allocCString(str));\r\n\r\nexport const allocAuthReq = (req) => (ref.alloc(AuthReq, req));\r\n\r\nexport const allocContainerReq = (req) => (ref.alloc(ContainersReq, req));\r\n\n\n\n// WEBPACK FOOTER //\n// src/ffi/refs/types.js","module.exports = require(\"ref\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ref\"\n// module id = 30\n// module chunks = 0","\n/**\n * An interface for modeling and instantiating C-style data structures. This is\n * not a constructor per-say, but a constructor generator. It takes an array of\n * tuples, the left side being the type, and the right side being a field name.\n * The order should be the same order it would appear in the C-style struct\n * definition. It returns a function that can be used to construct an object that\n * reads and writes to the data structure using properties specified by the\n * initial field list.\n *\n * The only verboten field names are \"ref\", which is used used on struct\n * instances as a function to retrieve the backing Buffer instance of the\n * struct, and \"ref.buffer\" which contains the backing Buffer instance.\n *\n *\n * Example:\n *\n * ``` javascript\n * var ref = require('ref')\n * var Struct = require('ref-struct')\n *\n * // create the `char *` type\n * var charPtr = ref.refType(ref.types.char)\n * var int = ref.types.int\n *\n * // create the struct \"type\" / constructor\n * var PasswordEntry = Struct({\n *     'username': 'string'\n *   , 'password': 'string'\n *   , 'salt':     int\n * })\n *\n * // create an instance of the struct, backed a Buffer instance\n * var pwd = new PasswordEntry()\n * pwd.username = 'ricky'\n * pwd.password = 'rbransonlovesnode.js'\n * pwd.salt = (Math.random() * 1000000) | 0\n *\n * pwd.username // → 'ricky'\n * pwd.password // → 'rbransonlovesnode.js'\n * pwd.salt     // → 820088\n * ```\n */\n\n/**\n * Module dependencies.\n */\n\nvar ref = require('ref')\nvar util = require('util')\nvar assert = require('assert')\nvar debug = require('debug')('ref:struct')\n\n/**\n * Module exports.\n */\n\nmodule.exports = Struct\n\n/**\n * The Struct \"type\" meta-constructor.\n */\n\nfunction Struct () {\n  debug('defining new struct \"type\"')\n\n  /**\n   * This is the \"constructor\" of the Struct type that gets returned.\n   *\n   * Invoke it with `new` to create a new Buffer instance backing the struct.\n   * Pass it an existing Buffer instance to use that as the backing buffer.\n   * Pass in an Object containing the struct fields to auto-populate the\n   * struct with the data.\n   */\n\n  function StructType (arg, data) {\n    if (!(this instanceof StructType)) {\n      return new StructType(arg, data)\n    }\n    debug('creating new struct instance')\n    var store\n    if (Buffer.isBuffer(arg)) {\n      debug('using passed-in Buffer instance to back the struct', arg)\n      assert(arg.length >= StructType.size, 'Buffer instance must be at least ' +\n          StructType.size + ' bytes to back this struct type')\n      store = arg\n      arg = data\n    } else {\n      debug('creating new Buffer instance to back the struct (size: %d)', StructType.size)\n      store = new Buffer(StructType.size)\n    }\n\n    // set the backing Buffer store\n    store.type = StructType\n    this['ref.buffer'] = store\n\n    if (arg) {\n      for (var key in arg) {\n        // hopefully hit the struct setters\n        this[key] = arg[key]\n      }\n    }\n    StructType._instanceCreated = true\n  }\n\n  // make instances inherit from the `proto`\n  StructType.prototype = Object.create(proto, {\n    constructor: {\n        value: StructType\n      , enumerable: false\n      , writable: true\n      , configurable: true\n    }\n  })\n\n  StructType.defineProperty = defineProperty\n  StructType.toString = toString\n  StructType.fields = {}\n\n  var opt = (arguments.length > 0 && arguments[1]) ? arguments[1] : {};\n  // Setup the ref \"type\" interface. The constructor doubles as the \"type\" object\n  StructType.size = 0\n  StructType.alignment = 0\n  StructType.indirection = 1\n  StructType.isPacked = opt.packed ? Boolean(opt.packed) : false\n  StructType.get = get\n  StructType.set = set\n\n  // Read the fields list and apply all the fields to the struct\n  // TODO: Better arg handling... (maybe look at ES6 binary data API?)\n  var arg = arguments[0]\n  if (Array.isArray(arg)) {\n    // legacy API\n    arg.forEach(function (a) {\n      var type = a[0]\n      var name = a[1]\n      StructType.defineProperty(name, type)\n    })\n  } else if (typeof arg === 'object') {\n    Object.keys(arg).forEach(function (name) {\n      var type = arg[name]\n      StructType.defineProperty(name, type)\n    })\n  }\n\n  return StructType\n}\n\n/**\n * The \"get\" function of the Struct \"type\" interface\n */\n\nfunction get (buffer, offset) {\n  debug('Struct \"type\" getter for buffer at offset', buffer, offset)\n  if (offset > 0) {\n    buffer = buffer.slice(offset)\n  }\n  return new this(buffer)\n}\n\n/**\n * The \"set\" function of the Struct \"type\" interface\n */\n\nfunction set (buffer, offset, value) {\n  debug('Struct \"type\" setter for buffer at offset', buffer, offset, value)\n  var isStruct = value instanceof this\n  if (isStruct) {\n    // optimization: copy the buffer contents directly rather\n    // than going through the ref-struct constructor\n    value['ref.buffer'].copy(buffer, offset, 0, this.size)\n  } else {\n    if (offset > 0) {\n      buffer = buffer.slice(offset)\n    }\n    new this(buffer, value)\n  }\n}\n\n/**\n * Custom `toString()` override for struct type instances.\n */\n\nfunction toString () {\n  return '[StructType]'\n}\n\n/**\n * Adds a new field to the struct instance with the given name and type.\n * Note that this function will throw an Error if any instances of the struct\n * type have already been created, therefore this function must be called at the\n * beginning, before any instances are created.\n */\n\nfunction defineProperty (name, type) {\n  debug('defining new struct type field', name)\n\n  // allow string types for convenience\n  type = ref.coerceType(type)\n\n  assert(!this._instanceCreated, 'an instance of this Struct type has already ' +\n      'been created, cannot add new \"fields\" anymore')\n  assert.equal('string', typeof name, 'expected a \"string\" field name')\n  assert(type && /object|function/i.test(typeof type) && 'size' in type &&\n      'indirection' in type\n      , 'expected a \"type\" object describing the field type: \"' + type + '\"')\n  assert(type.indirection > 1 || type.size > 0,\n      '\"type\" object must have a size greater than 0')\n  assert(!(name in this.prototype), 'the field \"' + name +\n      '\" already exists in this Struct type')\n\n  var field = {\n    type: type\n  }\n  this.fields[name] = field\n\n  // define the getter/setter property\n  var desc = { enumerable: true , configurable: true }\n  desc.get = function () {\n    debug('getting \"%s\" struct field (offset: %d)', name, field.offset)\n    return ref.get(this['ref.buffer'], field.offset, type)\n  }\n  desc.set = function (value) {\n    debug('setting \"%s\" struct field (offset: %d)', name, field.offset, value)\n    return ref.set(this['ref.buffer'], field.offset, value, type)\n  }\n\n  // calculate the new size and field offsets\n  recalc(this)\n\n  Object.defineProperty(this.prototype, name, desc)\n}\n\nfunction recalc (struct) {\n\n  // reset size and alignment\n  struct.size = 0\n  struct.alignment = 0\n\n  var fieldNames = Object.keys(struct.fields)\n\n  // first loop through is to determine the `alignment` of this struct\n  fieldNames.forEach(function (name) {\n    var field = struct.fields[name]\n    var type = field.type\n    var alignment = type.alignment || ref.alignof.pointer\n    if (type.indirection > 1) {\n      alignment = ref.alignof.pointer\n    }\n    if (struct.isPacked) {\n      struct.alignment = Math.min(struct.alignment || alignment, alignment)\n    } else {\n      struct.alignment = Math.max(struct.alignment, alignment)\n    }\n  })\n\n  // second loop through sets the `offset` property on each \"field\"\n  // object, and sets the `struct.size` as we go along\n  fieldNames.forEach(function (name) {\n    var field = struct.fields[name]\n    var type = field.type\n\n    if (null != type.fixedLength) {\n      // \"ref-array\" types set the \"fixedLength\" prop. don't treat arrays like one\n      // contiguous entity. instead, treat them like individual elements in the\n      // struct. doing this makes the padding end up being calculated correctly.\n      field.offset = addType(type.type)\n      for (var i = 1; i < type.fixedLength; i++) {\n        addType(type.type)\n      }\n    } else {\n      field.offset = addType(type)\n    }\n  })\n\n  function addType (type) {\n    var offset = struct.size\n    var align = type.indirection === 1 ? type.alignment : ref.alignof.pointer\n    var padding = struct.isPacked ? 0 : (align - (offset % align)) % align\n    var size = type.indirection === 1 ? type.size : ref.sizeof.pointer\n\n    offset += padding\n\n    if (!struct.isPacked) {\n      assert.equal(offset % align, 0, \"offset should align\")\n    }\n\n    // adjust the \"size\" of the struct type\n    struct.size = offset + size\n\n    // return the calulated offset\n    return offset\n  }\n\n  // any final padding?\n  var left = struct.size % struct.alignment\n  if (left > 0) {\n    debug('additional padding to the end of struct:', struct.alignment - left)\n    struct.size += struct.alignment - left\n  }\n}\n\n/**\n * this is the custom prototype of Struct type instances.\n */\n\nvar proto = {}\n\n/**\n * set a placeholder variable on the prototype so that defineProperty() will\n * throw an error if you try to define a struct field with the name \"buffer\".\n */\n\nproto['ref.buffer'] = ref.NULL\n\n/**\n * Flattens the Struct instance into a regular JavaScript Object. This function\n * \"gets\" all the defined properties.\n *\n * @api public\n */\n\nproto.toObject = function toObject () {\n  var obj = {}\n  Object.keys(this.constructor.fields).forEach(function (k) {\n    obj[k] = this[k]\n  }, this)\n  return obj\n}\n\n/**\n * Basic `JSON.stringify(struct)` support.\n */\n\nproto.toJSON = function toJSON () {\n  return this.toObject()\n}\n\n/**\n * `.inspect()` override. For the REPL.\n *\n * @api public\n */\n\nproto.inspect = function inspect () {\n  var obj = this.toObject()\n  // add instance's \"own properties\"\n  Object.keys(this).forEach(function (k) {\n    obj[k] = this[k]\n  }, this)\n  return util.inspect(obj)\n}\n\n/**\n * returns a Buffer pointing to this struct data structure.\n */\n\nproto.ref = function ref () {\n  return this['ref.buffer']\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ref-struct/lib/struct.js\n// module id = 31\n// module chunks = 0","module.exports = require(\"assert\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"assert\"\n// module id = 32\n// module chunks = 0","module.exports = require('./dist/enum');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/enum/index.js\n// module id = 33\n// module chunks = 0","\"use strict\";\n\nvar _interopRequire = function (obj) { return obj && obj.__esModule ? obj[\"default\"] : obj; };\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar os = _interopRequire(require(\"os\"));\n\nvar EnumItem = _interopRequire(require(\"./enumItem\"));\n\nvar _isType = require(\"./isType\");\n\nvar isString = _isType.isString;\nvar isNumber = _isType.isNumber;\n\nvar indexOf = require(\"./indexOf\").indexOf;\n\nvar isBuffer = _interopRequire(require(\"is-buffer\"));\n\nvar endianness = os.endianness();\n\n/**\n * Represents an Enum with enum items.\n * @param {Array || Object}  map     This are the enum items.\n * @param {String || Object} options This are options. [optional]\n */\n\nvar Enum = (function () {\n  function Enum(map, options) {\n    var _this = this;\n\n    _classCallCheck(this, Enum);\n\n    /* implement the \"ref type interface\", so that Enum types can\n     * be used in `node-ffi` function declarations and invokations.\n     * In C, these Enums act as `uint32_t` types.\n     *\n     * https://github.com/TooTallNate/ref#the-type-interface\n     */\n    this.size = 4;\n    this.indirection = 1;\n\n    if (options && isString(options)) {\n      options = { name: options };\n    }\n\n    this._options = options || {};\n    this._options.separator = this._options.separator || \" | \";\n    this._options.endianness = this._options.endianness || endianness;\n    this._options.ignoreCase = this._options.ignoreCase || false;\n    this._options.freez = this._options.freez || false;\n\n    this.enums = [];\n\n    if (map.length) {\n      this._enumLastIndex = map.length;\n      var array = map;\n      map = {};\n\n      for (var i = 0; i < array.length; i++) {\n        map[array[i]] = Math.pow(2, i);\n      }\n    }\n\n    for (var member in map) {\n      guardReservedKeys(this._options.name, member);\n      this[member] = new EnumItem(member, map[member], { ignoreCase: this._options.ignoreCase });\n      this.enums.push(this[member]);\n    }\n    this._enumMap = map;\n\n    if (this._options.ignoreCase) {\n      this.getLowerCaseEnums = function () {\n        var res = {};\n        for (var i = 0, len = this.enums.length; i < len; i++) {\n          res[this.enums[i].key.toLowerCase()] = this.enums[i];\n        }\n        return res;\n      };\n    }\n\n    if (this._options.name) {\n      this.name = this._options.name;\n    }\n\n    var isFlaggable = function () {\n      for (var i = 0, len = _this.enums.length; i < len; i++) {\n        var e = _this.enums[i];\n\n        if (!(e.value !== 0 && !(e.value & e.value - 1))) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    this.isFlaggable = isFlaggable();\n    if (this._options.freez) {\n      this.freezeEnums(); //this will make instances of Enum non-extensible\n    }\n  }\n\n  /**\n   * Returns the appropriate EnumItem key.\n   * @param  {EnumItem || String || Number} key The object to get with.\n   * @return {String}                           The get result.\n   */\n\n  Enum.prototype.getKey = function getKey(value) {\n    var item = this.get(value);\n    if (item) {\n      return item.key;\n    }\n  };\n\n  /**\n   * Returns the appropriate EnumItem value.\n   * @param  {EnumItem || String || Number} key The object to get with.\n   * @return {Number}                           The get result.\n   */\n\n  Enum.prototype.getValue = function getValue(key) {\n    var item = this.get(key);\n    if (item) {\n      return item.value;\n    }\n  };\n\n  /**\n   * Returns the appropriate EnumItem.\n   * @param  {EnumItem || String || Number} key The object to get with.\n   * @return {EnumItem}                         The get result.\n   */\n\n  Enum.prototype.get = function get(key, offset) {\n    if (key === null || key === undefined) {\n      return;\n    } // Buffer instance support, part of the ref Type interface\n    if (isBuffer(key)) {\n      key = key[\"readUInt32\" + this._options.endianness](offset || 0);\n    }\n\n    if (EnumItem.isEnumItem(key)) {\n      var foundIndex = indexOf.call(this.enums, key);\n      if (foundIndex >= 0) {\n        return key;\n      }\n      if (!this.isFlaggable || this.isFlaggable && key.key.indexOf(this._options.separator) < 0) {\n        return;\n      }\n      return this.get(key.key);\n    } else if (isString(key)) {\n\n      var enums = this;\n      if (this._options.ignoreCase) {\n        enums = this.getLowerCaseEnums();\n        key = key.toLowerCase();\n      }\n\n      if (key.indexOf(this._options.separator) > 0) {\n        var parts = key.split(this._options.separator);\n\n        var value = 0;\n        for (var i = 0; i < parts.length; i++) {\n          var part = parts[i];\n\n          value |= enums[part].value;\n        }\n\n        return new EnumItem(key, value);\n      } else {\n        return enums[key];\n      }\n    } else {\n      for (var m in this) {\n        if (this.hasOwnProperty(m)) {\n          if (this[m].value === key) {\n            return this[m];\n          }\n        }\n      }\n\n      var result = null;\n\n      if (this.isFlaggable) {\n        for (var n in this) {\n          if (this.hasOwnProperty(n)) {\n            if ((key & this[n].value) !== 0) {\n              if (result) {\n                result += this._options.separator;\n              } else {\n                result = \"\";\n              }\n              result += n;\n            }\n          }\n        }\n      }\n\n      return this.get(result || null);\n    }\n  };\n\n  /**\n   * Sets the Enum \"value\" onto the give `buffer` at the specified `offset`.\n   * Part of the ref \"Type interface\".\n   *\n   * @param  {Buffer} buffer The Buffer instance to write to.\n   * @param  {Number} offset The offset in the buffer to write to. Default 0.\n   * @param  {EnumItem || String || Number} value The EnumItem to write.\n   */\n\n  Enum.prototype.set = function set(buffer, offset, value) {\n    var item = this.get(value);\n    if (item) {\n      return buffer[\"writeUInt32\" + this._options.endianness](item.value, offset || 0);\n    }\n  };\n\n  /**\n   * Define freezeEnums() as a property of the prototype.\n   * make enumerable items nonconfigurable and deep freeze the properties. Throw Error on property setter.\n   */\n\n  Enum.prototype.freezeEnums = function freezeEnums() {\n    function envSupportsFreezing() {\n      return Object.isFrozen && Object.isSealed && Object.getOwnPropertyNames && Object.getOwnPropertyDescriptor && Object.defineProperties && Object.__defineGetter__ && Object.__defineSetter__;\n    }\n\n    function freezer(o) {\n      var props = Object.getOwnPropertyNames(o);\n      props.forEach(function (p) {\n        if (!Object.getOwnPropertyDescriptor(o, p).configurable) {\n          return;\n        }\n\n        Object.defineProperties(o, p, { writable: false, configurable: false });\n      });\n      return o;\n    }\n\n    function getPropertyValue(value) {\n      return value;\n    }\n\n    function deepFreezeEnums(o) {\n      if (typeof o !== \"object\" || o === null || Object.isFrozen(o) || Object.isSealed(o)) {\n        return;\n      }\n      for (var key in o) {\n        if (o.hasOwnProperty(key)) {\n          o.__defineGetter__(key, getPropertyValue.bind(null, o[key]));\n          o.__defineSetter__(key, function throwPropertySetError(value) {\n            throw TypeError(\"Cannot redefine property; Enum Type is not extensible.\");\n          });\n          deepFreezeEnums(o[key]);\n        }\n      }\n      if (Object.freeze) {\n        Object.freeze(o);\n      } else {\n        freezer(o);\n      }\n    }\n\n    if (envSupportsFreezing()) {\n      deepFreezeEnums(this);\n    }\n\n    return this;\n  };\n\n  /**\n   * Return true whether the enumItem parameter passed in is an EnumItem object and \n   * has been included as constant of this Enum   \n   * @param  {EnumItem} enumItem\n   */\n\n  Enum.prototype.isDefined = function isDefined(enumItem) {\n    var condition = function (e) {\n      return e === enumItem;\n    };\n    if (isString(enumItem) || isNumber(enumItem)) {\n      condition = function (e) {\n        return e.is(enumItem);\n      };\n    }\n    return this.enums.some(condition);\n  };\n\n  /**\n   * Returns JSON object representation of this Enum.\n   * @return {String} JSON object representation of this Enum.\n   */\n\n  Enum.prototype.toJSON = function toJSON() {\n    return this._enumMap;\n  };\n\n  /**\n   * Extends the existing Enum with a New Map.\n   * @param  {Array}  map  Map to extend from\n   */\n\n  Enum.prototype.extend = function extend(map) {\n    if (map.length) {\n      var array = map;\n      map = {};\n\n      for (var i = 0; i < array.length; i++) {\n        var exponent = this._enumLastIndex + i;\n        map[array[i]] = Math.pow(2, exponent);\n      }\n\n      for (var member in map) {\n        guardReservedKeys(this._options.name, member);\n        this[member] = new EnumItem(member, map[member], { ignoreCase: this._options.ignoreCase });\n        this.enums.push(this[member]);\n      }\n\n      for (var key in this._enumMap) {\n        map[key] = this._enumMap[key];\n      }\n\n      this._enumLastIndex += map.length;\n      this._enumMap = map;\n\n      if (this._options.freez) {\n        this.freezeEnums(); //this will make instances of new Enum non-extensible\n      }\n    }\n  };\n\n  /**\n   * Registers the Enum Type globally in node.js.\n   * @param  {String} key Global variable. [optional]\n   */\n\n  Enum.register = function register() {\n    var key = arguments[0] === undefined ? \"Enum\" : arguments[0];\n\n    if (!global[key]) {\n      global[key] = Enum;\n    }\n  };\n\n  return Enum;\n})();\n\nmodule.exports = Enum;\n\n// private\n\nvar reservedKeys = [\"_options\", \"get\", \"getKey\", \"getValue\", \"enums\", \"isFlaggable\", \"_enumMap\", \"toJSON\", \"_enumLastIndex\"];\n\nfunction guardReservedKeys(customName, key) {\n  if (customName && key === \"name\" || indexOf.call(reservedKeys, key) >= 0) {\n    throw new Error(\"Enum key \" + key + \" is a reserved word!\");\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/enum/dist/enum.js\n// module id = 34\n// module chunks = 0","\"use strict\";\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar _isType = require(\"./isType\");\n\nvar isObject = _isType.isObject;\nvar isString = _isType.isString;\n\n/**\n * Represents an Item of an Enum.\n * @param {String} key   The Enum key.\n * @param {Number} value The Enum value.\n */\n\nvar EnumItem = (function () {\n\n  /*constructor reference so that, this.constructor===EnumItem//=>true */\n\n  function EnumItem(key, value) {\n    var options = arguments[2] === undefined ? {} : arguments[2];\n\n    _classCallCheck(this, EnumItem);\n\n    this.key = key;\n    this.value = value;\n\n    this._options = options;\n    this._options.ignoreCase = this._options.ignoreCase || false;\n  }\n\n  /**\n   * Checks if the flagged EnumItem has the passing object.\n   * @param  {EnumItem || String || Number} value The object to check with.\n   * @return {Boolean}                            The check result.\n   */\n\n  EnumItem.prototype.has = function has(value) {\n    if (EnumItem.isEnumItem(value)) {\n      return (this.value & value.value) !== 0;\n    } else if (isString(value)) {\n      if (this._options.ignoreCase) {\n        return this.key.toLowerCase().indexOf(value.toLowerCase()) >= 0;\n      }\n      return this.key.indexOf(value) >= 0;\n    } else {\n      return (this.value & value) !== 0;\n    }\n  };\n\n  /**\n   * Checks if the EnumItem is the same as the passing object.\n   * @param  {EnumItem || String || Number} key The object to check with.\n   * @return {Boolean}                          The check result.\n   */\n\n  EnumItem.prototype.is = function is(key) {\n    if (EnumItem.isEnumItem(key)) {\n      return this.key === key.key;\n    } else if (isString(key)) {\n      if (this._options.ignoreCase) {\n        return this.key.toLowerCase() === key.toLowerCase();\n      }\n      return this.key === key;\n    } else {\n      return this.value === key;\n    }\n  };\n\n  /**\n   * Returns String representation of this EnumItem.\n   * @return {String} String representation of this EnumItem.\n   */\n\n  EnumItem.prototype.toString = function toString() {\n    return this.key;\n  };\n\n  /**\n   * Returns JSON object representation of this EnumItem.\n   * @return {String} JSON object representation of this EnumItem.\n   */\n\n  EnumItem.prototype.toJSON = function toJSON() {\n    return this.key;\n  };\n\n  /**\n   * Returns the value to compare with.\n   * @return {String} The value to compare with.\n   */\n\n  EnumItem.prototype.valueOf = function valueOf() {\n    return this.value;\n  };\n\n  EnumItem.isEnumItem = function isEnumItem(value) {\n    return value instanceof EnumItem || isObject(value) && value.key !== undefined && value.value !== undefined;\n  };\n\n  return EnumItem;\n})();\n\nmodule.exports = EnumItem;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/enum/dist/enumItem.js\n// module id = 35\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\nvar isType = function (type, value) {\n  return typeof value === type;\n};\nexports.isType = isType;\nvar isObject = function (value) {\n  return isType(\"object\", value);\n};\nexports.isObject = isObject;\nvar isString = function (value) {\n  return isType(\"string\", value);\n};\nexports.isString = isString;\nvar isNumber = function (value) {\n  return isType(\"number\", value);\n};\nexports.isNumber = isNumber;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/enum/dist/isType.js\n// module id = 36\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\nvar indexOf = Array.prototype.indexOf || function (find, i /*opt*/) {\n  if (i === undefined) i = 0;\n  if (i < 0) i += this.length;\n  if (i < 0) i = 0;\n  for (var n = this.length; i < n; i++) if (i in this && this[i] === find) return i;\n  return -1;\n};\nexports.indexOf = indexOf;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/enum/dist/indexOf.js\n// module id = 37\n// module chunks = 0","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/is-buffer/index.js\n// module id = 38\n// module chunks = 0","import ref from 'ref';\r\nimport ArrayType from 'ref-array';\r\nimport * as types from './types';\r\n\r\nexport const parseArray = (type, arrayBuf, len) => {\r\n  if (len === 0) {\r\n    return [];\r\n  }\r\n  const arrPtr = ref.reinterpret(arrayBuf, type.size * len);\r\n  const ArrType = ArrayType(type);\r\n  return ArrType(arrPtr);\r\n};\r\n\r\nexport const parseAppExchangeInfo = (appExchangeInfo) => {\r\n  if (!(appExchangeInfo instanceof types.AppExchangeInfo)) {\r\n    return;\r\n  }\r\n  return {\r\n    id: appExchangeInfo.id,\r\n    scope: appExchangeInfo.scope,\r\n    name: appExchangeInfo.name,\r\n    vendor: appExchangeInfo.vendor\r\n  };\r\n};\r\n\r\nexport const parsePermissionArray = (permissionArray, len) => {\r\n  const res = [];\r\n  let i = 0;\r\n  const permissions = parseArray(types.Permission, permissionArray, len);\r\n  for (i = 0; i < permissions.length; i++) {\r\n    res.push(permissions[i].key);\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const parseContainerPermissions = (containerPermissions) => {\r\n  if (!(containerPermissions instanceof types.ContainerPermissions)) {\r\n    return;\r\n  }\r\n  return {\r\n    cont_name: containerPermissions.cont_name,\r\n    access: parsePermissionArray(containerPermissions.access, containerPermissions.access_len),\r\n    access_len: containerPermissions.access_len,\r\n    access_cap: containerPermissions.access_cap\r\n  };\r\n};\r\n\r\nexport const parseContainerPermissionsArray = (containerPermissionsArray, len) => {\r\n  const res = [];\r\n  let i = 0;\r\n  const contArr = parseArray(types.ContainerPermissions, containerPermissionsArray, len);\r\n  for (i = 0; i < contArr.length; i++) {\r\n    res.push(parseContainerPermissions(contArr[i]));\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const parseRegisteredApp = (registeredApp) => {\r\n  if (!(registeredApp instanceof types.RegisteredApp)) {\r\n    return;\r\n  }\r\n  return {\r\n    app_info: parseAppExchangeInfo(registeredApp.app_info),\r\n    containers: parseContainerPermissionsArray(registeredApp.containers,\r\n      registeredApp.containers_len),\r\n    containers_len: registeredApp.containers_len,\r\n    containers_cap: registeredApp.containers_cap\r\n  };\r\n};\r\n\r\nexport const parseRegisteredAppArray = (registeredAppArray, len) => {\r\n  const res = [];\r\n  let i = 0;\r\n  const registeredApps = parseArray(types.RegisteredApp, registeredAppArray, len);\r\n  for (i = 0; i < registeredApps.length; i++) {\r\n    res.push(parseRegisteredApp(registeredApps[i]));\r\n  }\r\n  return res;\r\n};\r\n\r\nexport const parseAuthReq = (authReq) => {\r\n  if (!(authReq instanceof types.AuthReq)) {\r\n    return;\r\n  }\r\n  return {\r\n    app: parseAppExchangeInfo(authReq.app),\r\n    app_container: authReq.app_container,\r\n    containers: parseContainerPermissionsArray(authReq.containers, authReq.containers_len),\r\n    containers_len: authReq.containers_len,\r\n    containers_cap: authReq.containers_cap\r\n  };\r\n};\r\n\r\nexport const parseContainerReq = (containersReq) => {\r\n  if (!(containersReq instanceof types.ContainersReq)) {\r\n    return;\r\n  }\r\n  return {\r\n    app: parseAppExchangeInfo(containersReq.app),\r\n    containers: parseContainerPermissionsArray(containersReq.containers,\r\n      containersReq.containers_len),\r\n    containers_len: containersReq.containers_len,\r\n    containers_cap: containersReq.containers_cap\r\n  };\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// src/ffi/refs/typesParser.js","\n/**\n * Module dependencies.\n */\n\nvar _ref = require('ref')\nvar assert = require('assert')\nvar debug = require('debug')('ref:array')\nvar ArrayIndex = require('array-index')\nvar isArray = Array.isArray\n\n/**\n * The Array \"type\" constructor.\n * The returned constructor's API is highly influenced by the WebGL\n * TypedArray API.\n */\n\nmodule.exports = function Array (_type, _length) {\n  debug('defining new array \"type\"')\n  var type = _ref.coerceType(_type)\n  var fixedLength = _length | 0\n\n  /**\n   * This is the ArrayType \"constructor\" that gets returned.\n   */\n\n  function ArrayType (data, length) {\n    if (!(this instanceof ArrayType)) {\n      return new ArrayType(data, length)\n    }\n    debug('creating new array instance')\n    ArrayIndex.call(this)\n    var item_size = ArrayType.BYTES_PER_ELEMENT\n    if (0 === arguments.length) {\n      // new IntArray()\n      // use the \"fixedLength\" if provided, otherwise throw an Error\n      if (fixedLength > 0) {\n        this.length = fixedLength\n        this.buffer = new Buffer(this.length * item_size)\n      } else {\n        throw new Error('A \"length\", \"array\" or \"buffer\" must be passed as the first argument')\n      }\n    } else if ('number' == typeof data) {\n      // new IntArray(69)\n      this.length = data\n      this.buffer = new Buffer(this.length * item_size)\n    } else if (isArray(data)) {\n      // new IntArray([ 1, 2, 3, 4, 5 ], {len})\n      // use optional \"length\" if provided, otherwise use \"fixedLength, otherwise\n      // use the Array's .length\n      var len = 0\n      if (null != length) {\n        len = length\n      } else if (fixedLength > 0) {\n        len = fixedLength\n      } else {\n        len = data.length\n      }\n      if (data.length < len) {\n        throw new Error('array length must be at least ' + len + ', got ' + data.length)\n      }\n      this.length = len\n      this.buffer = new Buffer(len * item_size)\n      for (var i = 0; i < len; i++) {\n        this[i] = data[i]\n      }\n    } else if (Buffer.isBuffer(data)) {\n      // new IntArray(Buffer(8))\n      var len = 0\n      if (null != length) {\n        len = length\n      } else if (fixedLength > 0) {\n        len = fixedLength\n      } else {\n        len = data.length / item_size | 0\n      }\n      var expectedLength = item_size * len\n      this.length = len\n      if (data.length != expectedLength) {\n        if (data.length < expectedLength) {\n          throw new Error('buffer length must be at least ' + expectedLength + ', got ' + data.length)\n        } else {\n          debug('resizing buffer from %d to %d', data.length, expectedLength)\n          data = data.slice(0, expectedLength)\n        }\n      }\n      this.buffer = data\n    }\n  }\n\n  // make array instances inherit from our `ArrayIndex.prototype`\n  ArrayType.prototype = Object.create(ArrayIndex.prototype, {\n    constructor: {\n      value: ArrayType,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    },\n    // \"buffer\" is the backing buffer instance\n    buffer: {\n      value: _ref.NULL,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    },\n    // \"node-ffi\" calls this when passed an array instance to an ffi'd function\n    ref: {\n      value: ref,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    },\n    // \"slice\" implementation\n    slice: {\n      value: slice,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    }\n  })\n\n  // part of the \"array-index\" interface\n  ArrayType.prototype[ArrayIndex.get] = getter\n  ArrayType.prototype[ArrayIndex.set] = setter\n\n  // save down the \"fixedLength\" if specified. \"ref-struct\" needs this value\n  if (fixedLength > 0) {\n    ArrayType.fixedLength = fixedLength\n  }\n\n  // keep a reference to the base \"type\"\n  ArrayType.type = type\n  ArrayType.BYTES_PER_ELEMENT = type.indirection == 1 ? type.size : _ref.sizeof.pointer\n  assert(ArrayType.BYTES_PER_ELEMENT > 0)\n\n  // the ref \"type\" interface\n  if (fixedLength > 0) {\n    // this \"type\" is probably going in a ref-struct or being used manually\n    ArrayType.size = ArrayType.BYTES_PER_ELEMENT * fixedLength\n    ArrayType.alignment = type.alignment\n    ArrayType.indirection = 1\n    ArrayType.get = get\n    ArrayType.set = set\n  } else {\n    // this \"type\" is probably an argument/return value for a node-ffi function\n    ArrayType.size = _ref.sizeof.pointer\n    ArrayType.alignment = _ref.alignof.pointer\n    ArrayType.indirection = 1\n    ArrayType.get = getRef\n    ArrayType.set = setRef\n  }\n\n  // untilZeros() function\n  ArrayType.untilZeros = untilZeros\n\n  return ArrayType\n}\n\n/**\n * The \"get\" function of the Array \"type\" interface.\n * Most likely invoked when accessing within a \"ref-struct\" type.\n */\n\nfunction get (buffer, offset) {\n  debug('Array \"type\" getter for buffer at offset', offset)\n  if (offset > 0) {\n    buffer = buffer.slice(offset)\n  }\n  return new this(buffer)\n}\n\n/**\n * The \"set\" function of the Array \"type\" interface.\n * Most likely invoked when setting within a \"ref-struct\" type.\n */\n\nfunction set (buffer, offset, value) {\n  debug('Array \"type\" setter for buffer at offset', buffer, offset, value)\n  var array = this.get(buffer, offset)\n  var isInstance = value instanceof this\n  if (isInstance || isArray(value)) {\n    for (var i = 0; i < value.length; i++) {\n      array[i] = value[i]\n    }\n  } else {\n    throw new Error('not sure how to set into Array: ' + value)\n  }\n}\n\n/**\n * Reads a pointer from the given offset and returns a new \"array\" instance of\n * this type.\n * Most likely invoked when getting an array instance back as a return value from\n * an FFI'd function.\n */\n\nfunction getRef (buffer, offset) {\n  debug('Array reference \"type\" getter for buffer at offset', offset)\n  return new this(buffer.readPointer(offset))\n}\n\n/**\n * Most likely invoked when passing an array instance as an argument to an FFI'd\n * function.\n */\n\nfunction setRef (buffer, offset, value) {\n  debug('Array reference \"type\" setter for buffer at offset', offset)\n  var ptr\n  if (value instanceof this) {\n    ptr = value.buffer\n  } else {\n    ptr = new this(value).buffer\n  }\n  _ref.writePointer(buffer, offset, ptr)\n}\n\n/**\n * Returns a reference to the backing buffer of this Array instance.\n *\n * i.e. if the array represents `int[]` (a.k.a. `int *`),\n *      then the returned Buffer represents `int (*)[]` (a.k.a. `int **`)\n */\n\nfunction ref () {\n  debug('ref()')\n  var type = this.constructor\n  var origSize = this.buffer.length\n  var r = _ref.ref(this.buffer)\n  r.type = Object.create(_ref.types.CString)\n  r.type.get = function (buf, offset) {\n    return new type(_ref.readPointer(buf, offset | 0, origSize))\n  }\n  r.type.set = function () {\n    assert(0, 'implement!!!')\n  }\n  return r\n}\n\n/**\n * The \"getter\" implementation for the \"array-index\" interface.\n */\n\nfunction getter (index) {\n  debug('getting array[%d]', index)\n  var size = this.constructor.BYTES_PER_ELEMENT\n  var baseType = this.constructor.type\n  var offset = size * index\n  var end = offset + size\n  var buffer = this.buffer\n  if (buffer.length < end) {\n    debug('reinterpreting buffer from %d to %d', buffer.length, end)\n    buffer = _ref.reinterpret(buffer, end)\n  }\n  return _ref.get(buffer, offset, baseType)\n}\n\n/**\n * The \"setter\" implementation for  the \"array-index\" interface.\n */\n\nfunction setter (index, value) {\n  debug('setting array[%d]', index)\n  var size = this.constructor.BYTES_PER_ELEMENT\n  var baseType = this.constructor.type\n  var offset = size * index\n  var end = offset + size\n  var buffer = this.buffer\n  if (buffer.length < end) {\n    debug('reinterpreting buffer from %d to %d', buffer.length, end)\n    buffer = _ref.reinterpret(buffer, end)\n  }\n  // TODO: DRY with getter()\n\n  _ref.set(buffer, offset, value, baseType)\n  return value\n}\n\n/**\n * The \"slice\" implementation.\n */\n\nfunction slice (start, end) {\n  var data\n\n  if (end) {\n    debug('slicing array from %d to %d', start, end)\n    data = this.buffer.slice(start*this.constructor.BYTES_PER_ELEMENT, end*this.constructor.BYTES_PER_ELEMENT)\n  } else {\n    debug('slicing array from %d', start)\n    data = this.buffer.slice(start*this.constructor.BYTES_PER_ELEMENT)\n  }\n\n  return new this.constructor(data)\n}\n\n/**\n * Accepts a Buffer instance that should be an already-populated with data for the\n * ArrayType. The \"length\" of the Array is determined by searching through the\n * buffer's contents until an aligned NULL pointer is encountered.\n *\n * @param {Buffer} buffer the null-terminated buffer to convert into an Array\n * @api public\n */\n\nfunction untilZeros (buffer) {\n  return new this(_ref.reinterpretUntilZeros(buffer, this.type.size))\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ref-array/lib/array.js\n// module id = 40\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar Symbol = require('es6-symbol');\nvar debug = require('debug')('array-index');\n\nvar get = Symbol('get');\nvar set = Symbol('set');\nvar length = Symbol('length');\n\n/**\n * JavaScript Array \"length\" is bound to an unsigned 32-bit int.\n * See: http://stackoverflow.com/a/6155063/376773\n */\n\nvar MAX_LENGTH = Math.pow(2, 32);\n\n/**\n * Module exports.\n */\n\nmodule.exports = ArrayIndex;\nArrayIndex.get = get;\nArrayIndex.set = set;\n\n/**\n * Subclass this.\n */\n\nfunction ArrayIndex (_length) {\n  Object.defineProperty(this, 'length', {\n    get: getLength,\n    set: setLength,\n    enumerable: false,\n    configurable: true\n  });\n\n  this[length] = 0;\n\n  if (arguments.length > 0) {\n    setLength.call(this, _length);\n  }\n}\n\n/**\n * You overwrite the \"get\" Symbol in your subclass.\n */\n\nArrayIndex.prototype[ArrayIndex.get] = function () {\n  throw new Error('you must implement the `ArrayIndex.get` Symbol');\n};\n\n/**\n * You overwrite the \"set\" Symbol in your subclass.\n */\n\nArrayIndex.prototype[ArrayIndex.set] = function () {\n  throw new Error('you must implement the `ArrayIndex.set` Symbol');\n};\n\n/**\n * Converts this array class into a real JavaScript Array. Note that this\n * is a \"flattened\" array and your defined getters and setters won't be invoked\n * when you interact with the returned Array. This function will call the\n * getter on every array index of the object.\n *\n * @return {Array} The flattened array\n * @api public\n */\n\nArrayIndex.prototype.toArray = function toArray () {\n  var i = 0;\n  var l = this.length;\n  var array = new Array(l);\n  for (; i < l; i++) {\n    array[i] = this[i];\n  }\n  return array;\n};\n\n/**\n * Basic support for `JSON.stringify()`.\n */\n\nArrayIndex.prototype.toJSON = function toJSON () {\n  return this.toArray();\n};\n\n/**\n * toString() override. Use Array.prototype.toString().\n */\n\nArrayIndex.prototype.toString = function toString () {\n  var a = this.toArray();\n  return a.toString.apply(a, arguments);\n};\n\n/**\n * inspect() override. For the REPL.\n */\n\nArrayIndex.prototype.inspect = function inspect () {\n  var a = this.toArray();\n  Object.keys(this).forEach(function (k) {\n    a[k] = this[k];\n  }, this);\n  return a;\n};\n\n/**\n * Getter for the \"length\" property.\n * Returns the value of the \"length\" Symbol.\n */\n\nfunction getLength () {\n  debug('getting \"length\": %o', this[length]);\n  return this[length];\n};\n\n/**\n * Setter for the \"length\" property.\n * Calls \"ensureLength()\", then sets the \"length\" Symbol.\n */\n\nfunction setLength (v) {\n  debug('setting \"length\": %o', v);\n  return this[length] = ensureLength(this, v);\n};\n\n/**\n * Ensures that getters/setters from 0 up to \"_newLength\" have been defined\n * on `Object.getPrototypeOf(this)`.\n *\n * @api private\n */\n\nfunction ensureLength (self, _newLength) {\n  var newLength;\n  if (_newLength > MAX_LENGTH) {\n    newLength = MAX_LENGTH;\n  } else {\n    newLength = _newLength | 0;\n  }\n  var proto = Object.getPrototypeOf(self);\n  var cur = proto[length] | 0;\n  var num = newLength - cur;\n  if (num > 0) {\n    var desc = {};\n    debug('creating a descriptor object with %o entries', num);\n    for (var i = cur; i < newLength; i++) {\n      desc[i] = setup(i);\n    }\n    debug('calling `Object.defineProperties()` with %o entries', num);\n    Object.defineProperties(proto, desc);\n    proto[length] = newLength;\n  }\n  return newLength;\n}\n\n/**\n * Returns a property descriptor for the given \"index\", with \"get\" and \"set\"\n * functions created within the closure.\n *\n * @api private\n */\n\nfunction setup (index) {\n  function get () {\n    return this[ArrayIndex.get](index);\n  }\n  function set (v) {\n    return this[ArrayIndex.set](index, v);\n  }\n  return {\n    enumerable: true,\n    configurable: true,\n    get: get,\n    set: set\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/array-index/index.js\n// module id = 41\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')() ? Symbol : require('./polyfill');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/index.js\n// module id = 42\n// module chunks = 0","'use strict';\n\nvar validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar symbol;\n\tif (typeof Symbol !== 'function') return false;\n\tsymbol = Symbol('test symbol');\n\ttry { String(symbol); } catch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/is-implemented.js\n// module id = 43\n// module chunks = 0","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n'use strict';\n\nvar d              = require('d')\n  , validateSymbol = require('./validate-symbol')\n\n  , create = Object.create, defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty, objPrototype = Object.prototype\n  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)\n  , isNativeSafe;\n\nif (typeof Symbol === 'function') {\n\tNativeSymbol = Symbol;\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n}\n\nvar generateName = (function () {\n\tvar created = create(null);\n\treturn function (desc) {\n\t\tvar postfix = 0, name, ie11BugWorkaround;\n\t\twhile (created[desc + (postfix || '')]) ++postfix;\n\t\tdesc += (postfix || '');\n\t\tcreated[desc] = true;\n\t\tname = '@@' + desc;\n\t\tdefineProperty(objPrototype, name, d.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t}));\n\t\treturn name;\n\t};\n}());\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError('Symbol is not a constructor');\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError('Symbol is not a constructor');\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = (description === undefined ? '' : String(description));\n\treturn defineProperties(symbol, {\n\t\t__description__: d('', description),\n\t\t__name__: d('', generateName(description))\n\t});\n};\ndefineProperties(SymbolPolyfill, {\n\tfor: d(function (key) {\n\t\tif (globalSymbols[key]) return globalSymbols[key];\n\t\treturn (globalSymbols[key] = SymbolPolyfill(String(key)));\n\t}),\n\tkeyFor: d(function (s) {\n\t\tvar key;\n\t\tvalidateSymbol(s);\n\t\tfor (key in globalSymbols) if (globalSymbols[key] === s) return key;\n\t}),\n\n\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t// fallback to eventual native implementation of given symbol\n\thasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),\n\tisConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\tSymbolPolyfill('isConcatSpreadable')),\n\titerator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),\n\tmatch: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),\n\treplace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),\n\tsearch: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),\n\tspecies: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),\n\tsplit: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),\n\ttoPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),\n\ttoStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),\n\tunscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))\n});\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d('', function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {\n\tvar symbol = validateSymbol(this);\n\tif (typeof symbol === 'symbol') return symbol;\n\treturn symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/polyfill.js\n// module id = 44\n// module chunks = 0","'use strict';\n\nvar assign        = require('es5-ext/object/assign')\n  , normalizeOpts = require('es5-ext/object/normalize-options')\n  , isCallable    = require('es5-ext/object/is-callable')\n  , contains      = require('es5-ext/string/#/contains')\n\n  , d;\n\nd = module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif ((arguments.length < 2) || (typeof dscr !== 'string')) {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (dscr == null) {\n\t\tc = w = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t\tw = contains.call(dscr, 'w');\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== 'string') {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (get == null) {\n\t\tget = undefined;\n\t} else if (!isCallable(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (set == null) {\n\t\tset = undefined;\n\t} else if (!isCallable(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (dscr == null) {\n\t\tc = true;\n\t\te = false;\n\t} else {\n\t\tc = contains.call(dscr, 'c');\n\t\te = contains.call(dscr, 'e');\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d/index.js\n// module id = 45\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? Object.assign\n\t: require('./shim');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/assign/index.js\n// module id = 46\n// module chunks = 0","'use strict';\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== 'function') return false;\n\tobj = { foo: 'raz' };\n\tassign(obj, { bar: 'dwa' }, { trzy: 'trzy' });\n\treturn (obj.foo + obj.bar + obj.trzy) === 'razdwatrzy';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/assign/is-implemented.js\n// module id = 47\n// module chunks = 0","'use strict';\n\nvar keys  = require('../keys')\n  , value = require('../valid-value')\n\n  , max = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, l = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry { dest[key] = src[key]; } catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < l; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/assign/shim.js\n// module id = 48\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? Object.keys\n\t: require('./shim');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/keys/index.js\n// module id = 49\n// module chunks = 0","'use strict';\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys('primitive');\n\t\treturn true;\n\t} catch (e) { return false; }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/keys/is-implemented.js\n// module id = 50\n// module chunks = 0","'use strict';\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) {\n\treturn keys(object == null ? object : Object(object));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/keys/shim.js\n// module id = 51\n// module chunks = 0","'use strict';\n\nmodule.exports = function (value) {\n\tif (value == null) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/valid-value.js\n// module id = 52\n// module chunks = 0","'use strict';\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\nmodule.exports = function (options/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (options == null) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/normalize-options.js\n// module id = 53\n// module chunks = 0","// Deprecated\n\n'use strict';\n\nmodule.exports = function (obj) { return typeof obj === 'function'; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/object/is-callable.js\n// module id = 54\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./is-implemented')()\n\t? String.prototype.contains\n\t: require('./shim');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/string/#/contains/index.js\n// module id = 55\n// module chunks = 0","'use strict';\n\nvar str = 'razdwatrzy';\n\nmodule.exports = function () {\n\tif (typeof str.contains !== 'function') return false;\n\treturn ((str.contains('dwa') === true) && (str.contains('foo') === false));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/string/#/contains/is-implemented.js\n// module id = 56\n// module chunks = 0","'use strict';\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es5-ext/string/#/contains/shim.js\n// module id = 57\n// module chunks = 0","'use strict';\n\nvar isSymbol = require('./is-symbol');\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/validate-symbol.js\n// module id = 58\n// module chunks = 0","'use strict';\n\nmodule.exports = function (x) {\n\tif (!x) return false;\n\tif (typeof x === 'symbol') return true;\n\tif (!x.constructor) return false;\n\tif (x.constructor.name !== 'Symbol') return false;\n\treturn (x[x.constructor.toStringTag] === 'Symbol');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-symbol/is-symbol.js\n// module id = 59\n// module chunks = 0","import ArrayType from 'ref-array';\r\nimport * as types from './types';\r\n\r\nexport const constructAppExchangeInfo = (appInfo) => (\r\n  new types.AppExchangeInfo({\r\n    id: appInfo.id,\r\n    scope: appInfo.scope,\r\n    name: appInfo.name,\r\n    vendor: appInfo.vendor\r\n  })\r\n);\r\n\r\nexport const constructPermissionArray = (permissions) => {\r\n  const PermArray = ArrayType(types.Permission);\r\n  const permArray = new PermArray(permissions.length);\r\n\r\n  permissions.forEach((perm, i) => {\r\n    permArray[i] = types.Permission.get(perm);\r\n  });\r\n  return permArray;\r\n};\r\n\r\nexport const constructContainerPermission = (contPerm) => (\r\n  new types.ContainerPermissions({\r\n    cont_name: contPerm.cont_name,\r\n    access: constructPermissionArray(contPerm.access).buffer,\r\n    access_len: contPerm.access_len,\r\n    access_cap: contPerm.access_len\r\n  })\r\n);\r\n\r\nexport const constructContainerArray = (containers) => {\r\n  const ContArray = ArrayType(types.ContainerPermissions);\r\n  const contArray = new ContArray(containers.length);\r\n\r\n  containers.forEach((cont, i) => {\r\n    contArray[i] = constructContainerPermission(cont);\r\n  });\r\n  return contArray;\r\n};\r\n\r\nexport const constructAuthReq = (authReq) => (\r\n  new types.AuthReq({\r\n    app: constructAppExchangeInfo(authReq.app),\r\n    app_container: authReq.app_container,\r\n    containers: constructContainerArray(authReq.containers).buffer,\r\n    containers_len: authReq.containers_len,\r\n    containers_cap: authReq.containers_cap\r\n  })\r\n);\r\n\r\nexport const constructContainerReq = (contReq) => (\r\n  new types.ContainersReq({\r\n    app: constructAppExchangeInfo(contReq.app),\r\n    containers: constructContainerArray(contReq.containers).buffer,\r\n    containers_len: contReq.containers_len,\r\n    containers_cap: contReq.containers_cap\r\n  })\r\n);\r\n\n\n\n// WEBPACK FOOTER //\n// src/ffi/refs/typesConstructor.js","/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable import/no-unresolved, import/extensions */\r\nimport ffi from 'ffi';\r\n/* eslint-enable import/no-unresolved, import/extensions */\r\nimport os from 'os';\r\nimport path from 'path';\r\nimport CONST from './../constants.json';\r\nimport * as type from './refs/types';\r\n\r\nconst _ffiFunctions = Symbol('ffiFunctions');\r\nconst _libPath = Symbol('libPath');\r\n\r\nclass SystemUriLoader {\r\n  constructor() {\r\n    this[_libPath] = CONST.DEFAULT_SYSTEM_URI_LIB_PATH[os.platform()];\r\n    this[_ffiFunctions] = {\r\n      open: [type.int32, ['string']],\r\n      install: [type.int32, ['string',\r\n        'string',\r\n        'string',\r\n        'string',\r\n        'string',\r\n        'string',\r\n      ]],\r\n    };\r\n    this.lib = ffi.Library(path.resolve(__dirname, this[_libPath]), this[_ffiFunctions]);\r\n  }\r\n\r\n  registerUriScheme(appInfo, schemes) {\r\n    const bundle = appInfo.bundle || appInfo.id;\r\n    const exec = appInfo.exec ? appInfo.exec : process.execPath;\r\n    const vendor = appInfo.vendor;\r\n    const name = appInfo.name;\r\n    const icon = appInfo.icon;\r\n    const joinedSchemes = schemes.join ? schemes.join(',') : schemes;\r\n\r\n    const ret = this.lib.install(bundle, vendor, name, exec, icon, joinedSchemes);\r\n    if (ret === -1) {\r\n      throw new Error(`Error occured installing: ${ret}`);\r\n    }\r\n  }\r\n\r\n  openUri(str) {\r\n    const ret = this.lib.open(str);\r\n    if (ret === -1) {\r\n      throw new Error(`Error occured opening ${str} : ${ret}`);\r\n    }\r\n  }\r\n}\r\n\r\nconst loader = new SystemUriLoader();\r\nexport default loader;\r\n\n\n\n// WEBPACK FOOTER //\n// src/ffi/sys_uri_loader.js","module.exports = {\n\t\"DEFAULT_LIB_PATH\": {\n\t\t\"win32\": \"./safe_authenticator.dll\",\n\t\t\"darwin\": \"./libsafe_authenticator.dylib\",\n\t\t\"linux\": \"./libsafe_authenticator.so\"\n\t},\n\t\"DEFAULT_SYSTEM_URI_LIB_PATH\": {\n\t\t\"win32\": \"./system_uri.dll\",\n\t\t\"darwin\": \"./libsystem_uri.dylib\",\n\t\t\"linux\": \"./libsystem_uri.so\"\n\t},\n\t\"DEFAULT_CLIENT_HANDLE_KEYS\": {\n\t\t\"AUTHENTICATOR\": \"authenticator\"\n\t},\n\t\"NETWORK_STATUS\": {\n\t\t\"CONNECTING\": 0,\n\t\t\"CONNECTED\": 1,\n\t\t\"DISCONNECTED\": 2\n\t},\n\t\"CREATE_ACC_NAV\": {\n\t\t\"WELCOME\": 1,\n\t\t\"INVITE_CODE\": 2,\n\t\t\"SECRET_FORM\": 3,\n\t\t\"PASSWORD_FORM\": 4\n\t},\n\t\"PASSPHRASE_STRENGTH\": {\n\t\t\"VERY_WEAK\": 4,\n\t\t\"WEAK\": 8,\n\t\t\"SOMEWHAT_SECURE\": 10,\n\t\t\"SECURE\": 10\n\t},\n\t\"PASSPHRASE_STRENGTH_MSG\": {\n\t\t\"VERY_WEAK\": \"Very weak\",\n\t\t\"WEAK\": \"Weak\",\n\t\t\"SOMEWHAT_SECURE\": \"Somewhat secure\",\n\t\t\"SECURE\": \"Secure\"\n\t},\n\t\"APP_DEFAULT_PERMISSIONS\": {\n\t\t\"SAFE_DRIVE_ACCESS\": \"SAFE_DRIVE_ACCESS\",\n\t\t\"LOW_LEVEL_API\": \"LOW_LEVEL_API\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/constants.json\n// module id = 62\n// module chunks = 0","export default class FfiApi {\r\n  constructor() {\r\n    this.safeLib = null;\r\n  }\r\n\r\n  setSafeLib(safeLib) {\r\n    this.safeLib = safeLib;\r\n  }\r\n  // Abstract methods\r\n  /* eslint-disable class-methods-use-this */\r\n  /* eslint-disable no-unused-vars */\r\n  drop(safeLib) {}\r\n  /* eslint-enable no-unused-vars */\r\n  getFunctionsToRegister() {}\r\n  /* eslint-enable class-methods-use-this */\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/ffi/FfiApi.js","module.exports = {\n\t\"-1\": \"Encode decode error\",\n\t\"-2\": \"Asymmetric decipher failure\",\n\t\"-3\": \"Symmetric decipher failure\",\n\t\"-4\": \"Received unexpected data\",\n\t\"-5\": \"Received unexpected event\",\n\t\"-6\": \"Version cache miss\",\n\t\"-7\": \"Root directory exists\",\n\t\"-8\": \"Random data generation failure\",\n\t\"-9\": \"Operation forbidden\",\n\t\"-10\": \"Routing error\",\n\t\"-11\": \"Routing interface error\",\n\t\"-12\": \"Unsupported salt size for pw hash\",\n\t\"-13\": \"Unsuccessful pw hash\",\n\t\"-14\": \"Operation aborted\",\n\t\"-15\": \"Mpid messaging error\",\n\t\"-16\": \"Self encryption\",\n\t\"-17\": \"Request timeout\",\n\t\"-100\": \"Access denied\",\n\t\"-101\": \"No such account\",\n\t\"-102\": \"Account exists\",\n\t\"-103\": \"No such data\",\n\t\"-104\": \"Data exists\",\n\t\"-105\": \"Data too large\",\n\t\"-106\": \"No such entry\",\n\t\"-107\": \"Entry exists\",\n\t\"-108\": \"Too many entries\",\n\t\"-109\": \"No such key\",\n\t\"-110\": \"Invalid owners\",\n\t\"-111\": \"Invalid successor\",\n\t\"-112\": \"Invalid operation\",\n\t\"-113\": \"Low balance\",\n\t\"-114\": \"Network full\",\n\t\"-115\": \"Network other\",\n\t\"-200\": \"Auth denied\",\n\t\"-201\": \"Containers denied\",\n\t\"-202\": \"Invalid msg\",\n\t\"-203\": \"Already authorised\",\n\t\"-204\": \"Unknown app\",\n\t\"-205\": \"String error\",\n\t\"-300\": \"Directory exists\",\n\t\"-301\": \"Destination and source are same\",\n\t\"-302\": \"Directory not found\",\n\t\"-303\": \"File exists\",\n\t\"-304\": \"File does not match\",\n\t\"-305\": \"File not found\",\n\t\"-306\": \"Invalid range\",\n\t\"-307\": \"Invalid parameter\",\n\t\"-1013\": \"Io error\",\n\t\"-1014\": \"No such public id\",\n\t\"-1015\": \"Public id exists\",\n\t\"-2000\": \"Unexpected\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ffi/error_code_lookup.json\n// module id = 64\n// module chunks = 0","import client from '../ffi/client_manager';\r\n\r\nexport const manifest = {\r\n  setNetworkListener: 'async',\r\n  setAppListUpdateListener: 'async',\r\n  getNetworkState: 'sync',\r\n  getAuthenticatorHandle: 'sync',\r\n  logout: 'sync',\r\n  login: 'promise',\r\n  createAccount: 'promise',\r\n  getAuthorisedApps: 'promise',\r\n  revokeApp: 'promise'\r\n};\r\n\r\nexport const getAuthenticatorHandle = () => (client.authenticatorHandle);\r\n\r\nexport const authDecision = (authData, isAllowed) =>\r\n  client.authDecision(authData, isAllowed);\r\n\r\nexport const containerDecision = (contData, isAllowed) =>\r\n  client.containerDecision(contData, isAllowed);\r\n\r\nexport const setNetworkIpcListener = (cb) => client.setNetworkIpcListener(cb);\r\n\r\nexport const setNetworkListener = (cb) => client.setNetworkListener(cb);\r\n\r\nexport const getNetworkState = () => (client.networkState);\r\n\r\nexport const setAppListUpdateListener = (cb) => client.setAppListUpdateListener(cb);\r\n\r\nexport const logout = () => client.logout();\r\n\r\nexport const login = (secret, password) => client.login(secret, password);\r\n\r\nexport const createAccount = (secret, password, invitation) =>\r\n  client.createAccount(secret, password, invitation);\r\n\r\nexport const getAuthorisedApps = () => client.getAuthorisedApps();\r\n\r\nexport const revokeApp = (appId) => client.revokeApp(appId);\r\n\r\nexport const decryptRequest = (msg) => client.decryptRequest(msg);\r\n\r\nexport const setAuthReqListener = (cb) => client.setAuthReqListener(cb);\r\n\r\nexport const setContainerReqListener = (cb) => client.setContainerReqListener(cb);\r\n\r\nexport const setReqErrorListener = (cb) => client.setReqErrorListener(cb);\r\n\r\nexport const openUri = (uri) => client.openUri(uri);\r\n\n\n\n// WEBPACK FOOTER //\n// src/api/client.js"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtCA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AACA;AAFA;;;;;;;;;;;;;ACZA;AACA;;;;;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AAHA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;AChEA;;;;;;ACAA;;;;;;ACAA;;;;;;;;;;;;;;ACMA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;;;;;;;AAjBA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAaA;AACA;;;;;AASA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAIA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAvhBA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;AAohBA;;;;;;;ACxkBA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACzpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpPA;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxzphrnitnwEA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AAXA;;;;;;;;;;;;;ACHA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;;;;AC9EA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvvvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpBA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AALA;AAOA;;;;;;ACxnrLA;AACA;AACA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9DA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACRA;AACA;;;AAAA;AACA;AADA;AACA;;;;;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AADA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AADA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AACA;AASA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AADA;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;;;AACA;AACA;;;AAAA;AACA;;;AAAA;AACA;;;AAAA;AACA;AADA;AACA;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAUA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzCA;AACA;AAAA;AACA;AAAA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AACA;;;AAAA;AACA;AACA;;;;;;AAfA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpDA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAWA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;","sourceRoot":""}